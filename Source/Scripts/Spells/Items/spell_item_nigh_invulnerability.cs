// Copyright (c) Forged WoW LLC <https://github.com/ForgedWoW/ForgedCore>
// Licensed under GPL-3.0 license. See <https://github.com/ForgedWoW/ForgedCore/blob/master/LICENSE> for full information.

using System.Collections.Generic;
using Framework.Constants;
using Game.Scripting;
using Game.Scripting.Interfaces;
using Game.Scripting.Interfaces.ISpell;
using Game.Spells;

namespace Scripts.Spells.Items;

[Script]
internal class spell_item_nigh_invulnerability : SpellScript, IHasSpellEffects
{
	public List<ISpellEffect> SpellEffects { get; } = new();

	public override bool Validate(SpellInfo spell)
	{
		return ValidateSpellInfo(ItemSpellIds.NighInvulnerability, ItemSpellIds.CompleteVulnerability);
	}

	public override void Register()
	{
		SpellEffects.Add(new EffectHandler(HandleDummy, 0, SpellEffectName.Dummy, SpellScriptHookType.EffectHitTarget));
	}

	private void HandleDummy(int effIndex)
	{
		var caster   = GetCaster();
		var castItem = GetCastItem();

		if (castItem)
		{
			if (RandomHelper.randChance(86)) // Nigh-Invulnerability   - success
				caster.CastSpell(caster, ItemSpellIds.NighInvulnerability, new CastSpellExtraArgs(castItem));
			else // Complete Vulnerability - backfire in 14% casts
				caster.CastSpell(caster, ItemSpellIds.CompleteVulnerability, new CastSpellExtraArgs(castItem));
		}
	}
}