// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: bgs/low/pb/client/presence_service.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Bgs.Protocol.Presence.V1 {

  /// <summary>Holder for reflection information generated from bgs/low/pb/client/presence_service.proto</summary>
  public static partial class PresenceServiceReflection {

    #region Descriptor
    /// <summary>File descriptor for bgs/low/pb/client/presence_service.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static PresenceServiceReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CihiZ3MvbG93L3BiL2NsaWVudC9wcmVzZW5jZV9zZXJ2aWNlLnByb3RvEhhi",
            "Z3MucHJvdG9jb2wucHJlc2VuY2UudjEaJGJncy9sb3cvcGIvY2xpZW50L2Vu",
            "dGl0eV90eXBlcy5wcm90bxomYmdzL2xvdy9wYi9jbGllbnQvcHJlc2VuY2Vf",
            "dHlwZXMucHJvdG8aIWJncy9sb3cvcGIvY2xpZW50L3JwY190eXBlcy5wcm90",
            "bxo3YmdzL2xvdy9wYi9jbGllbnQvZ2xvYmFsX2V4dGVuc2lvbnMvZmllbGRf",
            "b3B0aW9ucy5wcm90bxo5YmdzL2xvdy9wYi9jbGllbnQvZ2xvYmFsX2V4dGVu",
            "c2lvbnMvbWVzc2FnZV9vcHRpb25zLnByb3RvGjhiZ3MvbG93L3BiL2NsaWVu",
            "dC9nbG9iYWxfZXh0ZW5zaW9ucy9tZXRob2Rfb3B0aW9ucy5wcm90bxo5Ymdz",
            "L2xvdy9wYi9jbGllbnQvZ2xvYmFsX2V4dGVuc2lvbnMvc2VydmljZV9vcHRp",
            "b25zLnByb3RvIvEBChBTdWJzY3JpYmVSZXF1ZXN0EjAKCGFnZW50X2lkGAEg",
            "ASgLMhYuYmdzLnByb3RvY29sLkVudGl0eUlkQgaC+SsCIAESKQoJZW50aXR5",
            "X2lkGAIgAigLMhYuYmdzLnByb3RvY29sLkVudGl0eUlkEhEKCW9iamVjdF9p",
            "ZBgDIAIoBBIlCgdwcm9ncmFtGAQgAygHQhSK+SsGKgQKAggAivkrBioECgIQ",
            "ZBJGCgNrZXkYBiADKAsyIi5iZ3MucHJvdG9jb2wucHJlc2VuY2UudjEuRmll",
            "bGRLZXlCFYr5KwYqBAoCCACK+SsHKgUKAxD0AyKEAQoSVW5zdWJzY3JpYmVS",
            "ZXF1ZXN0EjAKCGFnZW50X2lkGAEgASgLMhYuYmdzLnByb3RvY29sLkVudGl0",
            "eUlkQgaC+SsCIAESKQoJZW50aXR5X2lkGAIgAigLMhYuYmdzLnByb3RvY29s",
            "LkVudGl0eUlkEhEKCW9iamVjdF9pZBgDIAEoBCLCAQoNVXBkYXRlUmVxdWVz",
            "dBIpCgllbnRpdHlfaWQYASACKAsyFi5iZ3MucHJvdG9jb2wuRW50aXR5SWQS",
            "QQoPZmllbGRfb3BlcmF0aW9uGAIgAygLMiguYmdzLnByb3RvY29sLnByZXNl",
            "bmNlLnYxLkZpZWxkT3BlcmF0aW9uEhEKCW5vX2NyZWF0ZRgDIAEoCBIwCghh",
            "Z2VudF9pZBgEIAEoCzIWLmJncy5wcm90b2NvbC5FbnRpdHlJZEIGgvkrAiAB",
            "IrIBCgxRdWVyeVJlcXVlc3QSKQoJZW50aXR5X2lkGAEgAigLMhYuYmdzLnBy",
            "b3RvY29sLkVudGl0eUlkEkUKA2tleRgCIAMoCzIiLmJncy5wcm90b2NvbC5w",
            "cmVzZW5jZS52MS5GaWVsZEtleUIUivkrBioECgIIAIr5KwYqBAoCEGQSMAoI",
            "YWdlbnRfaWQYAyABKAsyFi5iZ3MucHJvdG9jb2wuRW50aXR5SWRCBoL5KwIg",
            "ASI/Cg1RdWVyeVJlc3BvbnNlEi4KBWZpZWxkGAIgAygLMh8uYmdzLnByb3Rv",
            "Y29sLnByZXNlbmNlLnYxLkZpZWxkIo0CChVCYXRjaFN1YnNjcmliZVJlcXVl",
            "c3QSMAoIYWdlbnRfaWQYASABKAsyFi5iZ3MucHJvdG9jb2wuRW50aXR5SWRC",
            "BoL5KwIgARJACgllbnRpdHlfaWQYAiADKAsyFi5iZ3MucHJvdG9jb2wuRW50",
            "aXR5SWRCFYr5KwYqBAoCCAGK+SsHKgUKAxD6ARIlCgdwcm9ncmFtGAMgAygH",
            "QhSK+SsGKgQKAggAivkrBioECgIQZBJGCgNrZXkYBCADKAsyIi5iZ3MucHJv",
            "dG9jb2wucHJlc2VuY2UudjEuRmllbGRLZXlCFYr5KwYqBAoCCACK+SsHKgUK",
            "AxD0AxIRCglvYmplY3RfaWQYBSABKAQiTAoPU3Vic2NyaWJlUmVzdWx0EikK",
            "CWVudGl0eV9pZBgBIAEoCzIWLmJncy5wcm90b2NvbC5FbnRpdHlJZBIOCgZy",
            "ZXN1bHQYAiABKA0iXQoWQmF0Y2hTdWJzY3JpYmVSZXNwb25zZRJDChBzdWJz",
            "Y3JpYmVfZmFpbGVkGAEgAygLMikuYmdzLnByb3RvY29sLnByZXNlbmNlLnYx",
            "LlN1YnNjcmliZVJlc3VsdCKgAQoXQmF0Y2hVbnN1YnNjcmliZVJlcXVlc3QS",
            "MAoIYWdlbnRfaWQYASABKAsyFi5iZ3MucHJvdG9jb2wuRW50aXR5SWRCBoL5",
            "KwIgARJACgllbnRpdHlfaWQYAiADKAsyFi5iZ3MucHJvdG9jb2wuRW50aXR5",
            "SWRCFYr5KwYqBAoCCAGK+SsHKgUKAxD6ARIRCglvYmplY3RfaWQYAyABKAQy",
            "+AcKD1ByZXNlbmNlU2VydmljZRJbCglTdWJzY3JpYmUSKi5iZ3MucHJvdG9j",
            "b2wucHJlc2VuY2UudjEuU3Vic2NyaWJlUmVxdWVzdBoULmJncy5wcm90b2Nv",
            "bC5Ob0RhdGEiDIL5KwIIAYL5KwIQAxJfCgtVbnN1YnNjcmliZRIsLmJncy5w",
            "cm90b2NvbC5wcmVzZW5jZS52MS5VbnN1YnNjcmliZVJlcXVlc3QaFC5iZ3Mu",
            "cHJvdG9jb2wuTm9EYXRhIgyC+SsCCAKC+SsCEAMS5gEKBlVwZGF0ZRInLmJn",
            "cy5wcm90b2NvbC5wcmVzZW5jZS52MS5VcGRhdGVSZXF1ZXN0GhQuYmdzLnBy",
            "b3RvY29sLk5vRGF0YSKcAYL5KwIIA4L5KwIQA4L5Ky8qLWJncy5wcm90b2Nv",
            "bC5hcmNhbmUucHJlc2VuY2UuVXBkYXRlRm9yd2FyZEtleYL5KxZCFFVwZGF0",
            "ZVJlZ2lvblJlc29sdmVygvkrMWIvYm5ldC9hcmNhbmUvc2VydmljZS9wcmVz",
            "ZW5jZV9mb3J3YXJkX2tleXMucHJvdG+C+SsKaghwcmVzZW5jZRL1AQoFUXVl",
            "cnkSJi5iZ3MucHJvdG9jb2wucHJlc2VuY2UudjEuUXVlcnlSZXF1ZXN0Gicu",
            "YmdzLnByb3RvY29sLnByZXNlbmNlLnYxLlF1ZXJ5UmVzcG9uc2UimgGC+SsC",
            "CASC+SsCEAOC+SsuKixiZ3MucHJvdG9jb2wuYXJjYW5lLnByZXNlbmNlLlF1",
            "ZXJ5Rm9yd2FyZEtleYL5KxVCE1F1ZXJ5UmVnaW9uUmVzb2x2ZXKC+SsxYi9i",
            "bmV0L2FyY2FuZS9zZXJ2aWNlL3ByZXNlbmNlX2ZvcndhcmRfa2V5cy5wcm90",
            "b4L5KwpqCHByZXNlbmNlEoEBCg5CYXRjaFN1YnNjcmliZRIvLmJncy5wcm90",
            "b2NvbC5wcmVzZW5jZS52MS5CYXRjaFN1YnNjcmliZVJlcXVlc3QaMC5iZ3Mu",
            "cHJvdG9jb2wucHJlc2VuY2UudjEuQmF0Y2hTdWJzY3JpYmVSZXNwb25zZSIM",
            "gvkrAggIgvkrAhADEmkKEEJhdGNoVW5zdWJzY3JpYmUSMS5iZ3MucHJvdG9j",
            "b2wucHJlc2VuY2UudjEuQmF0Y2hVbnN1YnNjcmliZVJlcXVlc3QaFC5iZ3Mu",
            "cHJvdG9jb2wuTm9EYXRhIgyC+SsCCAmC+SsCEAMaV4L5KygKJmJuZXQucHJv",
            "dG9jb2wucHJlc2VuY2UuUHJlc2VuY2VTZXJ2aWNlgvkrFSoTcHJlc2VuY2Vf",
            "YWdncmVnYXRvcoL5KwIwAYL5KwJIAYr5KwIQAUIDgAEA"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Bgs.Protocol.EntityTypesReflection.Descriptor, global::Bgs.Protocol.Presence.V1.PresenceTypesReflection.Descriptor, global::Bgs.Protocol.RpcTypesReflection.Descriptor, global::Bgs.Protocol.FieldOptionsReflection.Descriptor, global::Bgs.Protocol.MessageOptionsReflection.Descriptor, global::Bgs.Protocol.MethodOptionsReflection.Descriptor, global::Bgs.Protocol.ServiceOptionsReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Bgs.Protocol.Presence.V1.SubscribeRequest), global::Bgs.Protocol.Presence.V1.SubscribeRequest.Parser, new[]{ "AgentId", "EntityId", "ObjectId", "Program", "Key" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bgs.Protocol.Presence.V1.UnsubscribeRequest), global::Bgs.Protocol.Presence.V1.UnsubscribeRequest.Parser, new[]{ "AgentId", "EntityId", "ObjectId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bgs.Protocol.Presence.V1.UpdateRequest), global::Bgs.Protocol.Presence.V1.UpdateRequest.Parser, new[]{ "EntityId", "FieldOperation", "NoCreate", "AgentId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bgs.Protocol.Presence.V1.QueryRequest), global::Bgs.Protocol.Presence.V1.QueryRequest.Parser, new[]{ "EntityId", "Key", "AgentId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bgs.Protocol.Presence.V1.QueryResponse), global::Bgs.Protocol.Presence.V1.QueryResponse.Parser, new[]{ "Field" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bgs.Protocol.Presence.V1.BatchSubscribeRequest), global::Bgs.Protocol.Presence.V1.BatchSubscribeRequest.Parser, new[]{ "AgentId", "EntityId", "Program", "Key", "ObjectId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bgs.Protocol.Presence.V1.SubscribeResult), global::Bgs.Protocol.Presence.V1.SubscribeResult.Parser, new[]{ "EntityId", "Result" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bgs.Protocol.Presence.V1.BatchSubscribeResponse), global::Bgs.Protocol.Presence.V1.BatchSubscribeResponse.Parser, new[]{ "SubscribeFailed" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bgs.Protocol.Presence.V1.BatchUnsubscribeRequest), global::Bgs.Protocol.Presence.V1.BatchUnsubscribeRequest.Parser, new[]{ "AgentId", "EntityId", "ObjectId" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class SubscribeRequest : pb::IMessage<SubscribeRequest> {
    private static readonly pb::MessageParser<SubscribeRequest> _parser = new pb::MessageParser<SubscribeRequest>(() => new SubscribeRequest());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SubscribeRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bgs.Protocol.Presence.V1.PresenceServiceReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SubscribeRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SubscribeRequest(SubscribeRequest other) : this() {
      _hasBits0 = other._hasBits0;
      agentId_ = other.HasAgentId ? other.agentId_.Clone() : null;
      entityId_ = other.HasEntityId ? other.entityId_.Clone() : null;
      objectId_ = other.objectId_;
      program_ = other.program_.Clone();
      key_ = other.key_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SubscribeRequest Clone() {
      return new SubscribeRequest(this);
    }

    /// <summary>Field number for the "agent_id" field.</summary>
    public const int AgentIdFieldNumber = 1;
    private global::Bgs.Protocol.EntityId agentId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bgs.Protocol.EntityId AgentId {
      get { return agentId_; }
      set {
        agentId_ = value;
      }
    }
    /// <summary>Gets whether the agent_id field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasAgentId {
      get { return agentId_ != null; }
    }
    /// <summary>Clears the value of the agent_id field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearAgentId() {
      agentId_ = null;
    }

    /// <summary>Field number for the "entity_id" field.</summary>
    public const int EntityIdFieldNumber = 2;
    private global::Bgs.Protocol.EntityId entityId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bgs.Protocol.EntityId EntityId {
      get { return entityId_; }
      set {
        entityId_ = value;
      }
    }
    /// <summary>Gets whether the entity_id field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasEntityId {
      get { return entityId_ != null; }
    }
    /// <summary>Clears the value of the entity_id field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearEntityId() {
      entityId_ = null;
    }

    /// <summary>Field number for the "object_id" field.</summary>
    public const int ObjectIdFieldNumber = 3;
    private readonly static ulong ObjectIdDefaultValue = 0UL;

    private ulong objectId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong ObjectId {
      get { if ((_hasBits0 & 1) != 0) { return objectId_; } else { return ObjectIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        objectId_ = value;
      }
    }
    /// <summary>Gets whether the "object_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasObjectId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "object_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearObjectId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "program" field.</summary>
    public const int ProgramFieldNumber = 4;
    private static readonly pb::FieldCodec<uint> _repeated_program_codec
        = pb::FieldCodec.ForFixed32(37);
    private readonly pbc::RepeatedField<uint> program_ = new pbc::RepeatedField<uint>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<uint> Program {
      get { return program_; }
    }

    /// <summary>Field number for the "key" field.</summary>
    public const int KeyFieldNumber = 6;
    private static readonly pb::FieldCodec<global::Bgs.Protocol.Presence.V1.FieldKey> _repeated_key_codec
        = pb::FieldCodec.ForMessage(50, global::Bgs.Protocol.Presence.V1.FieldKey.Parser);
    private readonly pbc::RepeatedField<global::Bgs.Protocol.Presence.V1.FieldKey> key_ = new pbc::RepeatedField<global::Bgs.Protocol.Presence.V1.FieldKey>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Bgs.Protocol.Presence.V1.FieldKey> Key {
      get { return key_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SubscribeRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SubscribeRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(AgentId, other.AgentId)) return false;
      if (!object.Equals(EntityId, other.EntityId)) return false;
      if (ObjectId != other.ObjectId) return false;
      if(!program_.Equals(other.program_)) return false;
      if(!key_.Equals(other.key_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasAgentId) hash ^= AgentId.GetHashCode();
      if (HasEntityId) hash ^= EntityId.GetHashCode();
      if (HasObjectId) hash ^= ObjectId.GetHashCode();
      hash ^= program_.GetHashCode();
      hash ^= key_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasAgentId) {
        output.WriteRawTag(10);
        output.WriteMessage(AgentId);
      }
      if (HasEntityId) {
        output.WriteRawTag(18);
        output.WriteMessage(EntityId);
      }
      if (HasObjectId) {
        output.WriteRawTag(24);
        output.WriteUInt64(ObjectId);
      }
      program_.WriteTo(output, _repeated_program_codec);
      key_.WriteTo(output, _repeated_key_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasAgentId) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AgentId);
      }
      if (HasEntityId) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(EntityId);
      }
      if (HasObjectId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(ObjectId);
      }
      size += program_.CalculateSize(_repeated_program_codec);
      size += key_.CalculateSize(_repeated_key_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SubscribeRequest other) {
      if (other == null) {
        return;
      }
      if (other.HasAgentId) {
        if (!HasAgentId) {
          AgentId = new global::Bgs.Protocol.EntityId();
        }
        AgentId.MergeFrom(other.AgentId);
      }
      if (other.HasEntityId) {
        if (!HasEntityId) {
          EntityId = new global::Bgs.Protocol.EntityId();
        }
        EntityId.MergeFrom(other.EntityId);
      }
      if (other.HasObjectId) {
        ObjectId = other.ObjectId;
      }
      program_.Add(other.program_);
      key_.Add(other.key_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (!HasAgentId) {
              AgentId = new global::Bgs.Protocol.EntityId();
            }
            input.ReadMessage(AgentId);
            break;
          }
          case 18: {
            if (!HasEntityId) {
              EntityId = new global::Bgs.Protocol.EntityId();
            }
            input.ReadMessage(EntityId);
            break;
          }
          case 24: {
            ObjectId = input.ReadUInt64();
            break;
          }
          case 34:
          case 37: {
            program_.AddEntriesFrom(input, _repeated_program_codec);
            break;
          }
          case 50: {
            key_.AddEntriesFrom(input, _repeated_key_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class UnsubscribeRequest : pb::IMessage<UnsubscribeRequest> {
    private static readonly pb::MessageParser<UnsubscribeRequest> _parser = new pb::MessageParser<UnsubscribeRequest>(() => new UnsubscribeRequest());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UnsubscribeRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bgs.Protocol.Presence.V1.PresenceServiceReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UnsubscribeRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UnsubscribeRequest(UnsubscribeRequest other) : this() {
      _hasBits0 = other._hasBits0;
      agentId_ = other.HasAgentId ? other.agentId_.Clone() : null;
      entityId_ = other.HasEntityId ? other.entityId_.Clone() : null;
      objectId_ = other.objectId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UnsubscribeRequest Clone() {
      return new UnsubscribeRequest(this);
    }

    /// <summary>Field number for the "agent_id" field.</summary>
    public const int AgentIdFieldNumber = 1;
    private global::Bgs.Protocol.EntityId agentId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bgs.Protocol.EntityId AgentId {
      get { return agentId_; }
      set {
        agentId_ = value;
      }
    }
    /// <summary>Gets whether the agent_id field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasAgentId {
      get { return agentId_ != null; }
    }
    /// <summary>Clears the value of the agent_id field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearAgentId() {
      agentId_ = null;
    }

    /// <summary>Field number for the "entity_id" field.</summary>
    public const int EntityIdFieldNumber = 2;
    private global::Bgs.Protocol.EntityId entityId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bgs.Protocol.EntityId EntityId {
      get { return entityId_; }
      set {
        entityId_ = value;
      }
    }
    /// <summary>Gets whether the entity_id field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasEntityId {
      get { return entityId_ != null; }
    }
    /// <summary>Clears the value of the entity_id field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearEntityId() {
      entityId_ = null;
    }

    /// <summary>Field number for the "object_id" field.</summary>
    public const int ObjectIdFieldNumber = 3;
    private readonly static ulong ObjectIdDefaultValue = 0UL;

    private ulong objectId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong ObjectId {
      get { if ((_hasBits0 & 1) != 0) { return objectId_; } else { return ObjectIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        objectId_ = value;
      }
    }
    /// <summary>Gets whether the "object_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasObjectId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "object_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearObjectId() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UnsubscribeRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UnsubscribeRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(AgentId, other.AgentId)) return false;
      if (!object.Equals(EntityId, other.EntityId)) return false;
      if (ObjectId != other.ObjectId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasAgentId) hash ^= AgentId.GetHashCode();
      if (HasEntityId) hash ^= EntityId.GetHashCode();
      if (HasObjectId) hash ^= ObjectId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasAgentId) {
        output.WriteRawTag(10);
        output.WriteMessage(AgentId);
      }
      if (HasEntityId) {
        output.WriteRawTag(18);
        output.WriteMessage(EntityId);
      }
      if (HasObjectId) {
        output.WriteRawTag(24);
        output.WriteUInt64(ObjectId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasAgentId) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AgentId);
      }
      if (HasEntityId) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(EntityId);
      }
      if (HasObjectId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(ObjectId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UnsubscribeRequest other) {
      if (other == null) {
        return;
      }
      if (other.HasAgentId) {
        if (!HasAgentId) {
          AgentId = new global::Bgs.Protocol.EntityId();
        }
        AgentId.MergeFrom(other.AgentId);
      }
      if (other.HasEntityId) {
        if (!HasEntityId) {
          EntityId = new global::Bgs.Protocol.EntityId();
        }
        EntityId.MergeFrom(other.EntityId);
      }
      if (other.HasObjectId) {
        ObjectId = other.ObjectId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (!HasAgentId) {
              AgentId = new global::Bgs.Protocol.EntityId();
            }
            input.ReadMessage(AgentId);
            break;
          }
          case 18: {
            if (!HasEntityId) {
              EntityId = new global::Bgs.Protocol.EntityId();
            }
            input.ReadMessage(EntityId);
            break;
          }
          case 24: {
            ObjectId = input.ReadUInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class UpdateRequest : pb::IMessage<UpdateRequest> {
    private static readonly pb::MessageParser<UpdateRequest> _parser = new pb::MessageParser<UpdateRequest>(() => new UpdateRequest());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UpdateRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bgs.Protocol.Presence.V1.PresenceServiceReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateRequest(UpdateRequest other) : this() {
      _hasBits0 = other._hasBits0;
      entityId_ = other.HasEntityId ? other.entityId_.Clone() : null;
      fieldOperation_ = other.fieldOperation_.Clone();
      noCreate_ = other.noCreate_;
      agentId_ = other.HasAgentId ? other.agentId_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateRequest Clone() {
      return new UpdateRequest(this);
    }

    /// <summary>Field number for the "entity_id" field.</summary>
    public const int EntityIdFieldNumber = 1;
    private global::Bgs.Protocol.EntityId entityId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bgs.Protocol.EntityId EntityId {
      get { return entityId_; }
      set {
        entityId_ = value;
      }
    }
    /// <summary>Gets whether the entity_id field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasEntityId {
      get { return entityId_ != null; }
    }
    /// <summary>Clears the value of the entity_id field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearEntityId() {
      entityId_ = null;
    }

    /// <summary>Field number for the "field_operation" field.</summary>
    public const int FieldOperationFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Bgs.Protocol.Presence.V1.FieldOperation> _repeated_fieldOperation_codec
        = pb::FieldCodec.ForMessage(18, global::Bgs.Protocol.Presence.V1.FieldOperation.Parser);
    private readonly pbc::RepeatedField<global::Bgs.Protocol.Presence.V1.FieldOperation> fieldOperation_ = new pbc::RepeatedField<global::Bgs.Protocol.Presence.V1.FieldOperation>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Bgs.Protocol.Presence.V1.FieldOperation> FieldOperation {
      get { return fieldOperation_; }
    }

    /// <summary>Field number for the "no_create" field.</summary>
    public const int NoCreateFieldNumber = 3;
    private readonly static bool NoCreateDefaultValue = false;

    private bool noCreate_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool NoCreate {
      get { if ((_hasBits0 & 1) != 0) { return noCreate_; } else { return NoCreateDefaultValue; } }
      set {
        _hasBits0 |= 1;
        noCreate_ = value;
      }
    }
    /// <summary>Gets whether the "no_create" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasNoCreate {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "no_create" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearNoCreate() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "agent_id" field.</summary>
    public const int AgentIdFieldNumber = 4;
    private global::Bgs.Protocol.EntityId agentId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bgs.Protocol.EntityId AgentId {
      get { return agentId_; }
      set {
        agentId_ = value;
      }
    }
    /// <summary>Gets whether the agent_id field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasAgentId {
      get { return agentId_ != null; }
    }
    /// <summary>Clears the value of the agent_id field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearAgentId() {
      agentId_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UpdateRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UpdateRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(EntityId, other.EntityId)) return false;
      if(!fieldOperation_.Equals(other.fieldOperation_)) return false;
      if (NoCreate != other.NoCreate) return false;
      if (!object.Equals(AgentId, other.AgentId)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasEntityId) hash ^= EntityId.GetHashCode();
      hash ^= fieldOperation_.GetHashCode();
      if (HasNoCreate) hash ^= NoCreate.GetHashCode();
      if (HasAgentId) hash ^= AgentId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasEntityId) {
        output.WriteRawTag(10);
        output.WriteMessage(EntityId);
      }
      fieldOperation_.WriteTo(output, _repeated_fieldOperation_codec);
      if (HasNoCreate) {
        output.WriteRawTag(24);
        output.WriteBool(NoCreate);
      }
      if (HasAgentId) {
        output.WriteRawTag(34);
        output.WriteMessage(AgentId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasEntityId) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(EntityId);
      }
      size += fieldOperation_.CalculateSize(_repeated_fieldOperation_codec);
      if (HasNoCreate) {
        size += 1 + 1;
      }
      if (HasAgentId) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AgentId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UpdateRequest other) {
      if (other == null) {
        return;
      }
      if (other.HasEntityId) {
        if (!HasEntityId) {
          EntityId = new global::Bgs.Protocol.EntityId();
        }
        EntityId.MergeFrom(other.EntityId);
      }
      fieldOperation_.Add(other.fieldOperation_);
      if (other.HasNoCreate) {
        NoCreate = other.NoCreate;
      }
      if (other.HasAgentId) {
        if (!HasAgentId) {
          AgentId = new global::Bgs.Protocol.EntityId();
        }
        AgentId.MergeFrom(other.AgentId);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (!HasEntityId) {
              EntityId = new global::Bgs.Protocol.EntityId();
            }
            input.ReadMessage(EntityId);
            break;
          }
          case 18: {
            fieldOperation_.AddEntriesFrom(input, _repeated_fieldOperation_codec);
            break;
          }
          case 24: {
            NoCreate = input.ReadBool();
            break;
          }
          case 34: {
            if (!HasAgentId) {
              AgentId = new global::Bgs.Protocol.EntityId();
            }
            input.ReadMessage(AgentId);
            break;
          }
        }
      }
    }

  }

  public sealed partial class QueryRequest : pb::IMessage<QueryRequest> {
    private static readonly pb::MessageParser<QueryRequest> _parser = new pb::MessageParser<QueryRequest>(() => new QueryRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<QueryRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bgs.Protocol.Presence.V1.PresenceServiceReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryRequest(QueryRequest other) : this() {
      entityId_ = other.HasEntityId ? other.entityId_.Clone() : null;
      key_ = other.key_.Clone();
      agentId_ = other.HasAgentId ? other.agentId_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryRequest Clone() {
      return new QueryRequest(this);
    }

    /// <summary>Field number for the "entity_id" field.</summary>
    public const int EntityIdFieldNumber = 1;
    private global::Bgs.Protocol.EntityId entityId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bgs.Protocol.EntityId EntityId {
      get { return entityId_; }
      set {
        entityId_ = value;
      }
    }
    /// <summary>Gets whether the entity_id field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasEntityId {
      get { return entityId_ != null; }
    }
    /// <summary>Clears the value of the entity_id field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearEntityId() {
      entityId_ = null;
    }

    /// <summary>Field number for the "key" field.</summary>
    public const int KeyFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Bgs.Protocol.Presence.V1.FieldKey> _repeated_key_codec
        = pb::FieldCodec.ForMessage(18, global::Bgs.Protocol.Presence.V1.FieldKey.Parser);
    private readonly pbc::RepeatedField<global::Bgs.Protocol.Presence.V1.FieldKey> key_ = new pbc::RepeatedField<global::Bgs.Protocol.Presence.V1.FieldKey>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Bgs.Protocol.Presence.V1.FieldKey> Key {
      get { return key_; }
    }

    /// <summary>Field number for the "agent_id" field.</summary>
    public const int AgentIdFieldNumber = 3;
    private global::Bgs.Protocol.EntityId agentId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bgs.Protocol.EntityId AgentId {
      get { return agentId_; }
      set {
        agentId_ = value;
      }
    }
    /// <summary>Gets whether the agent_id field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasAgentId {
      get { return agentId_ != null; }
    }
    /// <summary>Clears the value of the agent_id field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearAgentId() {
      agentId_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as QueryRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(QueryRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(EntityId, other.EntityId)) return false;
      if(!key_.Equals(other.key_)) return false;
      if (!object.Equals(AgentId, other.AgentId)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasEntityId) hash ^= EntityId.GetHashCode();
      hash ^= key_.GetHashCode();
      if (HasAgentId) hash ^= AgentId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasEntityId) {
        output.WriteRawTag(10);
        output.WriteMessage(EntityId);
      }
      key_.WriteTo(output, _repeated_key_codec);
      if (HasAgentId) {
        output.WriteRawTag(26);
        output.WriteMessage(AgentId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasEntityId) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(EntityId);
      }
      size += key_.CalculateSize(_repeated_key_codec);
      if (HasAgentId) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AgentId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(QueryRequest other) {
      if (other == null) {
        return;
      }
      if (other.HasEntityId) {
        if (!HasEntityId) {
          EntityId = new global::Bgs.Protocol.EntityId();
        }
        EntityId.MergeFrom(other.EntityId);
      }
      key_.Add(other.key_);
      if (other.HasAgentId) {
        if (!HasAgentId) {
          AgentId = new global::Bgs.Protocol.EntityId();
        }
        AgentId.MergeFrom(other.AgentId);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (!HasEntityId) {
              EntityId = new global::Bgs.Protocol.EntityId();
            }
            input.ReadMessage(EntityId);
            break;
          }
          case 18: {
            key_.AddEntriesFrom(input, _repeated_key_codec);
            break;
          }
          case 26: {
            if (!HasAgentId) {
              AgentId = new global::Bgs.Protocol.EntityId();
            }
            input.ReadMessage(AgentId);
            break;
          }
        }
      }
    }

  }

  public sealed partial class QueryResponse : pb::IMessage<QueryResponse> {
    private static readonly pb::MessageParser<QueryResponse> _parser = new pb::MessageParser<QueryResponse>(() => new QueryResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<QueryResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bgs.Protocol.Presence.V1.PresenceServiceReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryResponse(QueryResponse other) : this() {
      field_ = other.field_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryResponse Clone() {
      return new QueryResponse(this);
    }

    /// <summary>Field number for the "field" field.</summary>
    public const int FieldFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Bgs.Protocol.Presence.V1.Field> _repeated_field_codec
        = pb::FieldCodec.ForMessage(18, global::Bgs.Protocol.Presence.V1.Field.Parser);
    private readonly pbc::RepeatedField<global::Bgs.Protocol.Presence.V1.Field> field_ = new pbc::RepeatedField<global::Bgs.Protocol.Presence.V1.Field>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Bgs.Protocol.Presence.V1.Field> Field {
      get { return field_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as QueryResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(QueryResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!field_.Equals(other.field_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= field_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      field_.WriteTo(output, _repeated_field_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += field_.CalculateSize(_repeated_field_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(QueryResponse other) {
      if (other == null) {
        return;
      }
      field_.Add(other.field_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 18: {
            field_.AddEntriesFrom(input, _repeated_field_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class BatchSubscribeRequest : pb::IMessage<BatchSubscribeRequest> {
    private static readonly pb::MessageParser<BatchSubscribeRequest> _parser = new pb::MessageParser<BatchSubscribeRequest>(() => new BatchSubscribeRequest());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BatchSubscribeRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bgs.Protocol.Presence.V1.PresenceServiceReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BatchSubscribeRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BatchSubscribeRequest(BatchSubscribeRequest other) : this() {
      _hasBits0 = other._hasBits0;
      agentId_ = other.HasAgentId ? other.agentId_.Clone() : null;
      entityId_ = other.entityId_.Clone();
      program_ = other.program_.Clone();
      key_ = other.key_.Clone();
      objectId_ = other.objectId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BatchSubscribeRequest Clone() {
      return new BatchSubscribeRequest(this);
    }

    /// <summary>Field number for the "agent_id" field.</summary>
    public const int AgentIdFieldNumber = 1;
    private global::Bgs.Protocol.EntityId agentId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bgs.Protocol.EntityId AgentId {
      get { return agentId_; }
      set {
        agentId_ = value;
      }
    }
    /// <summary>Gets whether the agent_id field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasAgentId {
      get { return agentId_ != null; }
    }
    /// <summary>Clears the value of the agent_id field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearAgentId() {
      agentId_ = null;
    }

    /// <summary>Field number for the "entity_id" field.</summary>
    public const int EntityIdFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Bgs.Protocol.EntityId> _repeated_entityId_codec
        = pb::FieldCodec.ForMessage(18, global::Bgs.Protocol.EntityId.Parser);
    private readonly pbc::RepeatedField<global::Bgs.Protocol.EntityId> entityId_ = new pbc::RepeatedField<global::Bgs.Protocol.EntityId>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Bgs.Protocol.EntityId> EntityId {
      get { return entityId_; }
    }

    /// <summary>Field number for the "program" field.</summary>
    public const int ProgramFieldNumber = 3;
    private static readonly pb::FieldCodec<uint> _repeated_program_codec
        = pb::FieldCodec.ForFixed32(29);
    private readonly pbc::RepeatedField<uint> program_ = new pbc::RepeatedField<uint>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<uint> Program {
      get { return program_; }
    }

    /// <summary>Field number for the "key" field.</summary>
    public const int KeyFieldNumber = 4;
    private static readonly pb::FieldCodec<global::Bgs.Protocol.Presence.V1.FieldKey> _repeated_key_codec
        = pb::FieldCodec.ForMessage(34, global::Bgs.Protocol.Presence.V1.FieldKey.Parser);
    private readonly pbc::RepeatedField<global::Bgs.Protocol.Presence.V1.FieldKey> key_ = new pbc::RepeatedField<global::Bgs.Protocol.Presence.V1.FieldKey>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Bgs.Protocol.Presence.V1.FieldKey> Key {
      get { return key_; }
    }

    /// <summary>Field number for the "object_id" field.</summary>
    public const int ObjectIdFieldNumber = 5;
    private readonly static ulong ObjectIdDefaultValue = 0UL;

    private ulong objectId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong ObjectId {
      get { if ((_hasBits0 & 1) != 0) { return objectId_; } else { return ObjectIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        objectId_ = value;
      }
    }
    /// <summary>Gets whether the "object_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasObjectId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "object_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearObjectId() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BatchSubscribeRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BatchSubscribeRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(AgentId, other.AgentId)) return false;
      if(!entityId_.Equals(other.entityId_)) return false;
      if(!program_.Equals(other.program_)) return false;
      if(!key_.Equals(other.key_)) return false;
      if (ObjectId != other.ObjectId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasAgentId) hash ^= AgentId.GetHashCode();
      hash ^= entityId_.GetHashCode();
      hash ^= program_.GetHashCode();
      hash ^= key_.GetHashCode();
      if (HasObjectId) hash ^= ObjectId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasAgentId) {
        output.WriteRawTag(10);
        output.WriteMessage(AgentId);
      }
      entityId_.WriteTo(output, _repeated_entityId_codec);
      program_.WriteTo(output, _repeated_program_codec);
      key_.WriteTo(output, _repeated_key_codec);
      if (HasObjectId) {
        output.WriteRawTag(40);
        output.WriteUInt64(ObjectId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasAgentId) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AgentId);
      }
      size += entityId_.CalculateSize(_repeated_entityId_codec);
      size += program_.CalculateSize(_repeated_program_codec);
      size += key_.CalculateSize(_repeated_key_codec);
      if (HasObjectId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(ObjectId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BatchSubscribeRequest other) {
      if (other == null) {
        return;
      }
      if (other.HasAgentId) {
        if (!HasAgentId) {
          AgentId = new global::Bgs.Protocol.EntityId();
        }
        AgentId.MergeFrom(other.AgentId);
      }
      entityId_.Add(other.entityId_);
      program_.Add(other.program_);
      key_.Add(other.key_);
      if (other.HasObjectId) {
        ObjectId = other.ObjectId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (!HasAgentId) {
              AgentId = new global::Bgs.Protocol.EntityId();
            }
            input.ReadMessage(AgentId);
            break;
          }
          case 18: {
            entityId_.AddEntriesFrom(input, _repeated_entityId_codec);
            break;
          }
          case 26:
          case 29: {
            program_.AddEntriesFrom(input, _repeated_program_codec);
            break;
          }
          case 34: {
            key_.AddEntriesFrom(input, _repeated_key_codec);
            break;
          }
          case 40: {
            ObjectId = input.ReadUInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class SubscribeResult : pb::IMessage<SubscribeResult> {
    private static readonly pb::MessageParser<SubscribeResult> _parser = new pb::MessageParser<SubscribeResult>(() => new SubscribeResult());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SubscribeResult> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bgs.Protocol.Presence.V1.PresenceServiceReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SubscribeResult() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SubscribeResult(SubscribeResult other) : this() {
      _hasBits0 = other._hasBits0;
      entityId_ = other.HasEntityId ? other.entityId_.Clone() : null;
      result_ = other.result_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SubscribeResult Clone() {
      return new SubscribeResult(this);
    }

    /// <summary>Field number for the "entity_id" field.</summary>
    public const int EntityIdFieldNumber = 1;
    private global::Bgs.Protocol.EntityId entityId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bgs.Protocol.EntityId EntityId {
      get { return entityId_; }
      set {
        entityId_ = value;
      }
    }
    /// <summary>Gets whether the entity_id field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasEntityId {
      get { return entityId_ != null; }
    }
    /// <summary>Clears the value of the entity_id field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearEntityId() {
      entityId_ = null;
    }

    /// <summary>Field number for the "result" field.</summary>
    public const int ResultFieldNumber = 2;
    private readonly static uint ResultDefaultValue = 0;

    private uint result_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Result {
      get { if ((_hasBits0 & 1) != 0) { return result_; } else { return ResultDefaultValue; } }
      set {
        _hasBits0 |= 1;
        result_ = value;
      }
    }
    /// <summary>Gets whether the "result" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasResult {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "result" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearResult() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SubscribeResult);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SubscribeResult other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(EntityId, other.EntityId)) return false;
      if (Result != other.Result) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasEntityId) hash ^= EntityId.GetHashCode();
      if (HasResult) hash ^= Result.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasEntityId) {
        output.WriteRawTag(10);
        output.WriteMessage(EntityId);
      }
      if (HasResult) {
        output.WriteRawTag(16);
        output.WriteUInt32(Result);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasEntityId) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(EntityId);
      }
      if (HasResult) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Result);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SubscribeResult other) {
      if (other == null) {
        return;
      }
      if (other.HasEntityId) {
        if (!HasEntityId) {
          EntityId = new global::Bgs.Protocol.EntityId();
        }
        EntityId.MergeFrom(other.EntityId);
      }
      if (other.HasResult) {
        Result = other.Result;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (!HasEntityId) {
              EntityId = new global::Bgs.Protocol.EntityId();
            }
            input.ReadMessage(EntityId);
            break;
          }
          case 16: {
            Result = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class BatchSubscribeResponse : pb::IMessage<BatchSubscribeResponse> {
    private static readonly pb::MessageParser<BatchSubscribeResponse> _parser = new pb::MessageParser<BatchSubscribeResponse>(() => new BatchSubscribeResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BatchSubscribeResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bgs.Protocol.Presence.V1.PresenceServiceReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BatchSubscribeResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BatchSubscribeResponse(BatchSubscribeResponse other) : this() {
      subscribeFailed_ = other.subscribeFailed_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BatchSubscribeResponse Clone() {
      return new BatchSubscribeResponse(this);
    }

    /// <summary>Field number for the "subscribe_failed" field.</summary>
    public const int SubscribeFailedFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Bgs.Protocol.Presence.V1.SubscribeResult> _repeated_subscribeFailed_codec
        = pb::FieldCodec.ForMessage(10, global::Bgs.Protocol.Presence.V1.SubscribeResult.Parser);
    private readonly pbc::RepeatedField<global::Bgs.Protocol.Presence.V1.SubscribeResult> subscribeFailed_ = new pbc::RepeatedField<global::Bgs.Protocol.Presence.V1.SubscribeResult>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Bgs.Protocol.Presence.V1.SubscribeResult> SubscribeFailed {
      get { return subscribeFailed_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BatchSubscribeResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BatchSubscribeResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!subscribeFailed_.Equals(other.subscribeFailed_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= subscribeFailed_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      subscribeFailed_.WriteTo(output, _repeated_subscribeFailed_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += subscribeFailed_.CalculateSize(_repeated_subscribeFailed_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BatchSubscribeResponse other) {
      if (other == null) {
        return;
      }
      subscribeFailed_.Add(other.subscribeFailed_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            subscribeFailed_.AddEntriesFrom(input, _repeated_subscribeFailed_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class BatchUnsubscribeRequest : pb::IMessage<BatchUnsubscribeRequest> {
    private static readonly pb::MessageParser<BatchUnsubscribeRequest> _parser = new pb::MessageParser<BatchUnsubscribeRequest>(() => new BatchUnsubscribeRequest());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BatchUnsubscribeRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bgs.Protocol.Presence.V1.PresenceServiceReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BatchUnsubscribeRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BatchUnsubscribeRequest(BatchUnsubscribeRequest other) : this() {
      _hasBits0 = other._hasBits0;
      agentId_ = other.HasAgentId ? other.agentId_.Clone() : null;
      entityId_ = other.entityId_.Clone();
      objectId_ = other.objectId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BatchUnsubscribeRequest Clone() {
      return new BatchUnsubscribeRequest(this);
    }

    /// <summary>Field number for the "agent_id" field.</summary>
    public const int AgentIdFieldNumber = 1;
    private global::Bgs.Protocol.EntityId agentId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bgs.Protocol.EntityId AgentId {
      get { return agentId_; }
      set {
        agentId_ = value;
      }
    }
    /// <summary>Gets whether the agent_id field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasAgentId {
      get { return agentId_ != null; }
    }
    /// <summary>Clears the value of the agent_id field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearAgentId() {
      agentId_ = null;
    }

    /// <summary>Field number for the "entity_id" field.</summary>
    public const int EntityIdFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Bgs.Protocol.EntityId> _repeated_entityId_codec
        = pb::FieldCodec.ForMessage(18, global::Bgs.Protocol.EntityId.Parser);
    private readonly pbc::RepeatedField<global::Bgs.Protocol.EntityId> entityId_ = new pbc::RepeatedField<global::Bgs.Protocol.EntityId>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Bgs.Protocol.EntityId> EntityId {
      get { return entityId_; }
    }

    /// <summary>Field number for the "object_id" field.</summary>
    public const int ObjectIdFieldNumber = 3;
    private readonly static ulong ObjectIdDefaultValue = 0UL;

    private ulong objectId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong ObjectId {
      get { if ((_hasBits0 & 1) != 0) { return objectId_; } else { return ObjectIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        objectId_ = value;
      }
    }
    /// <summary>Gets whether the "object_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasObjectId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "object_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearObjectId() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BatchUnsubscribeRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BatchUnsubscribeRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(AgentId, other.AgentId)) return false;
      if(!entityId_.Equals(other.entityId_)) return false;
      if (ObjectId != other.ObjectId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasAgentId) hash ^= AgentId.GetHashCode();
      hash ^= entityId_.GetHashCode();
      if (HasObjectId) hash ^= ObjectId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasAgentId) {
        output.WriteRawTag(10);
        output.WriteMessage(AgentId);
      }
      entityId_.WriteTo(output, _repeated_entityId_codec);
      if (HasObjectId) {
        output.WriteRawTag(24);
        output.WriteUInt64(ObjectId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasAgentId) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AgentId);
      }
      size += entityId_.CalculateSize(_repeated_entityId_codec);
      if (HasObjectId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(ObjectId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BatchUnsubscribeRequest other) {
      if (other == null) {
        return;
      }
      if (other.HasAgentId) {
        if (!HasAgentId) {
          AgentId = new global::Bgs.Protocol.EntityId();
        }
        AgentId.MergeFrom(other.AgentId);
      }
      entityId_.Add(other.entityId_);
      if (other.HasObjectId) {
        ObjectId = other.ObjectId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (!HasAgentId) {
              AgentId = new global::Bgs.Protocol.EntityId();
            }
            input.ReadMessage(AgentId);
            break;
          }
          case 18: {
            entityId_.AddEntriesFrom(input, _repeated_entityId_codec);
            break;
          }
          case 24: {
            ObjectId = input.ReadUInt64();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
