// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: bgs/low/pb/client/content_handle_types.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Bgs.Protocol {

  /// <summary>Holder for reflection information generated from bgs/low/pb/client/content_handle_types.proto</summary>
  public static partial class ContentHandleTypesReflection {

    #region Descriptor
    /// <summary>File descriptor for bgs/low/pb/client/content_handle_types.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ContentHandleTypesReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CixiZ3MvbG93L3BiL2NsaWVudC9jb250ZW50X2hhbmRsZV90eXBlcy5wcm90",
            "bxIMYmdzLnByb3RvY29sIk8KDUNvbnRlbnRIYW5kbGUSDgoGcmVnaW9uGAEg",
            "AigHEg0KBXVzYWdlGAIgAigHEgwKBGhhc2gYAyACKAwSEQoJcHJvdG9fdXJs",
            "GAQgASgJIl8KFlRpdGxlSWNvbkNvbnRlbnRIYW5kbGUSEAoIdGl0bGVfaWQY",
            "ASABKA0SMwoOY29udGVudF9oYW5kbGUYAiABKAsyGy5iZ3MucHJvdG9jb2wu",
            "Q29udGVudEhhbmRsZUIiCgxiZ3MucHJvdG9jb2xCEkNvbnRlbnRIYW5kbGVQ",
            "cm90bw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Bgs.Protocol.ContentHandle), global::Bgs.Protocol.ContentHandle.Parser, new[]{ "Region", "Usage", "Hash", "ProtoUrl" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bgs.Protocol.TitleIconContentHandle), global::Bgs.Protocol.TitleIconContentHandle.Parser, new[]{ "TitleId", "ContentHandle" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class ContentHandle : pb::IMessage<ContentHandle> {
    private static readonly pb::MessageParser<ContentHandle> _parser = new pb::MessageParser<ContentHandle>(() => new ContentHandle());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ContentHandle> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bgs.Protocol.ContentHandleTypesReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ContentHandle() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ContentHandle(ContentHandle other) : this() {
      _hasBits0 = other._hasBits0;
      region_ = other.region_;
      usage_ = other.usage_;
      hash_ = other.hash_;
      protoUrl_ = other.protoUrl_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ContentHandle Clone() {
      return new ContentHandle(this);
    }

    /// <summary>Field number for the "region" field.</summary>
    public const int RegionFieldNumber = 1;
    private readonly static uint RegionDefaultValue = 0;

    private uint region_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Region {
      get { if ((_hasBits0 & 1) != 0) { return region_; } else { return RegionDefaultValue; } }
      set {
        _hasBits0 |= 1;
        region_ = value;
      }
    }
    /// <summary>Gets whether the "region" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasRegion {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "region" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearRegion() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "usage" field.</summary>
    public const int UsageFieldNumber = 2;
    private readonly static uint UsageDefaultValue = 0;

    private uint usage_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Usage {
      get { if ((_hasBits0 & 2) != 0) { return usage_; } else { return UsageDefaultValue; } }
      set {
        _hasBits0 |= 2;
        usage_ = value;
      }
    }
    /// <summary>Gets whether the "usage" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasUsage {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "usage" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearUsage() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "hash" field.</summary>
    public const int HashFieldNumber = 3;
    private readonly static pb::ByteString HashDefaultValue = pb::ByteString.Empty;

    private pb::ByteString hash_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Hash {
      get { return hash_ ?? HashDefaultValue; }
      set {
        hash_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "hash" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasHash {
      get { return hash_ != null; }
    }
    /// <summary>Clears the value of the "hash" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearHash() {
      hash_ = null;
    }

    /// <summary>Field number for the "proto_url" field.</summary>
    public const int ProtoUrlFieldNumber = 4;
    private readonly static string ProtoUrlDefaultValue = "";

    private string protoUrl_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ProtoUrl {
      get { return protoUrl_ ?? ProtoUrlDefaultValue; }
      set {
        protoUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "proto_url" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasProtoUrl {
      get { return protoUrl_ != null; }
    }
    /// <summary>Clears the value of the "proto_url" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearProtoUrl() {
      protoUrl_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ContentHandle);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ContentHandle other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Region != other.Region) return false;
      if (Usage != other.Usage) return false;
      if (Hash != other.Hash) return false;
      if (ProtoUrl != other.ProtoUrl) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasRegion) hash ^= Region.GetHashCode();
      if (HasUsage) hash ^= Usage.GetHashCode();
      if (HasHash) hash ^= Hash.GetHashCode();
      if (HasProtoUrl) hash ^= ProtoUrl.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasRegion) {
        output.WriteRawTag(13);
        output.WriteFixed32(Region);
      }
      if (HasUsage) {
        output.WriteRawTag(21);
        output.WriteFixed32(Usage);
      }
      if (HasHash) {
        output.WriteRawTag(26);
        output.WriteBytes(Hash);
      }
      if (HasProtoUrl) {
        output.WriteRawTag(34);
        output.WriteString(ProtoUrl);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasRegion) {
        size += 1 + 4;
      }
      if (HasUsage) {
        size += 1 + 4;
      }
      if (HasHash) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Hash);
      }
      if (HasProtoUrl) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ProtoUrl);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ContentHandle other) {
      if (other == null) {
        return;
      }
      if (other.HasRegion) {
        Region = other.Region;
      }
      if (other.HasUsage) {
        Usage = other.Usage;
      }
      if (other.HasHash) {
        Hash = other.Hash;
      }
      if (other.HasProtoUrl) {
        ProtoUrl = other.ProtoUrl;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            Region = input.ReadFixed32();
            break;
          }
          case 21: {
            Usage = input.ReadFixed32();
            break;
          }
          case 26: {
            Hash = input.ReadBytes();
            break;
          }
          case 34: {
            ProtoUrl = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class TitleIconContentHandle : pb::IMessage<TitleIconContentHandle> {
    private static readonly pb::MessageParser<TitleIconContentHandle> _parser = new pb::MessageParser<TitleIconContentHandle>(() => new TitleIconContentHandle());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TitleIconContentHandle> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bgs.Protocol.ContentHandleTypesReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TitleIconContentHandle() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TitleIconContentHandle(TitleIconContentHandle other) : this() {
      _hasBits0 = other._hasBits0;
      titleId_ = other.titleId_;
      contentHandle_ = other.HasContentHandle ? other.contentHandle_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TitleIconContentHandle Clone() {
      return new TitleIconContentHandle(this);
    }

    /// <summary>Field number for the "title_id" field.</summary>
    public const int TitleIdFieldNumber = 1;
    private readonly static uint TitleIdDefaultValue = 0;

    private uint titleId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint TitleId {
      get { if ((_hasBits0 & 1) != 0) { return titleId_; } else { return TitleIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        titleId_ = value;
      }
    }
    /// <summary>Gets whether the "title_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasTitleId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "title_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearTitleId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "content_handle" field.</summary>
    public const int ContentHandleFieldNumber = 2;
    private global::Bgs.Protocol.ContentHandle contentHandle_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bgs.Protocol.ContentHandle ContentHandle {
      get { return contentHandle_; }
      set {
        contentHandle_ = value;
      }
    }
    /// <summary>Gets whether the content_handle field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasContentHandle {
      get { return contentHandle_ != null; }
    }
    /// <summary>Clears the value of the content_handle field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearContentHandle() {
      contentHandle_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TitleIconContentHandle);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TitleIconContentHandle other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TitleId != other.TitleId) return false;
      if (!object.Equals(ContentHandle, other.ContentHandle)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasTitleId) hash ^= TitleId.GetHashCode();
      if (HasContentHandle) hash ^= ContentHandle.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasTitleId) {
        output.WriteRawTag(8);
        output.WriteUInt32(TitleId);
      }
      if (HasContentHandle) {
        output.WriteRawTag(18);
        output.WriteMessage(ContentHandle);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasTitleId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(TitleId);
      }
      if (HasContentHandle) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ContentHandle);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TitleIconContentHandle other) {
      if (other == null) {
        return;
      }
      if (other.HasTitleId) {
        TitleId = other.TitleId;
      }
      if (other.HasContentHandle) {
        if (!HasContentHandle) {
          ContentHandle = new global::Bgs.Protocol.ContentHandle();
        }
        ContentHandle.MergeFrom(other.ContentHandle);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            TitleId = input.ReadUInt32();
            break;
          }
          case 18: {
            if (!HasContentHandle) {
              ContentHandle = new global::Bgs.Protocol.ContentHandle();
            }
            input.ReadMessage(ContentHandle);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
