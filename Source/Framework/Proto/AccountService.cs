// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: bgs/low/pb/client/account_service.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Bgs.Protocol.Account.V1 {

  /// <summary>Holder for reflection information generated from bgs/low/pb/client/account_service.proto</summary>
  public static partial class AccountServiceReflection {

    #region Descriptor
    /// <summary>File descriptor for bgs/low/pb/client/account_service.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static AccountServiceReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CidiZ3MvbG93L3BiL2NsaWVudC9hY2NvdW50X3NlcnZpY2UucHJvdG8SF2Jn",
            "cy5wcm90b2NvbC5hY2NvdW50LnYxGiViZ3MvbG93L3BiL2NsaWVudC9hY2Nv",
            "dW50X3R5cGVzLnByb3RvGiRiZ3MvbG93L3BiL2NsaWVudC9lbnRpdHlfdHlw",
            "ZXMucHJvdG8aIWJncy9sb3cvcGIvY2xpZW50L3JwY190eXBlcy5wcm90bxo3",
            "YmdzL2xvdy9wYi9jbGllbnQvZ2xvYmFsX2V4dGVuc2lvbnMvZmllbGRfb3B0",
            "aW9ucy5wcm90bxo5YmdzL2xvdy9wYi9jbGllbnQvZ2xvYmFsX2V4dGVuc2lv",
            "bnMvbWVzc2FnZV9vcHRpb25zLnByb3RvGjhiZ3MvbG93L3BiL2NsaWVudC9n",
            "bG9iYWxfZXh0ZW5zaW9ucy9tZXRob2Rfb3B0aW9ucy5wcm90bxo5YmdzL2xv",
            "dy9wYi9jbGllbnQvZ2xvYmFsX2V4dGVuc2lvbnMvc2VydmljZV9vcHRpb25z",
            "LnByb3RvImkKFVJlc29sdmVBY2NvdW50UmVxdWVzdBI+CgNyZWYYASABKAsy",
            "KS5iZ3MucHJvdG9jb2wuYWNjb3VudC52MS5BY2NvdW50UmVmZXJlbmNlQgaC",
            "+SsCEAESEAoIZmV0Y2hfaWQYDCABKAgiSAoWUmVzb2x2ZUFjY291bnRSZXNw",
            "b25zZRIuCgJpZBgMIAEoCzIiLmJncy5wcm90b2NvbC5hY2NvdW50LnYxLkFj",
            "Y291bnRJZCJ+ChxHYW1lQWNjb3VudEZsYWdVcGRhdGVSZXF1ZXN0EkAKDGdh",
            "bWVfYWNjb3VudBgBIAEoCzIqLmJncy5wcm90b2NvbC5hY2NvdW50LnYxLkdh",
            "bWVBY2NvdW50SGFuZGxlEgwKBGZsYWcYAiABKAQSDgoGYWN0aXZlGAMgASgI",
            "IlYKGVN1YnNjcmlwdGlvblVwZGF0ZVJlcXVlc3QSOQoDcmVmGAIgAygLMiwu",
            "YmdzLnByb3RvY29sLmFjY291bnQudjEuU3Vic2NyaWJlclJlZmVyZW5jZSJX",
            "ChpTdWJzY3JpcHRpb25VcGRhdGVSZXNwb25zZRI5CgNyZWYYASADKAsyLC5i",
            "Z3MucHJvdG9jb2wuYWNjb3VudC52MS5TdWJzY3JpYmVyUmVmZXJlbmNlIuQB",
            "ChZHZXRBY2NvdW50U3RhdGVSZXF1ZXN0EjEKCWVudGl0eV9pZBgBIAEoCzIW",
            "LmJncy5wcm90b2NvbC5FbnRpdHlJZEIGgvkrAhABEg8KB3Byb2dyYW0YAiAB",
            "KA0SDgoGcmVnaW9uGAMgASgNEj0KB29wdGlvbnMYCiABKAsyLC5iZ3MucHJv",
            "dG9jb2wuYWNjb3VudC52MS5BY2NvdW50RmllbGRPcHRpb25zEjcKBHRhZ3MY",
            "CyABKAsyKS5iZ3MucHJvdG9jb2wuYWNjb3VudC52MS5BY2NvdW50RmllbGRU",
            "YWdzIogBChdHZXRBY2NvdW50U3RhdGVSZXNwb25zZRI0CgVzdGF0ZRgBIAEo",
            "CzIlLmJncy5wcm90b2NvbC5hY2NvdW50LnYxLkFjY291bnRTdGF0ZRI3CgR0",
            "YWdzGAIgASgLMikuYmdzLnByb3RvY29sLmFjY291bnQudjEuQWNjb3VudEZp",
            "ZWxkVGFncyJbChxHZXRTaWduZWRBY2NvdW50U3RhdGVSZXF1ZXN0EjsKB2Fj",
            "Y291bnQYASABKAsyIi5iZ3MucHJvdG9jb2wuYWNjb3VudC52MS5BY2NvdW50",
            "SWRCBoL5KwIQASIuCh1HZXRTaWduZWRBY2NvdW50U3RhdGVSZXNwb25zZRIN",
            "CgV0b2tlbhgBIAEoCSKFAgoaR2V0R2FtZUFjY291bnRTdGF0ZVJlcXVlc3QS",
            "LgoKYWNjb3VudF9pZBgBIAEoCzIWLmJncy5wcm90b2NvbC5FbnRpdHlJZEIC",
            "GAESNwoPZ2FtZV9hY2NvdW50X2lkGAIgASgLMhYuYmdzLnByb3RvY29sLkVu",
            "dGl0eUlkQgaC+SsCEAESQQoHb3B0aW9ucxgKIAEoCzIwLmJncy5wcm90b2Nv",
            "bC5hY2NvdW50LnYxLkdhbWVBY2NvdW50RmllbGRPcHRpb25zEjsKBHRhZ3MY",
            "CyABKAsyLS5iZ3MucHJvdG9jb2wuYWNjb3VudC52MS5HYW1lQWNjb3VudEZp",
            "ZWxkVGFncyKUAQobR2V0R2FtZUFjY291bnRTdGF0ZVJlc3BvbnNlEjgKBXN0",
            "YXRlGAEgASgLMikuYmdzLnByb3RvY29sLmFjY291bnQudjEuR2FtZUFjY291",
            "bnRTdGF0ZRI7CgR0YWdzGAIgASgLMi0uYmdzLnByb3RvY29sLmFjY291bnQu",
            "djEuR2FtZUFjY291bnRGaWVsZFRhZ3Mi7QEKEkdldExpY2Vuc2VzUmVxdWVz",
            "dBIxCgl0YXJnZXRfaWQYASABKAsyFi5iZ3MucHJvdG9jb2wuRW50aXR5SWRC",
            "BoL5KwIQARIeChZmZXRjaF9hY2NvdW50X2xpY2Vuc2VzGAIgASgIEiMKG2Zl",
            "dGNoX2dhbWVfYWNjb3VudF9saWNlbnNlcxgDIAEoCBImCh5mZXRjaF9keW5h",
            "bWljX2FjY291bnRfbGljZW5zZXMYBCABKAgSDwoHcHJvZ3JhbRgFIAEoBxIm",
            "ChdleGNsdWRlX3Vua25vd25fcHJvZ3JhbRgGIAEoCDoFZmFsc2UiUAoTR2V0",
            "TGljZW5zZXNSZXNwb25zZRI5CghsaWNlbnNlcxgBIAMoCzInLmJncy5wcm90",
            "b2NvbC5hY2NvdW50LnYxLkFjY291bnRMaWNlbnNlIkYKGUdldEdhbWVTZXNz",
            "aW9uSW5mb1JlcXVlc3QSKQoJZW50aXR5X2lkGAEgASgLMhYuYmdzLnByb3Rv",
            "Y29sLkVudGl0eUlkIlwKGkdldEdhbWVTZXNzaW9uSW5mb1Jlc3BvbnNlEj4K",
            "DHNlc3Npb25faW5mbxgCIAEoCzIoLmJncy5wcm90b2NvbC5hY2NvdW50LnYx",
            "LkdhbWVTZXNzaW9uSW5mbyKVAQofR2V0R2FtZVRpbWVSZW1haW5pbmdJbmZv",
            "UmVxdWVzdBIvCg9nYW1lX2FjY291bnRfaWQYASABKAsyFi5iZ3MucHJvdG9j",
            "b2wuRW50aXR5SWQSKgoKYWNjb3VudF9pZBgCIAEoCzIWLmJncy5wcm90b2Nv",
            "bC5FbnRpdHlJZBIVCg1iZW5lZmFjdG9yX2lkGAMgASgJInQKIEdldEdhbWVU",
            "aW1lUmVtYWluaW5nSW5mb1Jlc3BvbnNlElAKGGdhbWVfdGltZV9yZW1haW5p",
            "bmdfaW5mbxgBIAEoCzIuLmJncy5wcm90b2NvbC5hY2NvdW50LnYxLkdhbWVU",
            "aW1lUmVtYWluaW5nSW5mbyJHChJHZXRDQUlTSW5mb1JlcXVlc3QSMQoJZW50",
            "aXR5X2lkGAEgASgLMhYuYmdzLnByb3RvY29sLkVudGl0eUlkQgaC+SsCEAEi",
            "RwoTR2V0Q0FJU0luZm9SZXNwb25zZRIwCgljYWlzX2luZm8YASABKAsyHS5i",
            "Z3MucHJvdG9jb2wuYWNjb3VudC52MS5DQUlTInYKGEdldEF1dGhvcml6ZWRE",
            "YXRhUmVxdWVzdBIxCgllbnRpdHlfaWQYASABKAsyFi5iZ3MucHJvdG9jb2wu",
            "RW50aXR5SWRCBoL5KwIQARILCgN0YWcYAiADKAkSGgoScHJpdmlsZWdlZF9u",
            "ZXR3b3JrGAMgASgIIlIKGUdldEF1dGhvcml6ZWREYXRhUmVzcG9uc2USNQoE",
            "ZGF0YRgBIAMoCzInLmJncy5wcm90b2NvbC5hY2NvdW50LnYxLkF1dGhvcml6",
            "ZWREYXRhIksKFUdldEFjY291bnRJbmZvUmVxdWVzdBIyCgphY2NvdW50X2lk",
            "GAEgASgLMhYuYmdzLnByb3RvY29sLkVudGl0eUlkQgaC+SsCEAEiVAoWR2V0",
            "QWNjb3VudEluZm9SZXNwb25zZRI6CgxhY2NvdW50X2luZm8YASABKAsyJC5i",
            "Z3MucHJvdG9jb2wuYWNjb3VudC52MS5BY2NvdW50SW5mbyJbCiVHZXRBY2Nv",
            "dW50UGxhdGZvcm1SZXN0cmljdGlvbnNSZXF1ZXN0EjIKCmFjY291bnRfaWQY",
            "ASABKAsyFi5iZ3MucHJvdG9jb2wuRW50aXR5SWRCBoL5KwIQASJ7CiZHZXRB",
            "Y2NvdW50UGxhdGZvcm1SZXN0cmljdGlvbnNSZXNwb25zZRJRChByZXN0cmlj",
            "dGlvbl9pbmZvGAEgASgLMjcuYmdzLnByb3RvY29sLmFjY291bnQudjEuQWNj",
            "b3VudFBsYXRmb3JtUmVzdHJpY3Rpb25JbmZvItQBChhBY2NvdW50U3RhdGVO",
            "b3RpZmljYXRpb24SPAoNYWNjb3VudF9zdGF0ZRgBIAEoCzIlLmJncy5wcm90",
            "b2NvbC5hY2NvdW50LnYxLkFjY291bnRTdGF0ZRIZCg1zdWJzY3JpYmVyX2lk",
            "GAIgASgEQgIYARI/CgxhY2NvdW50X3RhZ3MYAyABKAsyKS5iZ3MucHJvdG9j",
            "b2wuYWNjb3VudC52MS5BY2NvdW50RmllbGRUYWdzEh4KFnN1YnNjcmlwdGlv",
            "bl9jb21wbGV0ZWQYBCABKAgi6gEKHEdhbWVBY2NvdW50U3RhdGVOb3RpZmlj",
            "YXRpb24SRQoSZ2FtZV9hY2NvdW50X3N0YXRlGAEgASgLMikuYmdzLnByb3Rv",
            "Y29sLmFjY291bnQudjEuR2FtZUFjY291bnRTdGF0ZRIZCg1zdWJzY3JpYmVy",
            "X2lkGAIgASgEQgIYARJIChFnYW1lX2FjY291bnRfdGFncxgDIAEoCzItLmJn",
            "cy5wcm90b2NvbC5hY2NvdW50LnYxLkdhbWVBY2NvdW50RmllbGRUYWdzEh4K",
            "FnN1YnNjcmlwdGlvbl9jb21wbGV0ZWQYBCABKAgisgEKF0dhbWVBY2NvdW50",
            "Tm90aWZpY2F0aW9uEj8KDWdhbWVfYWNjb3VudHMYASADKAsyKC5iZ3MucHJv",
            "dG9jb2wuYWNjb3VudC52MS5HYW1lQWNjb3VudExpc3QSFQoNc3Vic2NyaWJl",
            "cl9pZBgCIAEoBBI/CgxhY2NvdW50X3RhZ3MYAyABKAsyKS5iZ3MucHJvdG9j",
            "b2wuYWNjb3VudC52MS5BY2NvdW50RmllbGRUYWdzIqgBCh5HYW1lQWNjb3Vu",
            "dFNlc3Npb25Ob3RpZmljYXRpb24SQAoMZ2FtZV9hY2NvdW50GAEgASgLMiou",
            "YmdzLnByb3RvY29sLmFjY291bnQudjEuR2FtZUFjY291bnRIYW5kbGUSRAoM",
            "c2Vzc2lvbl9pbmZvGAIgASgLMi4uYmdzLnByb3RvY29sLmFjY291bnQudjEu",
            "R2FtZVNlc3Npb25VcGRhdGVJbmZvMoEOCg5BY2NvdW50U2VydmljZRJ5Cg5S",
            "ZXNvbHZlQWNjb3VudBIuLmJncy5wcm90b2NvbC5hY2NvdW50LnYxLlJlc29s",
            "dmVBY2NvdW50UmVxdWVzdBovLmJncy5wcm90b2NvbC5hY2NvdW50LnYxLlJl",
            "c29sdmVBY2NvdW50UmVzcG9uc2UiBoL5KwIIDRJ8CglTdWJzY3JpYmUSMi5i",
            "Z3MucHJvdG9jb2wuYWNjb3VudC52MS5TdWJzY3JpcHRpb25VcGRhdGVSZXF1",
            "ZXN0GjMuYmdzLnByb3RvY29sLmFjY291bnQudjEuU3Vic2NyaXB0aW9uVXBk",
            "YXRlUmVzcG9uc2UiBoL5KwIIGRJfCgtVbnN1YnNjcmliZRIyLmJncy5wcm90",
            "b2NvbC5hY2NvdW50LnYxLlN1YnNjcmlwdGlvblVwZGF0ZVJlcXVlc3QaFC5i",
            "Z3MucHJvdG9jb2wuTm9EYXRhIgaC+SsCCBoSfAoPR2V0QWNjb3VudFN0YXRl",
            "Ei8uYmdzLnByb3RvY29sLmFjY291bnQudjEuR2V0QWNjb3VudFN0YXRlUmVx",
            "dWVzdBowLmJncy5wcm90b2NvbC5hY2NvdW50LnYxLkdldEFjY291bnRTdGF0",
            "ZVJlc3BvbnNlIgaC+SsCCB4SiAEKE0dldEdhbWVBY2NvdW50U3RhdGUSMy5i",
            "Z3MucHJvdG9jb2wuYWNjb3VudC52MS5HZXRHYW1lQWNjb3VudFN0YXRlUmVx",
            "dWVzdBo0LmJncy5wcm90b2NvbC5hY2NvdW50LnYxLkdldEdhbWVBY2NvdW50",
            "U3RhdGVSZXNwb25zZSIGgvkrAggfEnAKC0dldExpY2Vuc2VzEisuYmdzLnBy",
            "b3RvY29sLmFjY291bnQudjEuR2V0TGljZW5zZXNSZXF1ZXN0GiwuYmdzLnBy",
            "b3RvY29sLmFjY291bnQudjEuR2V0TGljZW5zZXNSZXNwb25zZSIGgvkrAggg",
            "EpcBChhHZXRHYW1lVGltZVJlbWFpbmluZ0luZm8SOC5iZ3MucHJvdG9jb2wu",
            "YWNjb3VudC52MS5HZXRHYW1lVGltZVJlbWFpbmluZ0luZm9SZXF1ZXN0Gjku",
            "YmdzLnByb3RvY29sLmFjY291bnQudjEuR2V0R2FtZVRpbWVSZW1haW5pbmdJ",
            "bmZvUmVzcG9uc2UiBoL5KwIIIRKLAQoSR2V0R2FtZVNlc3Npb25JbmZvEjIu",
            "YmdzLnByb3RvY29sLmFjY291bnQudjEuR2V0R2FtZVNlc3Npb25JbmZvUmVx",
            "dWVzdBozLmJncy5wcm90b2NvbC5hY2NvdW50LnYxLkdldEdhbWVTZXNzaW9u",
            "SW5mb1Jlc3BvbnNlIgyC+SsCCCKC+SsCUAEScAoLR2V0Q0FJU0luZm8SKy5i",
            "Z3MucHJvdG9jb2wuYWNjb3VudC52MS5HZXRDQUlTSW5mb1JlcXVlc3QaLC5i",
            "Z3MucHJvdG9jb2wuYWNjb3VudC52MS5HZXRDQUlTSW5mb1Jlc3BvbnNlIgaC",
            "+SsCCCMSggEKEUdldEF1dGhvcml6ZWREYXRhEjEuYmdzLnByb3RvY29sLmFj",
            "Y291bnQudjEuR2V0QXV0aG9yaXplZERhdGFSZXF1ZXN0GjIuYmdzLnByb3Rv",
            "Y29sLmFjY291bnQudjEuR2V0QXV0aG9yaXplZERhdGFSZXNwb25zZSIGgvkr",
            "AgglEo4BChVHZXRTaWduZWRBY2NvdW50U3RhdGUSNS5iZ3MucHJvdG9jb2wu",
            "YWNjb3VudC52MS5HZXRTaWduZWRBY2NvdW50U3RhdGVSZXF1ZXN0GjYuYmdz",
            "LnByb3RvY29sLmFjY291bnQudjEuR2V0U2lnbmVkQWNjb3VudFN0YXRlUmVz",
            "cG9uc2UiBoL5KwIILBJ5Cg5HZXRBY2NvdW50SW5mbxIuLmJncy5wcm90b2Nv",
            "bC5hY2NvdW50LnYxLkdldEFjY291bnRJbmZvUmVxdWVzdBovLmJncy5wcm90",
            "b2NvbC5hY2NvdW50LnYxLkdldEFjY291bnRJbmZvUmVzcG9uc2UiBoL5KwII",
            "LRKpAQoeR2V0QWNjb3VudFBsYXRmb3JtUmVzdHJpY3Rpb25zEj4uYmdzLnBy",
            "b3RvY29sLmFjY291bnQudjEuR2V0QWNjb3VudFBsYXRmb3JtUmVzdHJpY3Rp",
            "b25zUmVxdWVzdBo/LmJncy5wcm90b2NvbC5hY2NvdW50LnYxLkdldEFjY291",
            "bnRQbGF0Zm9ybVJlc3RyaWN0aW9uc1Jlc3BvbnNlIgaC+SsCCC4aQ4L5KyYK",
            "JGJuZXQucHJvdG9jb2wuYWNjb3VudC5BY2NvdW50U2VydmljZYL5KwkqB2Fj",
            "Y291bnSK+SsCEAGK+SsCIAEyogQKD0FjY291bnRMaXN0ZW5lchJtChVPbkFj",
            "Y291bnRTdGF0ZVVwZGF0ZWQSMS5iZ3MucHJvdG9jb2wuYWNjb3VudC52MS5B",
            "Y2NvdW50U3RhdGVOb3RpZmljYXRpb24aGS5iZ3MucHJvdG9jb2wuTk9fUkVT",
            "UE9OU0UiBoL5KwIIARJ1ChlPbkdhbWVBY2NvdW50U3RhdGVVcGRhdGVkEjUu",
            "YmdzLnByb3RvY29sLmFjY291bnQudjEuR2FtZUFjY291bnRTdGF0ZU5vdGlm",
            "aWNhdGlvbhoZLmJncy5wcm90b2NvbC5OT19SRVNQT05TRSIGgvkrAggCEnIK",
            "FU9uR2FtZUFjY291bnRzVXBkYXRlZBIwLmJncy5wcm90b2NvbC5hY2NvdW50",
            "LnYxLkdhbWVBY2NvdW50Tm90aWZpY2F0aW9uGhkuYmdzLnByb3RvY29sLk5P",
            "X1JFU1BPTlNFIgyC+SsCCAOC+SsCUAESeAoUT25HYW1lU2Vzc2lvblVwZGF0",
            "ZWQSNy5iZ3MucHJvdG9jb2wuYWNjb3VudC52MS5HYW1lQWNjb3VudFNlc3Np",
            "b25Ob3RpZmljYXRpb24aGS5iZ3MucHJvdG9jb2wuTk9fUkVTUE9OU0UiDIL5",
            "KwIIBIL5KwJQARo7gvkrJQojYm5ldC5wcm90b2NvbC5hY2NvdW50LkFjY291",
            "bnROb3RpZnmC+SsCOAGK+SsCCAGK+SsCIAFCA4ABAA=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Bgs.Protocol.Account.V1.AccountTypesReflection.Descriptor, global::Bgs.Protocol.EntityTypesReflection.Descriptor, global::Bgs.Protocol.RpcTypesReflection.Descriptor, global::Bgs.Protocol.FieldOptionsReflection.Descriptor, global::Bgs.Protocol.MessageOptionsReflection.Descriptor, global::Bgs.Protocol.MethodOptionsReflection.Descriptor, global::Bgs.Protocol.ServiceOptionsReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Bgs.Protocol.Account.V1.ResolveAccountRequest), global::Bgs.Protocol.Account.V1.ResolveAccountRequest.Parser, new[]{ "Ref", "FetchId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bgs.Protocol.Account.V1.ResolveAccountResponse), global::Bgs.Protocol.Account.V1.ResolveAccountResponse.Parser, new[]{ "Id" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bgs.Protocol.Account.V1.GameAccountFlagUpdateRequest), global::Bgs.Protocol.Account.V1.GameAccountFlagUpdateRequest.Parser, new[]{ "GameAccount", "Flag", "Active" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bgs.Protocol.Account.V1.SubscriptionUpdateRequest), global::Bgs.Protocol.Account.V1.SubscriptionUpdateRequest.Parser, new[]{ "Ref" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bgs.Protocol.Account.V1.SubscriptionUpdateResponse), global::Bgs.Protocol.Account.V1.SubscriptionUpdateResponse.Parser, new[]{ "Ref" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bgs.Protocol.Account.V1.GetAccountStateRequest), global::Bgs.Protocol.Account.V1.GetAccountStateRequest.Parser, new[]{ "EntityId", "Program", "Region", "Options", "Tags" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bgs.Protocol.Account.V1.GetAccountStateResponse), global::Bgs.Protocol.Account.V1.GetAccountStateResponse.Parser, new[]{ "State", "Tags" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bgs.Protocol.Account.V1.GetSignedAccountStateRequest), global::Bgs.Protocol.Account.V1.GetSignedAccountStateRequest.Parser, new[]{ "Account" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bgs.Protocol.Account.V1.GetSignedAccountStateResponse), global::Bgs.Protocol.Account.V1.GetSignedAccountStateResponse.Parser, new[]{ "Token" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bgs.Protocol.Account.V1.GetGameAccountStateRequest), global::Bgs.Protocol.Account.V1.GetGameAccountStateRequest.Parser, new[]{ "AccountId", "GameAccountId", "Options", "Tags" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bgs.Protocol.Account.V1.GetGameAccountStateResponse), global::Bgs.Protocol.Account.V1.GetGameAccountStateResponse.Parser, new[]{ "State", "Tags" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bgs.Protocol.Account.V1.GetLicensesRequest), global::Bgs.Protocol.Account.V1.GetLicensesRequest.Parser, new[]{ "TargetId", "FetchAccountLicenses", "FetchGameAccountLicenses", "FetchDynamicAccountLicenses", "Program", "ExcludeUnknownProgram" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bgs.Protocol.Account.V1.GetLicensesResponse), global::Bgs.Protocol.Account.V1.GetLicensesResponse.Parser, new[]{ "Licenses" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bgs.Protocol.Account.V1.GetGameSessionInfoRequest), global::Bgs.Protocol.Account.V1.GetGameSessionInfoRequest.Parser, new[]{ "EntityId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bgs.Protocol.Account.V1.GetGameSessionInfoResponse), global::Bgs.Protocol.Account.V1.GetGameSessionInfoResponse.Parser, new[]{ "SessionInfo" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bgs.Protocol.Account.V1.GetGameTimeRemainingInfoRequest), global::Bgs.Protocol.Account.V1.GetGameTimeRemainingInfoRequest.Parser, new[]{ "GameAccountId", "AccountId", "BenefactorId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bgs.Protocol.Account.V1.GetGameTimeRemainingInfoResponse), global::Bgs.Protocol.Account.V1.GetGameTimeRemainingInfoResponse.Parser, new[]{ "GameTimeRemainingInfo" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bgs.Protocol.Account.V1.GetCAISInfoRequest), global::Bgs.Protocol.Account.V1.GetCAISInfoRequest.Parser, new[]{ "EntityId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bgs.Protocol.Account.V1.GetCAISInfoResponse), global::Bgs.Protocol.Account.V1.GetCAISInfoResponse.Parser, new[]{ "CaisInfo" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bgs.Protocol.Account.V1.GetAuthorizedDataRequest), global::Bgs.Protocol.Account.V1.GetAuthorizedDataRequest.Parser, new[]{ "EntityId", "Tag", "PrivilegedNetwork" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bgs.Protocol.Account.V1.GetAuthorizedDataResponse), global::Bgs.Protocol.Account.V1.GetAuthorizedDataResponse.Parser, new[]{ "Data" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bgs.Protocol.Account.V1.GetAccountInfoRequest), global::Bgs.Protocol.Account.V1.GetAccountInfoRequest.Parser, new[]{ "AccountId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bgs.Protocol.Account.V1.GetAccountInfoResponse), global::Bgs.Protocol.Account.V1.GetAccountInfoResponse.Parser, new[]{ "AccountInfo" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bgs.Protocol.Account.V1.GetAccountPlatformRestrictionsRequest), global::Bgs.Protocol.Account.V1.GetAccountPlatformRestrictionsRequest.Parser, new[]{ "AccountId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bgs.Protocol.Account.V1.GetAccountPlatformRestrictionsResponse), global::Bgs.Protocol.Account.V1.GetAccountPlatformRestrictionsResponse.Parser, new[]{ "RestrictionInfo" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bgs.Protocol.Account.V1.AccountStateNotification), global::Bgs.Protocol.Account.V1.AccountStateNotification.Parser, new[]{ "AccountState", "SubscriberId", "AccountTags", "SubscriptionCompleted" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bgs.Protocol.Account.V1.GameAccountStateNotification), global::Bgs.Protocol.Account.V1.GameAccountStateNotification.Parser, new[]{ "GameAccountState", "SubscriberId", "GameAccountTags", "SubscriptionCompleted" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bgs.Protocol.Account.V1.GameAccountNotification), global::Bgs.Protocol.Account.V1.GameAccountNotification.Parser, new[]{ "GameAccounts", "SubscriberId", "AccountTags" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bgs.Protocol.Account.V1.GameAccountSessionNotification), global::Bgs.Protocol.Account.V1.GameAccountSessionNotification.Parser, new[]{ "GameAccount", "SessionInfo" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class ResolveAccountRequest : pb::IMessage<ResolveAccountRequest> {
    private static readonly pb::MessageParser<ResolveAccountRequest> _parser = new pb::MessageParser<ResolveAccountRequest>(() => new ResolveAccountRequest());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ResolveAccountRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bgs.Protocol.Account.V1.AccountServiceReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResolveAccountRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResolveAccountRequest(ResolveAccountRequest other) : this() {
      _hasBits0 = other._hasBits0;
      ref_ = other.HasRef ? other.ref_.Clone() : null;
      fetchId_ = other.fetchId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResolveAccountRequest Clone() {
      return new ResolveAccountRequest(this);
    }

    /// <summary>Field number for the "ref" field.</summary>
    public const int RefFieldNumber = 1;
    private global::Bgs.Protocol.Account.V1.AccountReference ref_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bgs.Protocol.Account.V1.AccountReference Ref {
      get { return ref_; }
      set {
        ref_ = value;
      }
    }
    /// <summary>Gets whether the ref field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasRef {
      get { return ref_ != null; }
    }
    /// <summary>Clears the value of the ref field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearRef() {
      ref_ = null;
    }

    /// <summary>Field number for the "fetch_id" field.</summary>
    public const int FetchIdFieldNumber = 12;
    private readonly static bool FetchIdDefaultValue = false;

    private bool fetchId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool FetchId {
      get { if ((_hasBits0 & 1) != 0) { return fetchId_; } else { return FetchIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        fetchId_ = value;
      }
    }
    /// <summary>Gets whether the "fetch_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasFetchId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "fetch_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearFetchId() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ResolveAccountRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ResolveAccountRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Ref, other.Ref)) return false;
      if (FetchId != other.FetchId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasRef) hash ^= Ref.GetHashCode();
      if (HasFetchId) hash ^= FetchId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasRef) {
        output.WriteRawTag(10);
        output.WriteMessage(Ref);
      }
      if (HasFetchId) {
        output.WriteRawTag(96);
        output.WriteBool(FetchId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasRef) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Ref);
      }
      if (HasFetchId) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ResolveAccountRequest other) {
      if (other == null) {
        return;
      }
      if (other.HasRef) {
        if (!HasRef) {
          Ref = new global::Bgs.Protocol.Account.V1.AccountReference();
        }
        Ref.MergeFrom(other.Ref);
      }
      if (other.HasFetchId) {
        FetchId = other.FetchId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (!HasRef) {
              Ref = new global::Bgs.Protocol.Account.V1.AccountReference();
            }
            input.ReadMessage(Ref);
            break;
          }
          case 96: {
            FetchId = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ResolveAccountResponse : pb::IMessage<ResolveAccountResponse> {
    private static readonly pb::MessageParser<ResolveAccountResponse> _parser = new pb::MessageParser<ResolveAccountResponse>(() => new ResolveAccountResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ResolveAccountResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bgs.Protocol.Account.V1.AccountServiceReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResolveAccountResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResolveAccountResponse(ResolveAccountResponse other) : this() {
      id_ = other.HasId ? other.id_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResolveAccountResponse Clone() {
      return new ResolveAccountResponse(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 12;
    private global::Bgs.Protocol.Account.V1.AccountId id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bgs.Protocol.Account.V1.AccountId Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }
    /// <summary>Gets whether the id field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasId {
      get { return id_ != null; }
    }
    /// <summary>Clears the value of the id field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearId() {
      id_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ResolveAccountResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ResolveAccountResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Id, other.Id)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasId) hash ^= Id.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasId) {
        output.WriteRawTag(98);
        output.WriteMessage(Id);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasId) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Id);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ResolveAccountResponse other) {
      if (other == null) {
        return;
      }
      if (other.HasId) {
        if (!HasId) {
          Id = new global::Bgs.Protocol.Account.V1.AccountId();
        }
        Id.MergeFrom(other.Id);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 98: {
            if (!HasId) {
              Id = new global::Bgs.Protocol.Account.V1.AccountId();
            }
            input.ReadMessage(Id);
            break;
          }
        }
      }
    }

  }

  public sealed partial class GameAccountFlagUpdateRequest : pb::IMessage<GameAccountFlagUpdateRequest> {
    private static readonly pb::MessageParser<GameAccountFlagUpdateRequest> _parser = new pb::MessageParser<GameAccountFlagUpdateRequest>(() => new GameAccountFlagUpdateRequest());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GameAccountFlagUpdateRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bgs.Protocol.Account.V1.AccountServiceReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GameAccountFlagUpdateRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GameAccountFlagUpdateRequest(GameAccountFlagUpdateRequest other) : this() {
      _hasBits0 = other._hasBits0;
      gameAccount_ = other.HasGameAccount ? other.gameAccount_.Clone() : null;
      flag_ = other.flag_;
      active_ = other.active_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GameAccountFlagUpdateRequest Clone() {
      return new GameAccountFlagUpdateRequest(this);
    }

    /// <summary>Field number for the "game_account" field.</summary>
    public const int GameAccountFieldNumber = 1;
    private global::Bgs.Protocol.Account.V1.GameAccountHandle gameAccount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bgs.Protocol.Account.V1.GameAccountHandle GameAccount {
      get { return gameAccount_; }
      set {
        gameAccount_ = value;
      }
    }
    /// <summary>Gets whether the game_account field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasGameAccount {
      get { return gameAccount_ != null; }
    }
    /// <summary>Clears the value of the game_account field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearGameAccount() {
      gameAccount_ = null;
    }

    /// <summary>Field number for the "flag" field.</summary>
    public const int FlagFieldNumber = 2;
    private readonly static ulong FlagDefaultValue = 0UL;

    private ulong flag_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong Flag {
      get { if ((_hasBits0 & 1) != 0) { return flag_; } else { return FlagDefaultValue; } }
      set {
        _hasBits0 |= 1;
        flag_ = value;
      }
    }
    /// <summary>Gets whether the "flag" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasFlag {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "flag" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearFlag() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "active" field.</summary>
    public const int ActiveFieldNumber = 3;
    private readonly static bool ActiveDefaultValue = false;

    private bool active_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Active {
      get { if ((_hasBits0 & 2) != 0) { return active_; } else { return ActiveDefaultValue; } }
      set {
        _hasBits0 |= 2;
        active_ = value;
      }
    }
    /// <summary>Gets whether the "active" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasActive {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "active" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearActive() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GameAccountFlagUpdateRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GameAccountFlagUpdateRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(GameAccount, other.GameAccount)) return false;
      if (Flag != other.Flag) return false;
      if (Active != other.Active) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasGameAccount) hash ^= GameAccount.GetHashCode();
      if (HasFlag) hash ^= Flag.GetHashCode();
      if (HasActive) hash ^= Active.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasGameAccount) {
        output.WriteRawTag(10);
        output.WriteMessage(GameAccount);
      }
      if (HasFlag) {
        output.WriteRawTag(16);
        output.WriteUInt64(Flag);
      }
      if (HasActive) {
        output.WriteRawTag(24);
        output.WriteBool(Active);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasGameAccount) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(GameAccount);
      }
      if (HasFlag) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Flag);
      }
      if (HasActive) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GameAccountFlagUpdateRequest other) {
      if (other == null) {
        return;
      }
      if (other.HasGameAccount) {
        if (!HasGameAccount) {
          GameAccount = new global::Bgs.Protocol.Account.V1.GameAccountHandle();
        }
        GameAccount.MergeFrom(other.GameAccount);
      }
      if (other.HasFlag) {
        Flag = other.Flag;
      }
      if (other.HasActive) {
        Active = other.Active;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (!HasGameAccount) {
              GameAccount = new global::Bgs.Protocol.Account.V1.GameAccountHandle();
            }
            input.ReadMessage(GameAccount);
            break;
          }
          case 16: {
            Flag = input.ReadUInt64();
            break;
          }
          case 24: {
            Active = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class SubscriptionUpdateRequest : pb::IMessage<SubscriptionUpdateRequest> {
    private static readonly pb::MessageParser<SubscriptionUpdateRequest> _parser = new pb::MessageParser<SubscriptionUpdateRequest>(() => new SubscriptionUpdateRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SubscriptionUpdateRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bgs.Protocol.Account.V1.AccountServiceReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SubscriptionUpdateRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SubscriptionUpdateRequest(SubscriptionUpdateRequest other) : this() {
      ref_ = other.ref_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SubscriptionUpdateRequest Clone() {
      return new SubscriptionUpdateRequest(this);
    }

    /// <summary>Field number for the "ref" field.</summary>
    public const int RefFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Bgs.Protocol.Account.V1.SubscriberReference> _repeated_ref_codec
        = pb::FieldCodec.ForMessage(18, global::Bgs.Protocol.Account.V1.SubscriberReference.Parser);
    private readonly pbc::RepeatedField<global::Bgs.Protocol.Account.V1.SubscriberReference> ref_ = new pbc::RepeatedField<global::Bgs.Protocol.Account.V1.SubscriberReference>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Bgs.Protocol.Account.V1.SubscriberReference> Ref {
      get { return ref_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SubscriptionUpdateRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SubscriptionUpdateRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!ref_.Equals(other.ref_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= ref_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      ref_.WriteTo(output, _repeated_ref_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += ref_.CalculateSize(_repeated_ref_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SubscriptionUpdateRequest other) {
      if (other == null) {
        return;
      }
      ref_.Add(other.ref_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 18: {
            ref_.AddEntriesFrom(input, _repeated_ref_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class SubscriptionUpdateResponse : pb::IMessage<SubscriptionUpdateResponse> {
    private static readonly pb::MessageParser<SubscriptionUpdateResponse> _parser = new pb::MessageParser<SubscriptionUpdateResponse>(() => new SubscriptionUpdateResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SubscriptionUpdateResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bgs.Protocol.Account.V1.AccountServiceReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SubscriptionUpdateResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SubscriptionUpdateResponse(SubscriptionUpdateResponse other) : this() {
      ref_ = other.ref_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SubscriptionUpdateResponse Clone() {
      return new SubscriptionUpdateResponse(this);
    }

    /// <summary>Field number for the "ref" field.</summary>
    public const int RefFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Bgs.Protocol.Account.V1.SubscriberReference> _repeated_ref_codec
        = pb::FieldCodec.ForMessage(10, global::Bgs.Protocol.Account.V1.SubscriberReference.Parser);
    private readonly pbc::RepeatedField<global::Bgs.Protocol.Account.V1.SubscriberReference> ref_ = new pbc::RepeatedField<global::Bgs.Protocol.Account.V1.SubscriberReference>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Bgs.Protocol.Account.V1.SubscriberReference> Ref {
      get { return ref_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SubscriptionUpdateResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SubscriptionUpdateResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!ref_.Equals(other.ref_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= ref_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      ref_.WriteTo(output, _repeated_ref_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += ref_.CalculateSize(_repeated_ref_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SubscriptionUpdateResponse other) {
      if (other == null) {
        return;
      }
      ref_.Add(other.ref_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ref_.AddEntriesFrom(input, _repeated_ref_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetAccountStateRequest : pb::IMessage<GetAccountStateRequest> {
    private static readonly pb::MessageParser<GetAccountStateRequest> _parser = new pb::MessageParser<GetAccountStateRequest>(() => new GetAccountStateRequest());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetAccountStateRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bgs.Protocol.Account.V1.AccountServiceReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetAccountStateRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetAccountStateRequest(GetAccountStateRequest other) : this() {
      _hasBits0 = other._hasBits0;
      entityId_ = other.HasEntityId ? other.entityId_.Clone() : null;
      program_ = other.program_;
      region_ = other.region_;
      options_ = other.HasOptions ? other.options_.Clone() : null;
      tags_ = other.HasTags ? other.tags_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetAccountStateRequest Clone() {
      return new GetAccountStateRequest(this);
    }

    /// <summary>Field number for the "entity_id" field.</summary>
    public const int EntityIdFieldNumber = 1;
    private global::Bgs.Protocol.EntityId entityId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bgs.Protocol.EntityId EntityId {
      get { return entityId_; }
      set {
        entityId_ = value;
      }
    }
    /// <summary>Gets whether the entity_id field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasEntityId {
      get { return entityId_ != null; }
    }
    /// <summary>Clears the value of the entity_id field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearEntityId() {
      entityId_ = null;
    }

    /// <summary>Field number for the "program" field.</summary>
    public const int ProgramFieldNumber = 2;
    private readonly static uint ProgramDefaultValue = 0;

    private uint program_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Program {
      get { if ((_hasBits0 & 1) != 0) { return program_; } else { return ProgramDefaultValue; } }
      set {
        _hasBits0 |= 1;
        program_ = value;
      }
    }
    /// <summary>Gets whether the "program" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasProgram {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "program" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearProgram() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "region" field.</summary>
    public const int RegionFieldNumber = 3;
    private readonly static uint RegionDefaultValue = 0;

    private uint region_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Region {
      get { if ((_hasBits0 & 2) != 0) { return region_; } else { return RegionDefaultValue; } }
      set {
        _hasBits0 |= 2;
        region_ = value;
      }
    }
    /// <summary>Gets whether the "region" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasRegion {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "region" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearRegion() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "options" field.</summary>
    public const int OptionsFieldNumber = 10;
    private global::Bgs.Protocol.Account.V1.AccountFieldOptions options_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bgs.Protocol.Account.V1.AccountFieldOptions Options {
      get { return options_; }
      set {
        options_ = value;
      }
    }
    /// <summary>Gets whether the options field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasOptions {
      get { return options_ != null; }
    }
    /// <summary>Clears the value of the options field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearOptions() {
      options_ = null;
    }

    /// <summary>Field number for the "tags" field.</summary>
    public const int TagsFieldNumber = 11;
    private global::Bgs.Protocol.Account.V1.AccountFieldTags tags_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bgs.Protocol.Account.V1.AccountFieldTags Tags {
      get { return tags_; }
      set {
        tags_ = value;
      }
    }
    /// <summary>Gets whether the tags field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasTags {
      get { return tags_ != null; }
    }
    /// <summary>Clears the value of the tags field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearTags() {
      tags_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetAccountStateRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetAccountStateRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(EntityId, other.EntityId)) return false;
      if (Program != other.Program) return false;
      if (Region != other.Region) return false;
      if (!object.Equals(Options, other.Options)) return false;
      if (!object.Equals(Tags, other.Tags)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasEntityId) hash ^= EntityId.GetHashCode();
      if (HasProgram) hash ^= Program.GetHashCode();
      if (HasRegion) hash ^= Region.GetHashCode();
      if (HasOptions) hash ^= Options.GetHashCode();
      if (HasTags) hash ^= Tags.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasEntityId) {
        output.WriteRawTag(10);
        output.WriteMessage(EntityId);
      }
      if (HasProgram) {
        output.WriteRawTag(16);
        output.WriteUInt32(Program);
      }
      if (HasRegion) {
        output.WriteRawTag(24);
        output.WriteUInt32(Region);
      }
      if (HasOptions) {
        output.WriteRawTag(82);
        output.WriteMessage(Options);
      }
      if (HasTags) {
        output.WriteRawTag(90);
        output.WriteMessage(Tags);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasEntityId) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(EntityId);
      }
      if (HasProgram) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Program);
      }
      if (HasRegion) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Region);
      }
      if (HasOptions) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Options);
      }
      if (HasTags) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Tags);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetAccountStateRequest other) {
      if (other == null) {
        return;
      }
      if (other.HasEntityId) {
        if (!HasEntityId) {
          EntityId = new global::Bgs.Protocol.EntityId();
        }
        EntityId.MergeFrom(other.EntityId);
      }
      if (other.HasProgram) {
        Program = other.Program;
      }
      if (other.HasRegion) {
        Region = other.Region;
      }
      if (other.HasOptions) {
        if (!HasOptions) {
          Options = new global::Bgs.Protocol.Account.V1.AccountFieldOptions();
        }
        Options.MergeFrom(other.Options);
      }
      if (other.HasTags) {
        if (!HasTags) {
          Tags = new global::Bgs.Protocol.Account.V1.AccountFieldTags();
        }
        Tags.MergeFrom(other.Tags);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (!HasEntityId) {
              EntityId = new global::Bgs.Protocol.EntityId();
            }
            input.ReadMessage(EntityId);
            break;
          }
          case 16: {
            Program = input.ReadUInt32();
            break;
          }
          case 24: {
            Region = input.ReadUInt32();
            break;
          }
          case 82: {
            if (!HasOptions) {
              Options = new global::Bgs.Protocol.Account.V1.AccountFieldOptions();
            }
            input.ReadMessage(Options);
            break;
          }
          case 90: {
            if (!HasTags) {
              Tags = new global::Bgs.Protocol.Account.V1.AccountFieldTags();
            }
            input.ReadMessage(Tags);
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetAccountStateResponse : pb::IMessage<GetAccountStateResponse> {
    private static readonly pb::MessageParser<GetAccountStateResponse> _parser = new pb::MessageParser<GetAccountStateResponse>(() => new GetAccountStateResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetAccountStateResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bgs.Protocol.Account.V1.AccountServiceReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetAccountStateResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetAccountStateResponse(GetAccountStateResponse other) : this() {
      state_ = other.HasState ? other.state_.Clone() : null;
      tags_ = other.HasTags ? other.tags_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetAccountStateResponse Clone() {
      return new GetAccountStateResponse(this);
    }

    /// <summary>Field number for the "state" field.</summary>
    public const int StateFieldNumber = 1;
    private global::Bgs.Protocol.Account.V1.AccountState state_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bgs.Protocol.Account.V1.AccountState State {
      get { return state_; }
      set {
        state_ = value;
      }
    }
    /// <summary>Gets whether the state field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasState {
      get { return state_ != null; }
    }
    /// <summary>Clears the value of the state field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearState() {
      state_ = null;
    }

    /// <summary>Field number for the "tags" field.</summary>
    public const int TagsFieldNumber = 2;
    private global::Bgs.Protocol.Account.V1.AccountFieldTags tags_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bgs.Protocol.Account.V1.AccountFieldTags Tags {
      get { return tags_; }
      set {
        tags_ = value;
      }
    }
    /// <summary>Gets whether the tags field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasTags {
      get { return tags_ != null; }
    }
    /// <summary>Clears the value of the tags field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearTags() {
      tags_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetAccountStateResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetAccountStateResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(State, other.State)) return false;
      if (!object.Equals(Tags, other.Tags)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasState) hash ^= State.GetHashCode();
      if (HasTags) hash ^= Tags.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasState) {
        output.WriteRawTag(10);
        output.WriteMessage(State);
      }
      if (HasTags) {
        output.WriteRawTag(18);
        output.WriteMessage(Tags);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasState) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(State);
      }
      if (HasTags) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Tags);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetAccountStateResponse other) {
      if (other == null) {
        return;
      }
      if (other.HasState) {
        if (!HasState) {
          State = new global::Bgs.Protocol.Account.V1.AccountState();
        }
        State.MergeFrom(other.State);
      }
      if (other.HasTags) {
        if (!HasTags) {
          Tags = new global::Bgs.Protocol.Account.V1.AccountFieldTags();
        }
        Tags.MergeFrom(other.Tags);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (!HasState) {
              State = new global::Bgs.Protocol.Account.V1.AccountState();
            }
            input.ReadMessage(State);
            break;
          }
          case 18: {
            if (!HasTags) {
              Tags = new global::Bgs.Protocol.Account.V1.AccountFieldTags();
            }
            input.ReadMessage(Tags);
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetSignedAccountStateRequest : pb::IMessage<GetSignedAccountStateRequest> {
    private static readonly pb::MessageParser<GetSignedAccountStateRequest> _parser = new pb::MessageParser<GetSignedAccountStateRequest>(() => new GetSignedAccountStateRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetSignedAccountStateRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bgs.Protocol.Account.V1.AccountServiceReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetSignedAccountStateRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetSignedAccountStateRequest(GetSignedAccountStateRequest other) : this() {
      account_ = other.HasAccount ? other.account_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetSignedAccountStateRequest Clone() {
      return new GetSignedAccountStateRequest(this);
    }

    /// <summary>Field number for the "account" field.</summary>
    public const int AccountFieldNumber = 1;
    private global::Bgs.Protocol.Account.V1.AccountId account_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bgs.Protocol.Account.V1.AccountId Account {
      get { return account_; }
      set {
        account_ = value;
      }
    }
    /// <summary>Gets whether the account field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasAccount {
      get { return account_ != null; }
    }
    /// <summary>Clears the value of the account field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearAccount() {
      account_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetSignedAccountStateRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetSignedAccountStateRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Account, other.Account)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasAccount) hash ^= Account.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasAccount) {
        output.WriteRawTag(10);
        output.WriteMessage(Account);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasAccount) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Account);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetSignedAccountStateRequest other) {
      if (other == null) {
        return;
      }
      if (other.HasAccount) {
        if (!HasAccount) {
          Account = new global::Bgs.Protocol.Account.V1.AccountId();
        }
        Account.MergeFrom(other.Account);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (!HasAccount) {
              Account = new global::Bgs.Protocol.Account.V1.AccountId();
            }
            input.ReadMessage(Account);
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetSignedAccountStateResponse : pb::IMessage<GetSignedAccountStateResponse> {
    private static readonly pb::MessageParser<GetSignedAccountStateResponse> _parser = new pb::MessageParser<GetSignedAccountStateResponse>(() => new GetSignedAccountStateResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetSignedAccountStateResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bgs.Protocol.Account.V1.AccountServiceReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetSignedAccountStateResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetSignedAccountStateResponse(GetSignedAccountStateResponse other) : this() {
      token_ = other.token_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetSignedAccountStateResponse Clone() {
      return new GetSignedAccountStateResponse(this);
    }

    /// <summary>Field number for the "token" field.</summary>
    public const int TokenFieldNumber = 1;
    private readonly static string TokenDefaultValue = "";

    private string token_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Token {
      get { return token_ ?? TokenDefaultValue; }
      set {
        token_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "token" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasToken {
      get { return token_ != null; }
    }
    /// <summary>Clears the value of the "token" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearToken() {
      token_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetSignedAccountStateResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetSignedAccountStateResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Token != other.Token) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasToken) hash ^= Token.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasToken) {
        output.WriteRawTag(10);
        output.WriteString(Token);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasToken) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Token);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetSignedAccountStateResponse other) {
      if (other == null) {
        return;
      }
      if (other.HasToken) {
        Token = other.Token;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Token = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetGameAccountStateRequest : pb::IMessage<GetGameAccountStateRequest> {
    private static readonly pb::MessageParser<GetGameAccountStateRequest> _parser = new pb::MessageParser<GetGameAccountStateRequest>(() => new GetGameAccountStateRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetGameAccountStateRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bgs.Protocol.Account.V1.AccountServiceReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetGameAccountStateRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetGameAccountStateRequest(GetGameAccountStateRequest other) : this() {
      accountId_ = other.HasAccountId ? other.accountId_.Clone() : null;
      gameAccountId_ = other.HasGameAccountId ? other.gameAccountId_.Clone() : null;
      options_ = other.HasOptions ? other.options_.Clone() : null;
      tags_ = other.HasTags ? other.tags_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetGameAccountStateRequest Clone() {
      return new GetGameAccountStateRequest(this);
    }

    /// <summary>Field number for the "account_id" field.</summary>
    public const int AccountIdFieldNumber = 1;
    private global::Bgs.Protocol.EntityId accountId_;
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bgs.Protocol.EntityId AccountId {
      get { return accountId_; }
      set {
        accountId_ = value;
      }
    }
    /// <summary>Gets whether the account_id field is set</summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasAccountId {
      get { return accountId_ != null; }
    }
    /// <summary>Clears the value of the account_id field</summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearAccountId() {
      accountId_ = null;
    }

    /// <summary>Field number for the "game_account_id" field.</summary>
    public const int GameAccountIdFieldNumber = 2;
    private global::Bgs.Protocol.EntityId gameAccountId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bgs.Protocol.EntityId GameAccountId {
      get { return gameAccountId_; }
      set {
        gameAccountId_ = value;
      }
    }
    /// <summary>Gets whether the game_account_id field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasGameAccountId {
      get { return gameAccountId_ != null; }
    }
    /// <summary>Clears the value of the game_account_id field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearGameAccountId() {
      gameAccountId_ = null;
    }

    /// <summary>Field number for the "options" field.</summary>
    public const int OptionsFieldNumber = 10;
    private global::Bgs.Protocol.Account.V1.GameAccountFieldOptions options_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bgs.Protocol.Account.V1.GameAccountFieldOptions Options {
      get { return options_; }
      set {
        options_ = value;
      }
    }
    /// <summary>Gets whether the options field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasOptions {
      get { return options_ != null; }
    }
    /// <summary>Clears the value of the options field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearOptions() {
      options_ = null;
    }

    /// <summary>Field number for the "tags" field.</summary>
    public const int TagsFieldNumber = 11;
    private global::Bgs.Protocol.Account.V1.GameAccountFieldTags tags_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bgs.Protocol.Account.V1.GameAccountFieldTags Tags {
      get { return tags_; }
      set {
        tags_ = value;
      }
    }
    /// <summary>Gets whether the tags field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasTags {
      get { return tags_ != null; }
    }
    /// <summary>Clears the value of the tags field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearTags() {
      tags_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetGameAccountStateRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetGameAccountStateRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(AccountId, other.AccountId)) return false;
      if (!object.Equals(GameAccountId, other.GameAccountId)) return false;
      if (!object.Equals(Options, other.Options)) return false;
      if (!object.Equals(Tags, other.Tags)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasAccountId) hash ^= AccountId.GetHashCode();
      if (HasGameAccountId) hash ^= GameAccountId.GetHashCode();
      if (HasOptions) hash ^= Options.GetHashCode();
      if (HasTags) hash ^= Tags.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasAccountId) {
        output.WriteRawTag(10);
        output.WriteMessage(AccountId);
      }
      if (HasGameAccountId) {
        output.WriteRawTag(18);
        output.WriteMessage(GameAccountId);
      }
      if (HasOptions) {
        output.WriteRawTag(82);
        output.WriteMessage(Options);
      }
      if (HasTags) {
        output.WriteRawTag(90);
        output.WriteMessage(Tags);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasAccountId) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AccountId);
      }
      if (HasGameAccountId) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(GameAccountId);
      }
      if (HasOptions) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Options);
      }
      if (HasTags) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Tags);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetGameAccountStateRequest other) {
      if (other == null) {
        return;
      }
      if (other.HasAccountId) {
        if (!HasAccountId) {
          AccountId = new global::Bgs.Protocol.EntityId();
        }
        AccountId.MergeFrom(other.AccountId);
      }
      if (other.HasGameAccountId) {
        if (!HasGameAccountId) {
          GameAccountId = new global::Bgs.Protocol.EntityId();
        }
        GameAccountId.MergeFrom(other.GameAccountId);
      }
      if (other.HasOptions) {
        if (!HasOptions) {
          Options = new global::Bgs.Protocol.Account.V1.GameAccountFieldOptions();
        }
        Options.MergeFrom(other.Options);
      }
      if (other.HasTags) {
        if (!HasTags) {
          Tags = new global::Bgs.Protocol.Account.V1.GameAccountFieldTags();
        }
        Tags.MergeFrom(other.Tags);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (!HasAccountId) {
              AccountId = new global::Bgs.Protocol.EntityId();
            }
            input.ReadMessage(AccountId);
            break;
          }
          case 18: {
            if (!HasGameAccountId) {
              GameAccountId = new global::Bgs.Protocol.EntityId();
            }
            input.ReadMessage(GameAccountId);
            break;
          }
          case 82: {
            if (!HasOptions) {
              Options = new global::Bgs.Protocol.Account.V1.GameAccountFieldOptions();
            }
            input.ReadMessage(Options);
            break;
          }
          case 90: {
            if (!HasTags) {
              Tags = new global::Bgs.Protocol.Account.V1.GameAccountFieldTags();
            }
            input.ReadMessage(Tags);
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetGameAccountStateResponse : pb::IMessage<GetGameAccountStateResponse> {
    private static readonly pb::MessageParser<GetGameAccountStateResponse> _parser = new pb::MessageParser<GetGameAccountStateResponse>(() => new GetGameAccountStateResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetGameAccountStateResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bgs.Protocol.Account.V1.AccountServiceReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetGameAccountStateResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetGameAccountStateResponse(GetGameAccountStateResponse other) : this() {
      state_ = other.HasState ? other.state_.Clone() : null;
      tags_ = other.HasTags ? other.tags_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetGameAccountStateResponse Clone() {
      return new GetGameAccountStateResponse(this);
    }

    /// <summary>Field number for the "state" field.</summary>
    public const int StateFieldNumber = 1;
    private global::Bgs.Protocol.Account.V1.GameAccountState state_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bgs.Protocol.Account.V1.GameAccountState State {
      get { return state_; }
      set {
        state_ = value;
      }
    }
    /// <summary>Gets whether the state field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasState {
      get { return state_ != null; }
    }
    /// <summary>Clears the value of the state field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearState() {
      state_ = null;
    }

    /// <summary>Field number for the "tags" field.</summary>
    public const int TagsFieldNumber = 2;
    private global::Bgs.Protocol.Account.V1.GameAccountFieldTags tags_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bgs.Protocol.Account.V1.GameAccountFieldTags Tags {
      get { return tags_; }
      set {
        tags_ = value;
      }
    }
    /// <summary>Gets whether the tags field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasTags {
      get { return tags_ != null; }
    }
    /// <summary>Clears the value of the tags field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearTags() {
      tags_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetGameAccountStateResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetGameAccountStateResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(State, other.State)) return false;
      if (!object.Equals(Tags, other.Tags)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasState) hash ^= State.GetHashCode();
      if (HasTags) hash ^= Tags.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasState) {
        output.WriteRawTag(10);
        output.WriteMessage(State);
      }
      if (HasTags) {
        output.WriteRawTag(18);
        output.WriteMessage(Tags);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasState) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(State);
      }
      if (HasTags) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Tags);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetGameAccountStateResponse other) {
      if (other == null) {
        return;
      }
      if (other.HasState) {
        if (!HasState) {
          State = new global::Bgs.Protocol.Account.V1.GameAccountState();
        }
        State.MergeFrom(other.State);
      }
      if (other.HasTags) {
        if (!HasTags) {
          Tags = new global::Bgs.Protocol.Account.V1.GameAccountFieldTags();
        }
        Tags.MergeFrom(other.Tags);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (!HasState) {
              State = new global::Bgs.Protocol.Account.V1.GameAccountState();
            }
            input.ReadMessage(State);
            break;
          }
          case 18: {
            if (!HasTags) {
              Tags = new global::Bgs.Protocol.Account.V1.GameAccountFieldTags();
            }
            input.ReadMessage(Tags);
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetLicensesRequest : pb::IMessage<GetLicensesRequest> {
    private static readonly pb::MessageParser<GetLicensesRequest> _parser = new pb::MessageParser<GetLicensesRequest>(() => new GetLicensesRequest());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetLicensesRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bgs.Protocol.Account.V1.AccountServiceReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetLicensesRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetLicensesRequest(GetLicensesRequest other) : this() {
      _hasBits0 = other._hasBits0;
      targetId_ = other.HasTargetId ? other.targetId_.Clone() : null;
      fetchAccountLicenses_ = other.fetchAccountLicenses_;
      fetchGameAccountLicenses_ = other.fetchGameAccountLicenses_;
      fetchDynamicAccountLicenses_ = other.fetchDynamicAccountLicenses_;
      program_ = other.program_;
      excludeUnknownProgram_ = other.excludeUnknownProgram_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetLicensesRequest Clone() {
      return new GetLicensesRequest(this);
    }

    /// <summary>Field number for the "target_id" field.</summary>
    public const int TargetIdFieldNumber = 1;
    private global::Bgs.Protocol.EntityId targetId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bgs.Protocol.EntityId TargetId {
      get { return targetId_; }
      set {
        targetId_ = value;
      }
    }
    /// <summary>Gets whether the target_id field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasTargetId {
      get { return targetId_ != null; }
    }
    /// <summary>Clears the value of the target_id field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearTargetId() {
      targetId_ = null;
    }

    /// <summary>Field number for the "fetch_account_licenses" field.</summary>
    public const int FetchAccountLicensesFieldNumber = 2;
    private readonly static bool FetchAccountLicensesDefaultValue = false;

    private bool fetchAccountLicenses_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool FetchAccountLicenses {
      get { if ((_hasBits0 & 1) != 0) { return fetchAccountLicenses_; } else { return FetchAccountLicensesDefaultValue; } }
      set {
        _hasBits0 |= 1;
        fetchAccountLicenses_ = value;
      }
    }
    /// <summary>Gets whether the "fetch_account_licenses" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasFetchAccountLicenses {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "fetch_account_licenses" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearFetchAccountLicenses() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "fetch_game_account_licenses" field.</summary>
    public const int FetchGameAccountLicensesFieldNumber = 3;
    private readonly static bool FetchGameAccountLicensesDefaultValue = false;

    private bool fetchGameAccountLicenses_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool FetchGameAccountLicenses {
      get { if ((_hasBits0 & 2) != 0) { return fetchGameAccountLicenses_; } else { return FetchGameAccountLicensesDefaultValue; } }
      set {
        _hasBits0 |= 2;
        fetchGameAccountLicenses_ = value;
      }
    }
    /// <summary>Gets whether the "fetch_game_account_licenses" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasFetchGameAccountLicenses {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "fetch_game_account_licenses" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearFetchGameAccountLicenses() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "fetch_dynamic_account_licenses" field.</summary>
    public const int FetchDynamicAccountLicensesFieldNumber = 4;
    private readonly static bool FetchDynamicAccountLicensesDefaultValue = false;

    private bool fetchDynamicAccountLicenses_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool FetchDynamicAccountLicenses {
      get { if ((_hasBits0 & 4) != 0) { return fetchDynamicAccountLicenses_; } else { return FetchDynamicAccountLicensesDefaultValue; } }
      set {
        _hasBits0 |= 4;
        fetchDynamicAccountLicenses_ = value;
      }
    }
    /// <summary>Gets whether the "fetch_dynamic_account_licenses" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasFetchDynamicAccountLicenses {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "fetch_dynamic_account_licenses" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearFetchDynamicAccountLicenses() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "program" field.</summary>
    public const int ProgramFieldNumber = 5;
    private readonly static uint ProgramDefaultValue = 0;

    private uint program_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Program {
      get { if ((_hasBits0 & 8) != 0) { return program_; } else { return ProgramDefaultValue; } }
      set {
        _hasBits0 |= 8;
        program_ = value;
      }
    }
    /// <summary>Gets whether the "program" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasProgram {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "program" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearProgram() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "exclude_unknown_program" field.</summary>
    public const int ExcludeUnknownProgramFieldNumber = 6;
    private readonly static bool ExcludeUnknownProgramDefaultValue = false;

    private bool excludeUnknownProgram_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool ExcludeUnknownProgram {
      get { if ((_hasBits0 & 16) != 0) { return excludeUnknownProgram_; } else { return ExcludeUnknownProgramDefaultValue; } }
      set {
        _hasBits0 |= 16;
        excludeUnknownProgram_ = value;
      }
    }
    /// <summary>Gets whether the "exclude_unknown_program" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasExcludeUnknownProgram {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "exclude_unknown_program" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearExcludeUnknownProgram() {
      _hasBits0 &= ~16;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetLicensesRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetLicensesRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(TargetId, other.TargetId)) return false;
      if (FetchAccountLicenses != other.FetchAccountLicenses) return false;
      if (FetchGameAccountLicenses != other.FetchGameAccountLicenses) return false;
      if (FetchDynamicAccountLicenses != other.FetchDynamicAccountLicenses) return false;
      if (Program != other.Program) return false;
      if (ExcludeUnknownProgram != other.ExcludeUnknownProgram) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasTargetId) hash ^= TargetId.GetHashCode();
      if (HasFetchAccountLicenses) hash ^= FetchAccountLicenses.GetHashCode();
      if (HasFetchGameAccountLicenses) hash ^= FetchGameAccountLicenses.GetHashCode();
      if (HasFetchDynamicAccountLicenses) hash ^= FetchDynamicAccountLicenses.GetHashCode();
      if (HasProgram) hash ^= Program.GetHashCode();
      if (HasExcludeUnknownProgram) hash ^= ExcludeUnknownProgram.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasTargetId) {
        output.WriteRawTag(10);
        output.WriteMessage(TargetId);
      }
      if (HasFetchAccountLicenses) {
        output.WriteRawTag(16);
        output.WriteBool(FetchAccountLicenses);
      }
      if (HasFetchGameAccountLicenses) {
        output.WriteRawTag(24);
        output.WriteBool(FetchGameAccountLicenses);
      }
      if (HasFetchDynamicAccountLicenses) {
        output.WriteRawTag(32);
        output.WriteBool(FetchDynamicAccountLicenses);
      }
      if (HasProgram) {
        output.WriteRawTag(45);
        output.WriteFixed32(Program);
      }
      if (HasExcludeUnknownProgram) {
        output.WriteRawTag(48);
        output.WriteBool(ExcludeUnknownProgram);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasTargetId) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TargetId);
      }
      if (HasFetchAccountLicenses) {
        size += 1 + 1;
      }
      if (HasFetchGameAccountLicenses) {
        size += 1 + 1;
      }
      if (HasFetchDynamicAccountLicenses) {
        size += 1 + 1;
      }
      if (HasProgram) {
        size += 1 + 4;
      }
      if (HasExcludeUnknownProgram) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetLicensesRequest other) {
      if (other == null) {
        return;
      }
      if (other.HasTargetId) {
        if (!HasTargetId) {
          TargetId = new global::Bgs.Protocol.EntityId();
        }
        TargetId.MergeFrom(other.TargetId);
      }
      if (other.HasFetchAccountLicenses) {
        FetchAccountLicenses = other.FetchAccountLicenses;
      }
      if (other.HasFetchGameAccountLicenses) {
        FetchGameAccountLicenses = other.FetchGameAccountLicenses;
      }
      if (other.HasFetchDynamicAccountLicenses) {
        FetchDynamicAccountLicenses = other.FetchDynamicAccountLicenses;
      }
      if (other.HasProgram) {
        Program = other.Program;
      }
      if (other.HasExcludeUnknownProgram) {
        ExcludeUnknownProgram = other.ExcludeUnknownProgram;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (!HasTargetId) {
              TargetId = new global::Bgs.Protocol.EntityId();
            }
            input.ReadMessage(TargetId);
            break;
          }
          case 16: {
            FetchAccountLicenses = input.ReadBool();
            break;
          }
          case 24: {
            FetchGameAccountLicenses = input.ReadBool();
            break;
          }
          case 32: {
            FetchDynamicAccountLicenses = input.ReadBool();
            break;
          }
          case 45: {
            Program = input.ReadFixed32();
            break;
          }
          case 48: {
            ExcludeUnknownProgram = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetLicensesResponse : pb::IMessage<GetLicensesResponse> {
    private static readonly pb::MessageParser<GetLicensesResponse> _parser = new pb::MessageParser<GetLicensesResponse>(() => new GetLicensesResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetLicensesResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bgs.Protocol.Account.V1.AccountServiceReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetLicensesResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetLicensesResponse(GetLicensesResponse other) : this() {
      licenses_ = other.licenses_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetLicensesResponse Clone() {
      return new GetLicensesResponse(this);
    }

    /// <summary>Field number for the "licenses" field.</summary>
    public const int LicensesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Bgs.Protocol.Account.V1.AccountLicense> _repeated_licenses_codec
        = pb::FieldCodec.ForMessage(10, global::Bgs.Protocol.Account.V1.AccountLicense.Parser);
    private readonly pbc::RepeatedField<global::Bgs.Protocol.Account.V1.AccountLicense> licenses_ = new pbc::RepeatedField<global::Bgs.Protocol.Account.V1.AccountLicense>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Bgs.Protocol.Account.V1.AccountLicense> Licenses {
      get { return licenses_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetLicensesResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetLicensesResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!licenses_.Equals(other.licenses_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= licenses_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      licenses_.WriteTo(output, _repeated_licenses_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += licenses_.CalculateSize(_repeated_licenses_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetLicensesResponse other) {
      if (other == null) {
        return;
      }
      licenses_.Add(other.licenses_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            licenses_.AddEntriesFrom(input, _repeated_licenses_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetGameSessionInfoRequest : pb::IMessage<GetGameSessionInfoRequest> {
    private static readonly pb::MessageParser<GetGameSessionInfoRequest> _parser = new pb::MessageParser<GetGameSessionInfoRequest>(() => new GetGameSessionInfoRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetGameSessionInfoRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bgs.Protocol.Account.V1.AccountServiceReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetGameSessionInfoRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetGameSessionInfoRequest(GetGameSessionInfoRequest other) : this() {
      entityId_ = other.HasEntityId ? other.entityId_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetGameSessionInfoRequest Clone() {
      return new GetGameSessionInfoRequest(this);
    }

    /// <summary>Field number for the "entity_id" field.</summary>
    public const int EntityIdFieldNumber = 1;
    private global::Bgs.Protocol.EntityId entityId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bgs.Protocol.EntityId EntityId {
      get { return entityId_; }
      set {
        entityId_ = value;
      }
    }
    /// <summary>Gets whether the entity_id field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasEntityId {
      get { return entityId_ != null; }
    }
    /// <summary>Clears the value of the entity_id field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearEntityId() {
      entityId_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetGameSessionInfoRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetGameSessionInfoRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(EntityId, other.EntityId)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasEntityId) hash ^= EntityId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasEntityId) {
        output.WriteRawTag(10);
        output.WriteMessage(EntityId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasEntityId) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(EntityId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetGameSessionInfoRequest other) {
      if (other == null) {
        return;
      }
      if (other.HasEntityId) {
        if (!HasEntityId) {
          EntityId = new global::Bgs.Protocol.EntityId();
        }
        EntityId.MergeFrom(other.EntityId);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (!HasEntityId) {
              EntityId = new global::Bgs.Protocol.EntityId();
            }
            input.ReadMessage(EntityId);
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetGameSessionInfoResponse : pb::IMessage<GetGameSessionInfoResponse> {
    private static readonly pb::MessageParser<GetGameSessionInfoResponse> _parser = new pb::MessageParser<GetGameSessionInfoResponse>(() => new GetGameSessionInfoResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetGameSessionInfoResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bgs.Protocol.Account.V1.AccountServiceReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetGameSessionInfoResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetGameSessionInfoResponse(GetGameSessionInfoResponse other) : this() {
      sessionInfo_ = other.HasSessionInfo ? other.sessionInfo_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetGameSessionInfoResponse Clone() {
      return new GetGameSessionInfoResponse(this);
    }

    /// <summary>Field number for the "session_info" field.</summary>
    public const int SessionInfoFieldNumber = 2;
    private global::Bgs.Protocol.Account.V1.GameSessionInfo sessionInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bgs.Protocol.Account.V1.GameSessionInfo SessionInfo {
      get { return sessionInfo_; }
      set {
        sessionInfo_ = value;
      }
    }
    /// <summary>Gets whether the session_info field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasSessionInfo {
      get { return sessionInfo_ != null; }
    }
    /// <summary>Clears the value of the session_info field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearSessionInfo() {
      sessionInfo_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetGameSessionInfoResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetGameSessionInfoResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(SessionInfo, other.SessionInfo)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasSessionInfo) hash ^= SessionInfo.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasSessionInfo) {
        output.WriteRawTag(18);
        output.WriteMessage(SessionInfo);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasSessionInfo) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SessionInfo);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetGameSessionInfoResponse other) {
      if (other == null) {
        return;
      }
      if (other.HasSessionInfo) {
        if (!HasSessionInfo) {
          SessionInfo = new global::Bgs.Protocol.Account.V1.GameSessionInfo();
        }
        SessionInfo.MergeFrom(other.SessionInfo);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 18: {
            if (!HasSessionInfo) {
              SessionInfo = new global::Bgs.Protocol.Account.V1.GameSessionInfo();
            }
            input.ReadMessage(SessionInfo);
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetGameTimeRemainingInfoRequest : pb::IMessage<GetGameTimeRemainingInfoRequest> {
    private static readonly pb::MessageParser<GetGameTimeRemainingInfoRequest> _parser = new pb::MessageParser<GetGameTimeRemainingInfoRequest>(() => new GetGameTimeRemainingInfoRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetGameTimeRemainingInfoRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bgs.Protocol.Account.V1.AccountServiceReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetGameTimeRemainingInfoRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetGameTimeRemainingInfoRequest(GetGameTimeRemainingInfoRequest other) : this() {
      gameAccountId_ = other.HasGameAccountId ? other.gameAccountId_.Clone() : null;
      accountId_ = other.HasAccountId ? other.accountId_.Clone() : null;
      benefactorId_ = other.benefactorId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetGameTimeRemainingInfoRequest Clone() {
      return new GetGameTimeRemainingInfoRequest(this);
    }

    /// <summary>Field number for the "game_account_id" field.</summary>
    public const int GameAccountIdFieldNumber = 1;
    private global::Bgs.Protocol.EntityId gameAccountId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bgs.Protocol.EntityId GameAccountId {
      get { return gameAccountId_; }
      set {
        gameAccountId_ = value;
      }
    }
    /// <summary>Gets whether the game_account_id field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasGameAccountId {
      get { return gameAccountId_ != null; }
    }
    /// <summary>Clears the value of the game_account_id field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearGameAccountId() {
      gameAccountId_ = null;
    }

    /// <summary>Field number for the "account_id" field.</summary>
    public const int AccountIdFieldNumber = 2;
    private global::Bgs.Protocol.EntityId accountId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bgs.Protocol.EntityId AccountId {
      get { return accountId_; }
      set {
        accountId_ = value;
      }
    }
    /// <summary>Gets whether the account_id field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasAccountId {
      get { return accountId_ != null; }
    }
    /// <summary>Clears the value of the account_id field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearAccountId() {
      accountId_ = null;
    }

    /// <summary>Field number for the "benefactor_id" field.</summary>
    public const int BenefactorIdFieldNumber = 3;
    private readonly static string BenefactorIdDefaultValue = "";

    private string benefactorId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string BenefactorId {
      get { return benefactorId_ ?? BenefactorIdDefaultValue; }
      set {
        benefactorId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "benefactor_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasBenefactorId {
      get { return benefactorId_ != null; }
    }
    /// <summary>Clears the value of the "benefactor_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearBenefactorId() {
      benefactorId_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetGameTimeRemainingInfoRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetGameTimeRemainingInfoRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(GameAccountId, other.GameAccountId)) return false;
      if (!object.Equals(AccountId, other.AccountId)) return false;
      if (BenefactorId != other.BenefactorId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasGameAccountId) hash ^= GameAccountId.GetHashCode();
      if (HasAccountId) hash ^= AccountId.GetHashCode();
      if (HasBenefactorId) hash ^= BenefactorId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasGameAccountId) {
        output.WriteRawTag(10);
        output.WriteMessage(GameAccountId);
      }
      if (HasAccountId) {
        output.WriteRawTag(18);
        output.WriteMessage(AccountId);
      }
      if (HasBenefactorId) {
        output.WriteRawTag(26);
        output.WriteString(BenefactorId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasGameAccountId) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(GameAccountId);
      }
      if (HasAccountId) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AccountId);
      }
      if (HasBenefactorId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(BenefactorId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetGameTimeRemainingInfoRequest other) {
      if (other == null) {
        return;
      }
      if (other.HasGameAccountId) {
        if (!HasGameAccountId) {
          GameAccountId = new global::Bgs.Protocol.EntityId();
        }
        GameAccountId.MergeFrom(other.GameAccountId);
      }
      if (other.HasAccountId) {
        if (!HasAccountId) {
          AccountId = new global::Bgs.Protocol.EntityId();
        }
        AccountId.MergeFrom(other.AccountId);
      }
      if (other.HasBenefactorId) {
        BenefactorId = other.BenefactorId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (!HasGameAccountId) {
              GameAccountId = new global::Bgs.Protocol.EntityId();
            }
            input.ReadMessage(GameAccountId);
            break;
          }
          case 18: {
            if (!HasAccountId) {
              AccountId = new global::Bgs.Protocol.EntityId();
            }
            input.ReadMessage(AccountId);
            break;
          }
          case 26: {
            BenefactorId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetGameTimeRemainingInfoResponse : pb::IMessage<GetGameTimeRemainingInfoResponse> {
    private static readonly pb::MessageParser<GetGameTimeRemainingInfoResponse> _parser = new pb::MessageParser<GetGameTimeRemainingInfoResponse>(() => new GetGameTimeRemainingInfoResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetGameTimeRemainingInfoResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bgs.Protocol.Account.V1.AccountServiceReflection.Descriptor.MessageTypes[16]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetGameTimeRemainingInfoResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetGameTimeRemainingInfoResponse(GetGameTimeRemainingInfoResponse other) : this() {
      gameTimeRemainingInfo_ = other.HasGameTimeRemainingInfo ? other.gameTimeRemainingInfo_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetGameTimeRemainingInfoResponse Clone() {
      return new GetGameTimeRemainingInfoResponse(this);
    }

    /// <summary>Field number for the "game_time_remaining_info" field.</summary>
    public const int GameTimeRemainingInfoFieldNumber = 1;
    private global::Bgs.Protocol.Account.V1.GameTimeRemainingInfo gameTimeRemainingInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bgs.Protocol.Account.V1.GameTimeRemainingInfo GameTimeRemainingInfo {
      get { return gameTimeRemainingInfo_; }
      set {
        gameTimeRemainingInfo_ = value;
      }
    }
    /// <summary>Gets whether the game_time_remaining_info field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasGameTimeRemainingInfo {
      get { return gameTimeRemainingInfo_ != null; }
    }
    /// <summary>Clears the value of the game_time_remaining_info field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearGameTimeRemainingInfo() {
      gameTimeRemainingInfo_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetGameTimeRemainingInfoResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetGameTimeRemainingInfoResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(GameTimeRemainingInfo, other.GameTimeRemainingInfo)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasGameTimeRemainingInfo) hash ^= GameTimeRemainingInfo.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasGameTimeRemainingInfo) {
        output.WriteRawTag(10);
        output.WriteMessage(GameTimeRemainingInfo);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasGameTimeRemainingInfo) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(GameTimeRemainingInfo);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetGameTimeRemainingInfoResponse other) {
      if (other == null) {
        return;
      }
      if (other.HasGameTimeRemainingInfo) {
        if (!HasGameTimeRemainingInfo) {
          GameTimeRemainingInfo = new global::Bgs.Protocol.Account.V1.GameTimeRemainingInfo();
        }
        GameTimeRemainingInfo.MergeFrom(other.GameTimeRemainingInfo);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (!HasGameTimeRemainingInfo) {
              GameTimeRemainingInfo = new global::Bgs.Protocol.Account.V1.GameTimeRemainingInfo();
            }
            input.ReadMessage(GameTimeRemainingInfo);
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetCAISInfoRequest : pb::IMessage<GetCAISInfoRequest> {
    private static readonly pb::MessageParser<GetCAISInfoRequest> _parser = new pb::MessageParser<GetCAISInfoRequest>(() => new GetCAISInfoRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetCAISInfoRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bgs.Protocol.Account.V1.AccountServiceReflection.Descriptor.MessageTypes[17]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetCAISInfoRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetCAISInfoRequest(GetCAISInfoRequest other) : this() {
      entityId_ = other.HasEntityId ? other.entityId_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetCAISInfoRequest Clone() {
      return new GetCAISInfoRequest(this);
    }

    /// <summary>Field number for the "entity_id" field.</summary>
    public const int EntityIdFieldNumber = 1;
    private global::Bgs.Protocol.EntityId entityId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bgs.Protocol.EntityId EntityId {
      get { return entityId_; }
      set {
        entityId_ = value;
      }
    }
    /// <summary>Gets whether the entity_id field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasEntityId {
      get { return entityId_ != null; }
    }
    /// <summary>Clears the value of the entity_id field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearEntityId() {
      entityId_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetCAISInfoRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetCAISInfoRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(EntityId, other.EntityId)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasEntityId) hash ^= EntityId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasEntityId) {
        output.WriteRawTag(10);
        output.WriteMessage(EntityId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasEntityId) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(EntityId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetCAISInfoRequest other) {
      if (other == null) {
        return;
      }
      if (other.HasEntityId) {
        if (!HasEntityId) {
          EntityId = new global::Bgs.Protocol.EntityId();
        }
        EntityId.MergeFrom(other.EntityId);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (!HasEntityId) {
              EntityId = new global::Bgs.Protocol.EntityId();
            }
            input.ReadMessage(EntityId);
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetCAISInfoResponse : pb::IMessage<GetCAISInfoResponse> {
    private static readonly pb::MessageParser<GetCAISInfoResponse> _parser = new pb::MessageParser<GetCAISInfoResponse>(() => new GetCAISInfoResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetCAISInfoResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bgs.Protocol.Account.V1.AccountServiceReflection.Descriptor.MessageTypes[18]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetCAISInfoResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetCAISInfoResponse(GetCAISInfoResponse other) : this() {
      caisInfo_ = other.HasCaisInfo ? other.caisInfo_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetCAISInfoResponse Clone() {
      return new GetCAISInfoResponse(this);
    }

    /// <summary>Field number for the "cais_info" field.</summary>
    public const int CaisInfoFieldNumber = 1;
    private global::Bgs.Protocol.Account.V1.CAIS caisInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bgs.Protocol.Account.V1.CAIS CaisInfo {
      get { return caisInfo_; }
      set {
        caisInfo_ = value;
      }
    }
    /// <summary>Gets whether the cais_info field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasCaisInfo {
      get { return caisInfo_ != null; }
    }
    /// <summary>Clears the value of the cais_info field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearCaisInfo() {
      caisInfo_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetCAISInfoResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetCAISInfoResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(CaisInfo, other.CaisInfo)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasCaisInfo) hash ^= CaisInfo.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasCaisInfo) {
        output.WriteRawTag(10);
        output.WriteMessage(CaisInfo);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasCaisInfo) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CaisInfo);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetCAISInfoResponse other) {
      if (other == null) {
        return;
      }
      if (other.HasCaisInfo) {
        if (!HasCaisInfo) {
          CaisInfo = new global::Bgs.Protocol.Account.V1.CAIS();
        }
        CaisInfo.MergeFrom(other.CaisInfo);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (!HasCaisInfo) {
              CaisInfo = new global::Bgs.Protocol.Account.V1.CAIS();
            }
            input.ReadMessage(CaisInfo);
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetAuthorizedDataRequest : pb::IMessage<GetAuthorizedDataRequest> {
    private static readonly pb::MessageParser<GetAuthorizedDataRequest> _parser = new pb::MessageParser<GetAuthorizedDataRequest>(() => new GetAuthorizedDataRequest());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetAuthorizedDataRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bgs.Protocol.Account.V1.AccountServiceReflection.Descriptor.MessageTypes[19]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetAuthorizedDataRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetAuthorizedDataRequest(GetAuthorizedDataRequest other) : this() {
      _hasBits0 = other._hasBits0;
      entityId_ = other.HasEntityId ? other.entityId_.Clone() : null;
      tag_ = other.tag_.Clone();
      privilegedNetwork_ = other.privilegedNetwork_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetAuthorizedDataRequest Clone() {
      return new GetAuthorizedDataRequest(this);
    }

    /// <summary>Field number for the "entity_id" field.</summary>
    public const int EntityIdFieldNumber = 1;
    private global::Bgs.Protocol.EntityId entityId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bgs.Protocol.EntityId EntityId {
      get { return entityId_; }
      set {
        entityId_ = value;
      }
    }
    /// <summary>Gets whether the entity_id field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasEntityId {
      get { return entityId_ != null; }
    }
    /// <summary>Clears the value of the entity_id field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearEntityId() {
      entityId_ = null;
    }

    /// <summary>Field number for the "tag" field.</summary>
    public const int TagFieldNumber = 2;
    private static readonly pb::FieldCodec<string> _repeated_tag_codec
        = pb::FieldCodec.ForString(18);
    private readonly pbc::RepeatedField<string> tag_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Tag {
      get { return tag_; }
    }

    /// <summary>Field number for the "privileged_network" field.</summary>
    public const int PrivilegedNetworkFieldNumber = 3;
    private readonly static bool PrivilegedNetworkDefaultValue = false;

    private bool privilegedNetwork_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool PrivilegedNetwork {
      get { if ((_hasBits0 & 1) != 0) { return privilegedNetwork_; } else { return PrivilegedNetworkDefaultValue; } }
      set {
        _hasBits0 |= 1;
        privilegedNetwork_ = value;
      }
    }
    /// <summary>Gets whether the "privileged_network" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasPrivilegedNetwork {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "privileged_network" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearPrivilegedNetwork() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetAuthorizedDataRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetAuthorizedDataRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(EntityId, other.EntityId)) return false;
      if(!tag_.Equals(other.tag_)) return false;
      if (PrivilegedNetwork != other.PrivilegedNetwork) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasEntityId) hash ^= EntityId.GetHashCode();
      hash ^= tag_.GetHashCode();
      if (HasPrivilegedNetwork) hash ^= PrivilegedNetwork.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasEntityId) {
        output.WriteRawTag(10);
        output.WriteMessage(EntityId);
      }
      tag_.WriteTo(output, _repeated_tag_codec);
      if (HasPrivilegedNetwork) {
        output.WriteRawTag(24);
        output.WriteBool(PrivilegedNetwork);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasEntityId) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(EntityId);
      }
      size += tag_.CalculateSize(_repeated_tag_codec);
      if (HasPrivilegedNetwork) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetAuthorizedDataRequest other) {
      if (other == null) {
        return;
      }
      if (other.HasEntityId) {
        if (!HasEntityId) {
          EntityId = new global::Bgs.Protocol.EntityId();
        }
        EntityId.MergeFrom(other.EntityId);
      }
      tag_.Add(other.tag_);
      if (other.HasPrivilegedNetwork) {
        PrivilegedNetwork = other.PrivilegedNetwork;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (!HasEntityId) {
              EntityId = new global::Bgs.Protocol.EntityId();
            }
            input.ReadMessage(EntityId);
            break;
          }
          case 18: {
            tag_.AddEntriesFrom(input, _repeated_tag_codec);
            break;
          }
          case 24: {
            PrivilegedNetwork = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetAuthorizedDataResponse : pb::IMessage<GetAuthorizedDataResponse> {
    private static readonly pb::MessageParser<GetAuthorizedDataResponse> _parser = new pb::MessageParser<GetAuthorizedDataResponse>(() => new GetAuthorizedDataResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetAuthorizedDataResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bgs.Protocol.Account.V1.AccountServiceReflection.Descriptor.MessageTypes[20]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetAuthorizedDataResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetAuthorizedDataResponse(GetAuthorizedDataResponse other) : this() {
      data_ = other.data_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetAuthorizedDataResponse Clone() {
      return new GetAuthorizedDataResponse(this);
    }

    /// <summary>Field number for the "data" field.</summary>
    public const int DataFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Bgs.Protocol.Account.V1.AuthorizedData> _repeated_data_codec
        = pb::FieldCodec.ForMessage(10, global::Bgs.Protocol.Account.V1.AuthorizedData.Parser);
    private readonly pbc::RepeatedField<global::Bgs.Protocol.Account.V1.AuthorizedData> data_ = new pbc::RepeatedField<global::Bgs.Protocol.Account.V1.AuthorizedData>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Bgs.Protocol.Account.V1.AuthorizedData> Data {
      get { return data_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetAuthorizedDataResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetAuthorizedDataResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!data_.Equals(other.data_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= data_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      data_.WriteTo(output, _repeated_data_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += data_.CalculateSize(_repeated_data_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetAuthorizedDataResponse other) {
      if (other == null) {
        return;
      }
      data_.Add(other.data_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            data_.AddEntriesFrom(input, _repeated_data_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetAccountInfoRequest : pb::IMessage<GetAccountInfoRequest> {
    private static readonly pb::MessageParser<GetAccountInfoRequest> _parser = new pb::MessageParser<GetAccountInfoRequest>(() => new GetAccountInfoRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetAccountInfoRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bgs.Protocol.Account.V1.AccountServiceReflection.Descriptor.MessageTypes[21]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetAccountInfoRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetAccountInfoRequest(GetAccountInfoRequest other) : this() {
      accountId_ = other.HasAccountId ? other.accountId_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetAccountInfoRequest Clone() {
      return new GetAccountInfoRequest(this);
    }

    /// <summary>Field number for the "account_id" field.</summary>
    public const int AccountIdFieldNumber = 1;
    private global::Bgs.Protocol.EntityId accountId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bgs.Protocol.EntityId AccountId {
      get { return accountId_; }
      set {
        accountId_ = value;
      }
    }
    /// <summary>Gets whether the account_id field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasAccountId {
      get { return accountId_ != null; }
    }
    /// <summary>Clears the value of the account_id field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearAccountId() {
      accountId_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetAccountInfoRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetAccountInfoRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(AccountId, other.AccountId)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasAccountId) hash ^= AccountId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasAccountId) {
        output.WriteRawTag(10);
        output.WriteMessage(AccountId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasAccountId) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AccountId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetAccountInfoRequest other) {
      if (other == null) {
        return;
      }
      if (other.HasAccountId) {
        if (!HasAccountId) {
          AccountId = new global::Bgs.Protocol.EntityId();
        }
        AccountId.MergeFrom(other.AccountId);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (!HasAccountId) {
              AccountId = new global::Bgs.Protocol.EntityId();
            }
            input.ReadMessage(AccountId);
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetAccountInfoResponse : pb::IMessage<GetAccountInfoResponse> {
    private static readonly pb::MessageParser<GetAccountInfoResponse> _parser = new pb::MessageParser<GetAccountInfoResponse>(() => new GetAccountInfoResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetAccountInfoResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bgs.Protocol.Account.V1.AccountServiceReflection.Descriptor.MessageTypes[22]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetAccountInfoResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetAccountInfoResponse(GetAccountInfoResponse other) : this() {
      accountInfo_ = other.HasAccountInfo ? other.accountInfo_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetAccountInfoResponse Clone() {
      return new GetAccountInfoResponse(this);
    }

    /// <summary>Field number for the "account_info" field.</summary>
    public const int AccountInfoFieldNumber = 1;
    private global::Bgs.Protocol.Account.V1.AccountInfo accountInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bgs.Protocol.Account.V1.AccountInfo AccountInfo {
      get { return accountInfo_; }
      set {
        accountInfo_ = value;
      }
    }
    /// <summary>Gets whether the account_info field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasAccountInfo {
      get { return accountInfo_ != null; }
    }
    /// <summary>Clears the value of the account_info field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearAccountInfo() {
      accountInfo_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetAccountInfoResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetAccountInfoResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(AccountInfo, other.AccountInfo)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasAccountInfo) hash ^= AccountInfo.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasAccountInfo) {
        output.WriteRawTag(10);
        output.WriteMessage(AccountInfo);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasAccountInfo) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AccountInfo);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetAccountInfoResponse other) {
      if (other == null) {
        return;
      }
      if (other.HasAccountInfo) {
        if (!HasAccountInfo) {
          AccountInfo = new global::Bgs.Protocol.Account.V1.AccountInfo();
        }
        AccountInfo.MergeFrom(other.AccountInfo);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (!HasAccountInfo) {
              AccountInfo = new global::Bgs.Protocol.Account.V1.AccountInfo();
            }
            input.ReadMessage(AccountInfo);
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetAccountPlatformRestrictionsRequest : pb::IMessage<GetAccountPlatformRestrictionsRequest> {
    private static readonly pb::MessageParser<GetAccountPlatformRestrictionsRequest> _parser = new pb::MessageParser<GetAccountPlatformRestrictionsRequest>(() => new GetAccountPlatformRestrictionsRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetAccountPlatformRestrictionsRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bgs.Protocol.Account.V1.AccountServiceReflection.Descriptor.MessageTypes[23]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetAccountPlatformRestrictionsRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetAccountPlatformRestrictionsRequest(GetAccountPlatformRestrictionsRequest other) : this() {
      accountId_ = other.HasAccountId ? other.accountId_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetAccountPlatformRestrictionsRequest Clone() {
      return new GetAccountPlatformRestrictionsRequest(this);
    }

    /// <summary>Field number for the "account_id" field.</summary>
    public const int AccountIdFieldNumber = 1;
    private global::Bgs.Protocol.EntityId accountId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bgs.Protocol.EntityId AccountId {
      get { return accountId_; }
      set {
        accountId_ = value;
      }
    }
    /// <summary>Gets whether the account_id field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasAccountId {
      get { return accountId_ != null; }
    }
    /// <summary>Clears the value of the account_id field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearAccountId() {
      accountId_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetAccountPlatformRestrictionsRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetAccountPlatformRestrictionsRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(AccountId, other.AccountId)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasAccountId) hash ^= AccountId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasAccountId) {
        output.WriteRawTag(10);
        output.WriteMessage(AccountId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasAccountId) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AccountId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetAccountPlatformRestrictionsRequest other) {
      if (other == null) {
        return;
      }
      if (other.HasAccountId) {
        if (!HasAccountId) {
          AccountId = new global::Bgs.Protocol.EntityId();
        }
        AccountId.MergeFrom(other.AccountId);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (!HasAccountId) {
              AccountId = new global::Bgs.Protocol.EntityId();
            }
            input.ReadMessage(AccountId);
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetAccountPlatformRestrictionsResponse : pb::IMessage<GetAccountPlatformRestrictionsResponse> {
    private static readonly pb::MessageParser<GetAccountPlatformRestrictionsResponse> _parser = new pb::MessageParser<GetAccountPlatformRestrictionsResponse>(() => new GetAccountPlatformRestrictionsResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetAccountPlatformRestrictionsResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bgs.Protocol.Account.V1.AccountServiceReflection.Descriptor.MessageTypes[24]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetAccountPlatformRestrictionsResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetAccountPlatformRestrictionsResponse(GetAccountPlatformRestrictionsResponse other) : this() {
      restrictionInfo_ = other.HasRestrictionInfo ? other.restrictionInfo_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetAccountPlatformRestrictionsResponse Clone() {
      return new GetAccountPlatformRestrictionsResponse(this);
    }

    /// <summary>Field number for the "restriction_info" field.</summary>
    public const int RestrictionInfoFieldNumber = 1;
    private global::Bgs.Protocol.Account.V1.AccountPlatformRestrictionInfo restrictionInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bgs.Protocol.Account.V1.AccountPlatformRestrictionInfo RestrictionInfo {
      get { return restrictionInfo_; }
      set {
        restrictionInfo_ = value;
      }
    }
    /// <summary>Gets whether the restriction_info field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasRestrictionInfo {
      get { return restrictionInfo_ != null; }
    }
    /// <summary>Clears the value of the restriction_info field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearRestrictionInfo() {
      restrictionInfo_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetAccountPlatformRestrictionsResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetAccountPlatformRestrictionsResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(RestrictionInfo, other.RestrictionInfo)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasRestrictionInfo) hash ^= RestrictionInfo.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasRestrictionInfo) {
        output.WriteRawTag(10);
        output.WriteMessage(RestrictionInfo);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasRestrictionInfo) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RestrictionInfo);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetAccountPlatformRestrictionsResponse other) {
      if (other == null) {
        return;
      }
      if (other.HasRestrictionInfo) {
        if (!HasRestrictionInfo) {
          RestrictionInfo = new global::Bgs.Protocol.Account.V1.AccountPlatformRestrictionInfo();
        }
        RestrictionInfo.MergeFrom(other.RestrictionInfo);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (!HasRestrictionInfo) {
              RestrictionInfo = new global::Bgs.Protocol.Account.V1.AccountPlatformRestrictionInfo();
            }
            input.ReadMessage(RestrictionInfo);
            break;
          }
        }
      }
    }

  }

  public sealed partial class AccountStateNotification : pb::IMessage<AccountStateNotification> {
    private static readonly pb::MessageParser<AccountStateNotification> _parser = new pb::MessageParser<AccountStateNotification>(() => new AccountStateNotification());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AccountStateNotification> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bgs.Protocol.Account.V1.AccountServiceReflection.Descriptor.MessageTypes[25]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AccountStateNotification() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AccountStateNotification(AccountStateNotification other) : this() {
      _hasBits0 = other._hasBits0;
      accountState_ = other.HasAccountState ? other.accountState_.Clone() : null;
      subscriberId_ = other.subscriberId_;
      accountTags_ = other.HasAccountTags ? other.accountTags_.Clone() : null;
      subscriptionCompleted_ = other.subscriptionCompleted_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AccountStateNotification Clone() {
      return new AccountStateNotification(this);
    }

    /// <summary>Field number for the "account_state" field.</summary>
    public const int AccountStateFieldNumber = 1;
    private global::Bgs.Protocol.Account.V1.AccountState accountState_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bgs.Protocol.Account.V1.AccountState AccountState {
      get { return accountState_; }
      set {
        accountState_ = value;
      }
    }
    /// <summary>Gets whether the account_state field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasAccountState {
      get { return accountState_ != null; }
    }
    /// <summary>Clears the value of the account_state field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearAccountState() {
      accountState_ = null;
    }

    /// <summary>Field number for the "subscriber_id" field.</summary>
    public const int SubscriberIdFieldNumber = 2;
    private readonly static ulong SubscriberIdDefaultValue = 0UL;

    private ulong subscriberId_;
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong SubscriberId {
      get { if ((_hasBits0 & 1) != 0) { return subscriberId_; } else { return SubscriberIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        subscriberId_ = value;
      }
    }
    /// <summary>Gets whether the "subscriber_id" field is set</summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasSubscriberId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "subscriber_id" field</summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearSubscriberId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "account_tags" field.</summary>
    public const int AccountTagsFieldNumber = 3;
    private global::Bgs.Protocol.Account.V1.AccountFieldTags accountTags_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bgs.Protocol.Account.V1.AccountFieldTags AccountTags {
      get { return accountTags_; }
      set {
        accountTags_ = value;
      }
    }
    /// <summary>Gets whether the account_tags field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasAccountTags {
      get { return accountTags_ != null; }
    }
    /// <summary>Clears the value of the account_tags field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearAccountTags() {
      accountTags_ = null;
    }

    /// <summary>Field number for the "subscription_completed" field.</summary>
    public const int SubscriptionCompletedFieldNumber = 4;
    private readonly static bool SubscriptionCompletedDefaultValue = false;

    private bool subscriptionCompleted_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool SubscriptionCompleted {
      get { if ((_hasBits0 & 2) != 0) { return subscriptionCompleted_; } else { return SubscriptionCompletedDefaultValue; } }
      set {
        _hasBits0 |= 2;
        subscriptionCompleted_ = value;
      }
    }
    /// <summary>Gets whether the "subscription_completed" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasSubscriptionCompleted {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "subscription_completed" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearSubscriptionCompleted() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AccountStateNotification);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AccountStateNotification other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(AccountState, other.AccountState)) return false;
      if (SubscriberId != other.SubscriberId) return false;
      if (!object.Equals(AccountTags, other.AccountTags)) return false;
      if (SubscriptionCompleted != other.SubscriptionCompleted) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasAccountState) hash ^= AccountState.GetHashCode();
      if (HasSubscriberId) hash ^= SubscriberId.GetHashCode();
      if (HasAccountTags) hash ^= AccountTags.GetHashCode();
      if (HasSubscriptionCompleted) hash ^= SubscriptionCompleted.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasAccountState) {
        output.WriteRawTag(10);
        output.WriteMessage(AccountState);
      }
      if (HasSubscriberId) {
        output.WriteRawTag(16);
        output.WriteUInt64(SubscriberId);
      }
      if (HasAccountTags) {
        output.WriteRawTag(26);
        output.WriteMessage(AccountTags);
      }
      if (HasSubscriptionCompleted) {
        output.WriteRawTag(32);
        output.WriteBool(SubscriptionCompleted);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasAccountState) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AccountState);
      }
      if (HasSubscriberId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(SubscriberId);
      }
      if (HasAccountTags) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AccountTags);
      }
      if (HasSubscriptionCompleted) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AccountStateNotification other) {
      if (other == null) {
        return;
      }
      if (other.HasAccountState) {
        if (!HasAccountState) {
          AccountState = new global::Bgs.Protocol.Account.V1.AccountState();
        }
        AccountState.MergeFrom(other.AccountState);
      }
      if (other.HasSubscriberId) {
        SubscriberId = other.SubscriberId;
      }
      if (other.HasAccountTags) {
        if (!HasAccountTags) {
          AccountTags = new global::Bgs.Protocol.Account.V1.AccountFieldTags();
        }
        AccountTags.MergeFrom(other.AccountTags);
      }
      if (other.HasSubscriptionCompleted) {
        SubscriptionCompleted = other.SubscriptionCompleted;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (!HasAccountState) {
              AccountState = new global::Bgs.Protocol.Account.V1.AccountState();
            }
            input.ReadMessage(AccountState);
            break;
          }
          case 16: {
            SubscriberId = input.ReadUInt64();
            break;
          }
          case 26: {
            if (!HasAccountTags) {
              AccountTags = new global::Bgs.Protocol.Account.V1.AccountFieldTags();
            }
            input.ReadMessage(AccountTags);
            break;
          }
          case 32: {
            SubscriptionCompleted = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GameAccountStateNotification : pb::IMessage<GameAccountStateNotification> {
    private static readonly pb::MessageParser<GameAccountStateNotification> _parser = new pb::MessageParser<GameAccountStateNotification>(() => new GameAccountStateNotification());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GameAccountStateNotification> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bgs.Protocol.Account.V1.AccountServiceReflection.Descriptor.MessageTypes[26]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GameAccountStateNotification() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GameAccountStateNotification(GameAccountStateNotification other) : this() {
      _hasBits0 = other._hasBits0;
      gameAccountState_ = other.HasGameAccountState ? other.gameAccountState_.Clone() : null;
      subscriberId_ = other.subscriberId_;
      gameAccountTags_ = other.HasGameAccountTags ? other.gameAccountTags_.Clone() : null;
      subscriptionCompleted_ = other.subscriptionCompleted_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GameAccountStateNotification Clone() {
      return new GameAccountStateNotification(this);
    }

    /// <summary>Field number for the "game_account_state" field.</summary>
    public const int GameAccountStateFieldNumber = 1;
    private global::Bgs.Protocol.Account.V1.GameAccountState gameAccountState_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bgs.Protocol.Account.V1.GameAccountState GameAccountState {
      get { return gameAccountState_; }
      set {
        gameAccountState_ = value;
      }
    }
    /// <summary>Gets whether the game_account_state field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasGameAccountState {
      get { return gameAccountState_ != null; }
    }
    /// <summary>Clears the value of the game_account_state field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearGameAccountState() {
      gameAccountState_ = null;
    }

    /// <summary>Field number for the "subscriber_id" field.</summary>
    public const int SubscriberIdFieldNumber = 2;
    private readonly static ulong SubscriberIdDefaultValue = 0UL;

    private ulong subscriberId_;
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong SubscriberId {
      get { if ((_hasBits0 & 1) != 0) { return subscriberId_; } else { return SubscriberIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        subscriberId_ = value;
      }
    }
    /// <summary>Gets whether the "subscriber_id" field is set</summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasSubscriberId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "subscriber_id" field</summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearSubscriberId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "game_account_tags" field.</summary>
    public const int GameAccountTagsFieldNumber = 3;
    private global::Bgs.Protocol.Account.V1.GameAccountFieldTags gameAccountTags_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bgs.Protocol.Account.V1.GameAccountFieldTags GameAccountTags {
      get { return gameAccountTags_; }
      set {
        gameAccountTags_ = value;
      }
    }
    /// <summary>Gets whether the game_account_tags field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasGameAccountTags {
      get { return gameAccountTags_ != null; }
    }
    /// <summary>Clears the value of the game_account_tags field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearGameAccountTags() {
      gameAccountTags_ = null;
    }

    /// <summary>Field number for the "subscription_completed" field.</summary>
    public const int SubscriptionCompletedFieldNumber = 4;
    private readonly static bool SubscriptionCompletedDefaultValue = false;

    private bool subscriptionCompleted_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool SubscriptionCompleted {
      get { if ((_hasBits0 & 2) != 0) { return subscriptionCompleted_; } else { return SubscriptionCompletedDefaultValue; } }
      set {
        _hasBits0 |= 2;
        subscriptionCompleted_ = value;
      }
    }
    /// <summary>Gets whether the "subscription_completed" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasSubscriptionCompleted {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "subscription_completed" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearSubscriptionCompleted() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GameAccountStateNotification);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GameAccountStateNotification other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(GameAccountState, other.GameAccountState)) return false;
      if (SubscriberId != other.SubscriberId) return false;
      if (!object.Equals(GameAccountTags, other.GameAccountTags)) return false;
      if (SubscriptionCompleted != other.SubscriptionCompleted) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasGameAccountState) hash ^= GameAccountState.GetHashCode();
      if (HasSubscriberId) hash ^= SubscriberId.GetHashCode();
      if (HasGameAccountTags) hash ^= GameAccountTags.GetHashCode();
      if (HasSubscriptionCompleted) hash ^= SubscriptionCompleted.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasGameAccountState) {
        output.WriteRawTag(10);
        output.WriteMessage(GameAccountState);
      }
      if (HasSubscriberId) {
        output.WriteRawTag(16);
        output.WriteUInt64(SubscriberId);
      }
      if (HasGameAccountTags) {
        output.WriteRawTag(26);
        output.WriteMessage(GameAccountTags);
      }
      if (HasSubscriptionCompleted) {
        output.WriteRawTag(32);
        output.WriteBool(SubscriptionCompleted);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasGameAccountState) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(GameAccountState);
      }
      if (HasSubscriberId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(SubscriberId);
      }
      if (HasGameAccountTags) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(GameAccountTags);
      }
      if (HasSubscriptionCompleted) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GameAccountStateNotification other) {
      if (other == null) {
        return;
      }
      if (other.HasGameAccountState) {
        if (!HasGameAccountState) {
          GameAccountState = new global::Bgs.Protocol.Account.V1.GameAccountState();
        }
        GameAccountState.MergeFrom(other.GameAccountState);
      }
      if (other.HasSubscriberId) {
        SubscriberId = other.SubscriberId;
      }
      if (other.HasGameAccountTags) {
        if (!HasGameAccountTags) {
          GameAccountTags = new global::Bgs.Protocol.Account.V1.GameAccountFieldTags();
        }
        GameAccountTags.MergeFrom(other.GameAccountTags);
      }
      if (other.HasSubscriptionCompleted) {
        SubscriptionCompleted = other.SubscriptionCompleted;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (!HasGameAccountState) {
              GameAccountState = new global::Bgs.Protocol.Account.V1.GameAccountState();
            }
            input.ReadMessage(GameAccountState);
            break;
          }
          case 16: {
            SubscriberId = input.ReadUInt64();
            break;
          }
          case 26: {
            if (!HasGameAccountTags) {
              GameAccountTags = new global::Bgs.Protocol.Account.V1.GameAccountFieldTags();
            }
            input.ReadMessage(GameAccountTags);
            break;
          }
          case 32: {
            SubscriptionCompleted = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GameAccountNotification : pb::IMessage<GameAccountNotification> {
    private static readonly pb::MessageParser<GameAccountNotification> _parser = new pb::MessageParser<GameAccountNotification>(() => new GameAccountNotification());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GameAccountNotification> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bgs.Protocol.Account.V1.AccountServiceReflection.Descriptor.MessageTypes[27]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GameAccountNotification() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GameAccountNotification(GameAccountNotification other) : this() {
      _hasBits0 = other._hasBits0;
      gameAccounts_ = other.gameAccounts_.Clone();
      subscriberId_ = other.subscriberId_;
      accountTags_ = other.HasAccountTags ? other.accountTags_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GameAccountNotification Clone() {
      return new GameAccountNotification(this);
    }

    /// <summary>Field number for the "game_accounts" field.</summary>
    public const int GameAccountsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Bgs.Protocol.Account.V1.GameAccountList> _repeated_gameAccounts_codec
        = pb::FieldCodec.ForMessage(10, global::Bgs.Protocol.Account.V1.GameAccountList.Parser);
    private readonly pbc::RepeatedField<global::Bgs.Protocol.Account.V1.GameAccountList> gameAccounts_ = new pbc::RepeatedField<global::Bgs.Protocol.Account.V1.GameAccountList>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Bgs.Protocol.Account.V1.GameAccountList> GameAccounts {
      get { return gameAccounts_; }
    }

    /// <summary>Field number for the "subscriber_id" field.</summary>
    public const int SubscriberIdFieldNumber = 2;
    private readonly static ulong SubscriberIdDefaultValue = 0UL;

    private ulong subscriberId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong SubscriberId {
      get { if ((_hasBits0 & 1) != 0) { return subscriberId_; } else { return SubscriberIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        subscriberId_ = value;
      }
    }
    /// <summary>Gets whether the "subscriber_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasSubscriberId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "subscriber_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearSubscriberId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "account_tags" field.</summary>
    public const int AccountTagsFieldNumber = 3;
    private global::Bgs.Protocol.Account.V1.AccountFieldTags accountTags_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bgs.Protocol.Account.V1.AccountFieldTags AccountTags {
      get { return accountTags_; }
      set {
        accountTags_ = value;
      }
    }
    /// <summary>Gets whether the account_tags field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasAccountTags {
      get { return accountTags_ != null; }
    }
    /// <summary>Clears the value of the account_tags field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearAccountTags() {
      accountTags_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GameAccountNotification);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GameAccountNotification other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!gameAccounts_.Equals(other.gameAccounts_)) return false;
      if (SubscriberId != other.SubscriberId) return false;
      if (!object.Equals(AccountTags, other.AccountTags)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= gameAccounts_.GetHashCode();
      if (HasSubscriberId) hash ^= SubscriberId.GetHashCode();
      if (HasAccountTags) hash ^= AccountTags.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      gameAccounts_.WriteTo(output, _repeated_gameAccounts_codec);
      if (HasSubscriberId) {
        output.WriteRawTag(16);
        output.WriteUInt64(SubscriberId);
      }
      if (HasAccountTags) {
        output.WriteRawTag(26);
        output.WriteMessage(AccountTags);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += gameAccounts_.CalculateSize(_repeated_gameAccounts_codec);
      if (HasSubscriberId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(SubscriberId);
      }
      if (HasAccountTags) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AccountTags);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GameAccountNotification other) {
      if (other == null) {
        return;
      }
      gameAccounts_.Add(other.gameAccounts_);
      if (other.HasSubscriberId) {
        SubscriberId = other.SubscriberId;
      }
      if (other.HasAccountTags) {
        if (!HasAccountTags) {
          AccountTags = new global::Bgs.Protocol.Account.V1.AccountFieldTags();
        }
        AccountTags.MergeFrom(other.AccountTags);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            gameAccounts_.AddEntriesFrom(input, _repeated_gameAccounts_codec);
            break;
          }
          case 16: {
            SubscriberId = input.ReadUInt64();
            break;
          }
          case 26: {
            if (!HasAccountTags) {
              AccountTags = new global::Bgs.Protocol.Account.V1.AccountFieldTags();
            }
            input.ReadMessage(AccountTags);
            break;
          }
        }
      }
    }

  }

  public sealed partial class GameAccountSessionNotification : pb::IMessage<GameAccountSessionNotification> {
    private static readonly pb::MessageParser<GameAccountSessionNotification> _parser = new pb::MessageParser<GameAccountSessionNotification>(() => new GameAccountSessionNotification());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GameAccountSessionNotification> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bgs.Protocol.Account.V1.AccountServiceReflection.Descriptor.MessageTypes[28]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GameAccountSessionNotification() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GameAccountSessionNotification(GameAccountSessionNotification other) : this() {
      gameAccount_ = other.HasGameAccount ? other.gameAccount_.Clone() : null;
      sessionInfo_ = other.HasSessionInfo ? other.sessionInfo_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GameAccountSessionNotification Clone() {
      return new GameAccountSessionNotification(this);
    }

    /// <summary>Field number for the "game_account" field.</summary>
    public const int GameAccountFieldNumber = 1;
    private global::Bgs.Protocol.Account.V1.GameAccountHandle gameAccount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bgs.Protocol.Account.V1.GameAccountHandle GameAccount {
      get { return gameAccount_; }
      set {
        gameAccount_ = value;
      }
    }
    /// <summary>Gets whether the game_account field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasGameAccount {
      get { return gameAccount_ != null; }
    }
    /// <summary>Clears the value of the game_account field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearGameAccount() {
      gameAccount_ = null;
    }

    /// <summary>Field number for the "session_info" field.</summary>
    public const int SessionInfoFieldNumber = 2;
    private global::Bgs.Protocol.Account.V1.GameSessionUpdateInfo sessionInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bgs.Protocol.Account.V1.GameSessionUpdateInfo SessionInfo {
      get { return sessionInfo_; }
      set {
        sessionInfo_ = value;
      }
    }
    /// <summary>Gets whether the session_info field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasSessionInfo {
      get { return sessionInfo_ != null; }
    }
    /// <summary>Clears the value of the session_info field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearSessionInfo() {
      sessionInfo_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GameAccountSessionNotification);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GameAccountSessionNotification other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(GameAccount, other.GameAccount)) return false;
      if (!object.Equals(SessionInfo, other.SessionInfo)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasGameAccount) hash ^= GameAccount.GetHashCode();
      if (HasSessionInfo) hash ^= SessionInfo.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasGameAccount) {
        output.WriteRawTag(10);
        output.WriteMessage(GameAccount);
      }
      if (HasSessionInfo) {
        output.WriteRawTag(18);
        output.WriteMessage(SessionInfo);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasGameAccount) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(GameAccount);
      }
      if (HasSessionInfo) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SessionInfo);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GameAccountSessionNotification other) {
      if (other == null) {
        return;
      }
      if (other.HasGameAccount) {
        if (!HasGameAccount) {
          GameAccount = new global::Bgs.Protocol.Account.V1.GameAccountHandle();
        }
        GameAccount.MergeFrom(other.GameAccount);
      }
      if (other.HasSessionInfo) {
        if (!HasSessionInfo) {
          SessionInfo = new global::Bgs.Protocol.Account.V1.GameSessionUpdateInfo();
        }
        SessionInfo.MergeFrom(other.SessionInfo);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (!HasGameAccount) {
              GameAccount = new global::Bgs.Protocol.Account.V1.GameAccountHandle();
            }
            input.ReadMessage(GameAccount);
            break;
          }
          case 18: {
            if (!HasSessionInfo) {
              SessionInfo = new global::Bgs.Protocol.Account.V1.GameSessionUpdateInfo();
            }
            input.ReadMessage(SessionInfo);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
