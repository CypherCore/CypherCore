// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: bgs/low/pb/client/friends_service.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Bgs.Protocol.Friends.V1 {

  /// <summary>Holder for reflection information generated from bgs/low/pb/client/friends_service.proto</summary>
  public static partial class FriendsServiceReflection {

    #region Descriptor
    /// <summary>File descriptor for bgs/low/pb/client/friends_service.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static FriendsServiceReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CidiZ3MvbG93L3BiL2NsaWVudC9mcmllbmRzX3NlcnZpY2UucHJvdG8SF2Jn",
            "cy5wcm90b2NvbC5mcmllbmRzLnYxGidiZ3MvbG93L3BiL2NsaWVudC9hdHRy",
            "aWJ1dGVfdHlwZXMucHJvdG8aJGJncy9sb3cvcGIvY2xpZW50L2VudGl0eV90",
            "eXBlcy5wcm90bxolYmdzL2xvdy9wYi9jbGllbnQvZnJpZW5kc190eXBlcy5w",
            "cm90bxo2YmdzL2xvdy9wYi9jbGllbnQvYXBpL2NvbW1vbi92MS9pbnZpdGF0",
            "aW9uX3R5cGVzLnByb3RvGiFiZ3MvbG93L3BiL2NsaWVudC9ycGNfdHlwZXMu",
            "cHJvdG8aN2Jncy9sb3cvcGIvY2xpZW50L2dsb2JhbF9leHRlbnNpb25zL2Zp",
            "ZWxkX29wdGlvbnMucHJvdG8aOWJncy9sb3cvcGIvY2xpZW50L2dsb2JhbF9l",
            "eHRlbnNpb25zL21lc3NhZ2Vfb3B0aW9ucy5wcm90bxo4YmdzL2xvdy9wYi9j",
            "bGllbnQvZ2xvYmFsX2V4dGVuc2lvbnMvbWV0aG9kX29wdGlvbnMucHJvdG8a",
            "OWJncy9sb3cvcGIvY2xpZW50L2dsb2JhbF9leHRlbnNpb25zL3NlcnZpY2Vf",
            "b3B0aW9ucy5wcm90byJXChBTdWJzY3JpYmVSZXF1ZXN0EjAKCGFnZW50X2lk",
            "GAEgASgLMhYuYmdzLnByb3RvY29sLkVudGl0eUlkQgaC+SsCIAESEQoJb2Jq",
            "ZWN0X2lkGAIgAigEIlkKElVuc3Vic2NyaWJlUmVxdWVzdBIwCghhZ2VudF9p",
            "ZBgBIAEoCzIWLmJncy5wcm90b2NvbC5FbnRpdHlJZEIGgvkrAiABEhEKCW9i",
            "amVjdF9pZBgCIAEoBCKqAQoVU2VuZEludml0YXRpb25SZXF1ZXN0EjYKDmFn",
            "ZW50X2lkZW50aXR5GAEgASgLMhYuYmdzLnByb3RvY29sLklkZW50aXR5QgaC",
            "+SsCIAESKQoJdGFyZ2V0X2lkGAIgAigLMhYuYmdzLnByb3RvY29sLkVudGl0",
            "eUlkEi4KBnBhcmFtcxgDIAIoCzIeLmJncy5wcm90b2NvbC5JbnZpdGF0aW9u",
            "UGFyYW1zImIKF1Jldm9rZUludml0YXRpb25SZXF1ZXN0EjAKCGFnZW50X2lk",
            "GAEgASgLMhYuYmdzLnByb3RvY29sLkVudGl0eUlkQgaC+SsCIAESFQoNaW52",
            "aXRhdGlvbl9pZBgCIAEoBiKlAQoXQWNjZXB0SW52aXRhdGlvblJlcXVlc3QS",
            "MAoIYWdlbnRfaWQYASABKAsyFi5iZ3MucHJvdG9jb2wuRW50aXR5SWRCBoL5",
            "KwIgARIVCg1pbnZpdGF0aW9uX2lkGAMgAigGEkEKB29wdGlvbnMYBCABKAsy",
            "MC5iZ3MucHJvdG9jb2wuZnJpZW5kcy52MS5BY2NlcHRJbnZpdGF0aW9uT3B0",
            "aW9ucyJjChhEZWNsaW5lSW52aXRhdGlvblJlcXVlc3QSMAoIYWdlbnRfaWQY",
            "ASABKAsyFi5iZ3MucHJvdG9jb2wuRW50aXR5SWRCBoL5KwIgARIVCg1pbnZp",
            "dGF0aW9uX2lkGAMgAigGImIKF0lnbm9yZUludml0YXRpb25SZXF1ZXN0EjAK",
            "CGFnZW50X2lkGAEgASgLMhYuYmdzLnByb3RvY29sLkVudGl0eUlkQgaC+SsC",
            "IAESFQoNaW52aXRhdGlvbl9pZBgDIAIoBiJyChNSZW1vdmVGcmllbmRSZXF1",
            "ZXN0EjAKCGFnZW50X2lkGAEgASgLMhYuYmdzLnByb3RvY29sLkVudGl0eUlk",
            "QgaC+SsCIAESKQoJdGFyZ2V0X2lkGAIgAigLMhYuYmdzLnByb3RvY29sLkVu",
            "dGl0eUlkIk8KG1Jldm9rZUFsbEludml0YXRpb25zUmVxdWVzdBIwCghhZ2Vu",
            "dF9pZBgCIAEoCzIWLmJncy5wcm90b2NvbC5FbnRpdHlJZEIGgvkrAhABInEK",
            "ElZpZXdGcmllbmRzUmVxdWVzdBIwCghhZ2VudF9pZBgBIAEoCzIWLmJncy5w",
            "cm90b2NvbC5FbnRpdHlJZEIGgvkrAiABEikKCXRhcmdldF9pZBgCIAIoCzIW",
            "LmJncy5wcm90b2NvbC5FbnRpdHlJZCJPChNWaWV3RnJpZW5kc1Jlc3BvbnNl",
            "EjgKB2ZyaWVuZHMYASADKAsyJy5iZ3MucHJvdG9jb2wuZnJpZW5kcy52MS5G",
            "cmllbmRPZkZyaWVuZCKjAQoYVXBkYXRlRnJpZW5kU3RhdGVSZXF1ZXN0EjAK",
            "CGFnZW50X2lkGAEgASgLMhYuYmdzLnByb3RvY29sLkVudGl0eUlkQgaC+SsC",
            "IAESKQoJdGFyZ2V0X2lkGAIgAigLMhYuYmdzLnByb3RvY29sLkVudGl0eUlk",
            "EioKCWF0dHJpYnV0ZRgDIAMoCzIXLmJncy5wcm90b2NvbC5BdHRyaWJ1dGUi",
            "SAoUR2V0RnJpZW5kTGlzdFJlcXVlc3QSMAoIYWdlbnRfaWQYAiABKAsyFi5i",
            "Z3MucHJvdG9jb2wuRW50aXR5SWRCBoL5KwIQASJJChVHZXRGcmllbmRMaXN0",
            "UmVzcG9uc2USMAoHZnJpZW5kcxgBIAMoCzIfLmJncy5wcm90b2NvbC5mcmll",
            "bmRzLnYxLkZyaWVuZCKcAQoXQ3JlYXRlRnJpZW5kc2hpcFJlcXVlc3QSMAoI",
            "YWdlbnRfaWQYASABKAsyFi5iZ3MucHJvdG9jb2wuRW50aXR5SWRCBoL5KwIQ",
            "ARIpCgl0YXJnZXRfaWQYAiABKAsyFi5iZ3MucHJvdG9jb2wuRW50aXR5SWQS",
            "JAoEcm9sZRgDIAMoDUIWEAGK+SsGKgQKAggBivkrBioECgIQASJxChJGcmll",
            "bmROb3RpZmljYXRpb24SLwoGdGFyZ2V0GAEgAigLMh8uYmdzLnByb3RvY29s",
            "LmZyaWVuZHMudjEuRnJpZW5kEioKCmFjY291bnRfaWQYBSABKAsyFi5iZ3Mu",
            "cHJvdG9jb2wuRW50aXR5SWQihAEKHVVwZGF0ZUZyaWVuZFN0YXRlTm90aWZp",
            "Y2F0aW9uEjcKDmNoYW5nZWRfZnJpZW5kGAEgAigLMh8uYmdzLnByb3RvY29s",
            "LmZyaWVuZHMudjEuRnJpZW5kEioKCmFjY291bnRfaWQYBSABKAsyFi5iZ3Mu",
            "cHJvdG9jb2wuRW50aXR5SWQimAEKFkludml0YXRpb25Ob3RpZmljYXRpb24S",
            "PwoKaW52aXRhdGlvbhgBIAIoCzIrLmJncy5wcm90b2NvbC5mcmllbmRzLnYx",
            "LlJlY2VpdmVkSW52aXRhdGlvbhIRCgZyZWFzb24YAyABKA06ATASKgoKYWNj",
            "b3VudF9pZBgFIAEoCzIWLmJncy5wcm90b2NvbC5FbnRpdHlJZCKKAQofU2Vu",
            "dEludml0YXRpb25BZGRlZE5vdGlmaWNhdGlvbhIqCgphY2NvdW50X2lkGAEg",
            "ASgLMhYuYmdzLnByb3RvY29sLkVudGl0eUlkEjsKCmludml0YXRpb24YAiAB",
            "KAsyJy5iZ3MucHJvdG9jb2wuZnJpZW5kcy52MS5TZW50SW52aXRhdGlvbiJ2",
            "CiFTZW50SW52aXRhdGlvblJlbW92ZWROb3RpZmljYXRpb24SKgoKYWNjb3Vu",
            "dF9pZBgBIAEoCzIWLmJncy5wcm90b2NvbC5FbnRpdHlJZBIVCg1pbnZpdGF0",
            "aW9uX2lkGAIgASgGEg4KBnJlYXNvbhgDIAEoDTLLCwoORnJpZW5kc1NlcnZp",
            "Y2UScAoJU3Vic2NyaWJlEikuYmdzLnByb3RvY29sLmZyaWVuZHMudjEuU3Vi",
            "c2NyaWJlUmVxdWVzdBoqLmJncy5wcm90b2NvbC5mcmllbmRzLnYxLlN1YnNj",
            "cmliZVJlc3BvbnNlIgyC+SsCCAGC+SsCEAESZAoOU2VuZEludml0YXRpb24S",
            "Li5iZ3MucHJvdG9jb2wuZnJpZW5kcy52MS5TZW5kSW52aXRhdGlvblJlcXVl",
            "c3QaFC5iZ3MucHJvdG9jb2wuTm9EYXRhIgyC+SsCCAKC+SsCEAESaAoQQWNj",
            "ZXB0SW52aXRhdGlvbhIwLmJncy5wcm90b2NvbC5mcmllbmRzLnYxLkFjY2Vw",
            "dEludml0YXRpb25SZXF1ZXN0GhQuYmdzLnByb3RvY29sLk5vRGF0YSIMgvkr",
            "AggDgvkrAhABEmgKEFJldm9rZUludml0YXRpb24SMC5iZ3MucHJvdG9jb2wu",
            "ZnJpZW5kcy52MS5SZXZva2VJbnZpdGF0aW9uUmVxdWVzdBoULmJncy5wcm90",
            "b2NvbC5Ob0RhdGEiDIL5KwIIBIL5KwIQARJwChFEZWNsaW5lSW52aXRhdGlv",
            "bhIxLmJncy5wcm90b2NvbC5mcmllbmRzLnYxLkRlY2xpbmVJbnZpdGF0aW9u",
            "UmVxdWVzdBoULmJncy5wcm90b2NvbC5Ob0RhdGEiEoL5KwIIBYL5KwIQAYL5",
            "KwJQARJoChBJZ25vcmVJbnZpdGF0aW9uEjAuYmdzLnByb3RvY29sLmZyaWVu",
            "ZHMudjEuSWdub3JlSW52aXRhdGlvblJlcXVlc3QaFC5iZ3MucHJvdG9jb2wu",
            "Tm9EYXRhIgyC+SsCCAaC+SsCEAESYAoMUmVtb3ZlRnJpZW5kEiwuYmdzLnBy",
            "b3RvY29sLmZyaWVuZHMudjEuUmVtb3ZlRnJpZW5kUmVxdWVzdBoULmJncy5w",
            "cm90b2NvbC5Ob0RhdGEiDIL5KwIICIL5KwIQARJ2CgtWaWV3RnJpZW5kcxIr",
            "LmJncy5wcm90b2NvbC5mcmllbmRzLnYxLlZpZXdGcmllbmRzUmVxdWVzdBos",
            "LmJncy5wcm90b2NvbC5mcmllbmRzLnYxLlZpZXdGcmllbmRzUmVzcG9uc2Ui",
            "DIL5KwIICYL5KwIQARJqChFVcGRhdGVGcmllbmRTdGF0ZRIxLmJncy5wcm90",
            "b2NvbC5mcmllbmRzLnYxLlVwZGF0ZUZyaWVuZFN0YXRlUmVxdWVzdBoULmJn",
            "cy5wcm90b2NvbC5Ob0RhdGEiDIL5KwIICoL5KwIQARJeCgtVbnN1YnNjcmli",
            "ZRIrLmJncy5wcm90b2NvbC5mcmllbmRzLnYxLlVuc3Vic2NyaWJlUmVxdWVz",
            "dBoULmJncy5wcm90b2NvbC5Ob0RhdGEiDIL5KwIIC4L5KwIQARJqChRSZXZv",
            "a2VBbGxJbnZpdGF0aW9ucxI0LmJncy5wcm90b2NvbC5mcmllbmRzLnYxLlJl",
            "dm9rZUFsbEludml0YXRpb25zUmVxdWVzdBoULmJncy5wcm90b2NvbC5Ob0Rh",
            "dGEiBoL5KwIIDBJ2Cg1HZXRGcmllbmRMaXN0Ei0uYmdzLnByb3RvY29sLmZy",
            "aWVuZHMudjEuR2V0RnJpZW5kTGlzdFJlcXVlc3QaLi5iZ3MucHJvdG9jb2wu",
            "ZnJpZW5kcy52MS5HZXRGcmllbmRMaXN0UmVzcG9uc2UiBoL5KwIIDRJiChBD",
            "cmVhdGVGcmllbmRzaGlwEjAuYmdzLnByb3RvY29sLmZyaWVuZHMudjEuQ3Jl",
            "YXRlRnJpZW5kc2hpcFJlcXVlc3QaFC5iZ3MucHJvdG9jb2wuTm9EYXRhIgaC",
            "+SsCCA4aQ4L5KyYKJGJuZXQucHJvdG9jb2wuZnJpZW5kcy5GcmllbmRzU2Vy",
            "dmljZYL5KwkqB2ZyaWVuZHOC+SsCMAGK+SsCEAEy0gYKD0ZyaWVuZHNMaXN0",
            "ZW5lchJfCg1PbkZyaWVuZEFkZGVkEisuYmdzLnByb3RvY29sLmZyaWVuZHMu",
            "djEuRnJpZW5kTm90aWZpY2F0aW9uGhkuYmdzLnByb3RvY29sLk5PX1JFU1BP",
            "TlNFIgaC+SsCCAESYQoPT25GcmllbmRSZW1vdmVkEisuYmdzLnByb3RvY29s",
            "LmZyaWVuZHMudjEuRnJpZW5kTm90aWZpY2F0aW9uGhkuYmdzLnByb3RvY29s",
            "Lk5PX1JFU1BPTlNFIgaC+SsCCAISbwoZT25SZWNlaXZlZEludml0YXRpb25B",
            "ZGRlZBIvLmJncy5wcm90b2NvbC5mcmllbmRzLnYxLkludml0YXRpb25Ob3Rp",
            "ZmljYXRpb24aGS5iZ3MucHJvdG9jb2wuTk9fUkVTUE9OU0UiBoL5KwIIAxJx",
            "ChtPblJlY2VpdmVkSW52aXRhdGlvblJlbW92ZWQSLy5iZ3MucHJvdG9jb2wu",
            "ZnJpZW5kcy52MS5JbnZpdGF0aW9uTm90aWZpY2F0aW9uGhkuYmdzLnByb3Rv",
            "Y29sLk5PX1JFU1BPTlNFIgaC+SsCCAQSdAoVT25TZW50SW52aXRhdGlvbkFk",
            "ZGVkEjguYmdzLnByb3RvY29sLmZyaWVuZHMudjEuU2VudEludml0YXRpb25B",
            "ZGRlZE5vdGlmaWNhdGlvbhoZLmJncy5wcm90b2NvbC5OT19SRVNQT05TRSIG",
            "gvkrAggFEngKF09uU2VudEludml0YXRpb25SZW1vdmVkEjouYmdzLnByb3Rv",
            "Y29sLmZyaWVuZHMudjEuU2VudEludml0YXRpb25SZW1vdmVkTm90aWZpY2F0",
            "aW9uGhkuYmdzLnByb3RvY29sLk5PX1JFU1BPTlNFIgaC+SsCCAYScAoTT25V",
            "cGRhdGVGcmllbmRTdGF0ZRI2LmJncy5wcm90b2NvbC5mcmllbmRzLnYxLlVw",
            "ZGF0ZUZyaWVuZFN0YXRlTm90aWZpY2F0aW9uGhkuYmdzLnByb3RvY29sLk5P",
            "X1JFU1BPTlNFIgaC+SsCCAcaNYL5KyUKI2JuZXQucHJvdG9jb2wuZnJpZW5k",
            "cy5GcmllbmRzTm90aWZ5gvkrAjgBivkrAggBQjQKF2Jncy5wcm90b2NvbC5m",
            "cmllbmRzLnYxQhNGcmllbmRzU2VydmljZVByb3RvgAEAiAEB"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Bgs.Protocol.AttributeTypesReflection.Descriptor, global::Bgs.Protocol.EntityTypesReflection.Descriptor, global::Bgs.Protocol.Friends.V1.FriendsTypesReflection.Descriptor, global::Bgs.Protocol.InvitationTypesReflection.Descriptor, global::Bgs.Protocol.RpcTypesReflection.Descriptor, global::Bgs.Protocol.FieldOptionsReflection.Descriptor, global::Bgs.Protocol.MessageOptionsReflection.Descriptor, global::Bgs.Protocol.MethodOptionsReflection.Descriptor, global::Bgs.Protocol.ServiceOptionsReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Bgs.Protocol.Friends.V1.SubscribeRequest), global::Bgs.Protocol.Friends.V1.SubscribeRequest.Parser, new[]{ "AgentId", "ObjectId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bgs.Protocol.Friends.V1.UnsubscribeRequest), global::Bgs.Protocol.Friends.V1.UnsubscribeRequest.Parser, new[]{ "AgentId", "ObjectId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bgs.Protocol.Friends.V1.SendInvitationRequest), global::Bgs.Protocol.Friends.V1.SendInvitationRequest.Parser, new[]{ "AgentIdentity", "TargetId", "Params" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bgs.Protocol.Friends.V1.RevokeInvitationRequest), global::Bgs.Protocol.Friends.V1.RevokeInvitationRequest.Parser, new[]{ "AgentId", "InvitationId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bgs.Protocol.Friends.V1.AcceptInvitationRequest), global::Bgs.Protocol.Friends.V1.AcceptInvitationRequest.Parser, new[]{ "AgentId", "InvitationId", "Options" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bgs.Protocol.Friends.V1.DeclineInvitationRequest), global::Bgs.Protocol.Friends.V1.DeclineInvitationRequest.Parser, new[]{ "AgentId", "InvitationId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bgs.Protocol.Friends.V1.IgnoreInvitationRequest), global::Bgs.Protocol.Friends.V1.IgnoreInvitationRequest.Parser, new[]{ "AgentId", "InvitationId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bgs.Protocol.Friends.V1.RemoveFriendRequest), global::Bgs.Protocol.Friends.V1.RemoveFriendRequest.Parser, new[]{ "AgentId", "TargetId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bgs.Protocol.Friends.V1.RevokeAllInvitationsRequest), global::Bgs.Protocol.Friends.V1.RevokeAllInvitationsRequest.Parser, new[]{ "AgentId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bgs.Protocol.Friends.V1.ViewFriendsRequest), global::Bgs.Protocol.Friends.V1.ViewFriendsRequest.Parser, new[]{ "AgentId", "TargetId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bgs.Protocol.Friends.V1.ViewFriendsResponse), global::Bgs.Protocol.Friends.V1.ViewFriendsResponse.Parser, new[]{ "Friends" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bgs.Protocol.Friends.V1.UpdateFriendStateRequest), global::Bgs.Protocol.Friends.V1.UpdateFriendStateRequest.Parser, new[]{ "AgentId", "TargetId", "Attribute" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bgs.Protocol.Friends.V1.GetFriendListRequest), global::Bgs.Protocol.Friends.V1.GetFriendListRequest.Parser, new[]{ "AgentId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bgs.Protocol.Friends.V1.GetFriendListResponse), global::Bgs.Protocol.Friends.V1.GetFriendListResponse.Parser, new[]{ "Friends" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bgs.Protocol.Friends.V1.CreateFriendshipRequest), global::Bgs.Protocol.Friends.V1.CreateFriendshipRequest.Parser, new[]{ "AgentId", "TargetId", "Role" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bgs.Protocol.Friends.V1.FriendNotification), global::Bgs.Protocol.Friends.V1.FriendNotification.Parser, new[]{ "Target", "AccountId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bgs.Protocol.Friends.V1.UpdateFriendStateNotification), global::Bgs.Protocol.Friends.V1.UpdateFriendStateNotification.Parser, new[]{ "ChangedFriend", "AccountId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bgs.Protocol.Friends.V1.InvitationNotification), global::Bgs.Protocol.Friends.V1.InvitationNotification.Parser, new[]{ "Invitation", "Reason", "AccountId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bgs.Protocol.Friends.V1.SentInvitationAddedNotification), global::Bgs.Protocol.Friends.V1.SentInvitationAddedNotification.Parser, new[]{ "AccountId", "Invitation" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bgs.Protocol.Friends.V1.SentInvitationRemovedNotification), global::Bgs.Protocol.Friends.V1.SentInvitationRemovedNotification.Parser, new[]{ "AccountId", "InvitationId", "Reason" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class SubscribeRequest : pb::IMessage<SubscribeRequest> {
    private static readonly pb::MessageParser<SubscribeRequest> _parser = new pb::MessageParser<SubscribeRequest>(() => new SubscribeRequest());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SubscribeRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bgs.Protocol.Friends.V1.FriendsServiceReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SubscribeRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SubscribeRequest(SubscribeRequest other) : this() {
      _hasBits0 = other._hasBits0;
      agentId_ = other.HasAgentId ? other.agentId_.Clone() : null;
      objectId_ = other.objectId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SubscribeRequest Clone() {
      return new SubscribeRequest(this);
    }

    /// <summary>Field number for the "agent_id" field.</summary>
    public const int AgentIdFieldNumber = 1;
    private global::Bgs.Protocol.EntityId agentId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bgs.Protocol.EntityId AgentId {
      get { return agentId_; }
      set {
        agentId_ = value;
      }
    }
    /// <summary>Gets whether the agent_id field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasAgentId {
      get { return agentId_ != null; }
    }
    /// <summary>Clears the value of the agent_id field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearAgentId() {
      agentId_ = null;
    }

    /// <summary>Field number for the "object_id" field.</summary>
    public const int ObjectIdFieldNumber = 2;
    private readonly static ulong ObjectIdDefaultValue = 0UL;

    private ulong objectId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong ObjectId {
      get { if ((_hasBits0 & 1) != 0) { return objectId_; } else { return ObjectIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        objectId_ = value;
      }
    }
    /// <summary>Gets whether the "object_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasObjectId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "object_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearObjectId() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SubscribeRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SubscribeRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(AgentId, other.AgentId)) return false;
      if (ObjectId != other.ObjectId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasAgentId) hash ^= AgentId.GetHashCode();
      if (HasObjectId) hash ^= ObjectId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasAgentId) {
        output.WriteRawTag(10);
        output.WriteMessage(AgentId);
      }
      if (HasObjectId) {
        output.WriteRawTag(16);
        output.WriteUInt64(ObjectId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasAgentId) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AgentId);
      }
      if (HasObjectId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(ObjectId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SubscribeRequest other) {
      if (other == null) {
        return;
      }
      if (other.HasAgentId) {
        if (!HasAgentId) {
          AgentId = new global::Bgs.Protocol.EntityId();
        }
        AgentId.MergeFrom(other.AgentId);
      }
      if (other.HasObjectId) {
        ObjectId = other.ObjectId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (!HasAgentId) {
              AgentId = new global::Bgs.Protocol.EntityId();
            }
            input.ReadMessage(AgentId);
            break;
          }
          case 16: {
            ObjectId = input.ReadUInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class UnsubscribeRequest : pb::IMessage<UnsubscribeRequest> {
    private static readonly pb::MessageParser<UnsubscribeRequest> _parser = new pb::MessageParser<UnsubscribeRequest>(() => new UnsubscribeRequest());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UnsubscribeRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bgs.Protocol.Friends.V1.FriendsServiceReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UnsubscribeRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UnsubscribeRequest(UnsubscribeRequest other) : this() {
      _hasBits0 = other._hasBits0;
      agentId_ = other.HasAgentId ? other.agentId_.Clone() : null;
      objectId_ = other.objectId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UnsubscribeRequest Clone() {
      return new UnsubscribeRequest(this);
    }

    /// <summary>Field number for the "agent_id" field.</summary>
    public const int AgentIdFieldNumber = 1;
    private global::Bgs.Protocol.EntityId agentId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bgs.Protocol.EntityId AgentId {
      get { return agentId_; }
      set {
        agentId_ = value;
      }
    }
    /// <summary>Gets whether the agent_id field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasAgentId {
      get { return agentId_ != null; }
    }
    /// <summary>Clears the value of the agent_id field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearAgentId() {
      agentId_ = null;
    }

    /// <summary>Field number for the "object_id" field.</summary>
    public const int ObjectIdFieldNumber = 2;
    private readonly static ulong ObjectIdDefaultValue = 0UL;

    private ulong objectId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong ObjectId {
      get { if ((_hasBits0 & 1) != 0) { return objectId_; } else { return ObjectIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        objectId_ = value;
      }
    }
    /// <summary>Gets whether the "object_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasObjectId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "object_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearObjectId() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UnsubscribeRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UnsubscribeRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(AgentId, other.AgentId)) return false;
      if (ObjectId != other.ObjectId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasAgentId) hash ^= AgentId.GetHashCode();
      if (HasObjectId) hash ^= ObjectId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasAgentId) {
        output.WriteRawTag(10);
        output.WriteMessage(AgentId);
      }
      if (HasObjectId) {
        output.WriteRawTag(16);
        output.WriteUInt64(ObjectId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasAgentId) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AgentId);
      }
      if (HasObjectId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(ObjectId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UnsubscribeRequest other) {
      if (other == null) {
        return;
      }
      if (other.HasAgentId) {
        if (!HasAgentId) {
          AgentId = new global::Bgs.Protocol.EntityId();
        }
        AgentId.MergeFrom(other.AgentId);
      }
      if (other.HasObjectId) {
        ObjectId = other.ObjectId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (!HasAgentId) {
              AgentId = new global::Bgs.Protocol.EntityId();
            }
            input.ReadMessage(AgentId);
            break;
          }
          case 16: {
            ObjectId = input.ReadUInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class SendInvitationRequest : pb::IMessage<SendInvitationRequest> {
    private static readonly pb::MessageParser<SendInvitationRequest> _parser = new pb::MessageParser<SendInvitationRequest>(() => new SendInvitationRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SendInvitationRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bgs.Protocol.Friends.V1.FriendsServiceReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SendInvitationRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SendInvitationRequest(SendInvitationRequest other) : this() {
      agentIdentity_ = other.HasAgentIdentity ? other.agentIdentity_.Clone() : null;
      targetId_ = other.HasTargetId ? other.targetId_.Clone() : null;
      params_ = other.HasParams ? other.params_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SendInvitationRequest Clone() {
      return new SendInvitationRequest(this);
    }

    /// <summary>Field number for the "agent_identity" field.</summary>
    public const int AgentIdentityFieldNumber = 1;
    private global::Bgs.Protocol.Identity agentIdentity_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bgs.Protocol.Identity AgentIdentity {
      get { return agentIdentity_; }
      set {
        agentIdentity_ = value;
      }
    }
    /// <summary>Gets whether the agent_identity field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasAgentIdentity {
      get { return agentIdentity_ != null; }
    }
    /// <summary>Clears the value of the agent_identity field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearAgentIdentity() {
      agentIdentity_ = null;
    }

    /// <summary>Field number for the "target_id" field.</summary>
    public const int TargetIdFieldNumber = 2;
    private global::Bgs.Protocol.EntityId targetId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bgs.Protocol.EntityId TargetId {
      get { return targetId_; }
      set {
        targetId_ = value;
      }
    }
    /// <summary>Gets whether the target_id field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasTargetId {
      get { return targetId_ != null; }
    }
    /// <summary>Clears the value of the target_id field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearTargetId() {
      targetId_ = null;
    }

    /// <summary>Field number for the "params" field.</summary>
    public const int ParamsFieldNumber = 3;
    private global::Bgs.Protocol.InvitationParams params_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bgs.Protocol.InvitationParams Params {
      get { return params_; }
      set {
        params_ = value;
      }
    }
    /// <summary>Gets whether the params field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasParams {
      get { return params_ != null; }
    }
    /// <summary>Clears the value of the params field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearParams() {
      params_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SendInvitationRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SendInvitationRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(AgentIdentity, other.AgentIdentity)) return false;
      if (!object.Equals(TargetId, other.TargetId)) return false;
      if (!object.Equals(Params, other.Params)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasAgentIdentity) hash ^= AgentIdentity.GetHashCode();
      if (HasTargetId) hash ^= TargetId.GetHashCode();
      if (HasParams) hash ^= Params.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasAgentIdentity) {
        output.WriteRawTag(10);
        output.WriteMessage(AgentIdentity);
      }
      if (HasTargetId) {
        output.WriteRawTag(18);
        output.WriteMessage(TargetId);
      }
      if (HasParams) {
        output.WriteRawTag(26);
        output.WriteMessage(Params);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasAgentIdentity) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AgentIdentity);
      }
      if (HasTargetId) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TargetId);
      }
      if (HasParams) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Params);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SendInvitationRequest other) {
      if (other == null) {
        return;
      }
      if (other.HasAgentIdentity) {
        if (!HasAgentIdentity) {
          AgentIdentity = new global::Bgs.Protocol.Identity();
        }
        AgentIdentity.MergeFrom(other.AgentIdentity);
      }
      if (other.HasTargetId) {
        if (!HasTargetId) {
          TargetId = new global::Bgs.Protocol.EntityId();
        }
        TargetId.MergeFrom(other.TargetId);
      }
      if (other.HasParams) {
        if (!HasParams) {
          Params = new global::Bgs.Protocol.InvitationParams();
        }
        Params.MergeFrom(other.Params);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (!HasAgentIdentity) {
              AgentIdentity = new global::Bgs.Protocol.Identity();
            }
            input.ReadMessage(AgentIdentity);
            break;
          }
          case 18: {
            if (!HasTargetId) {
              TargetId = new global::Bgs.Protocol.EntityId();
            }
            input.ReadMessage(TargetId);
            break;
          }
          case 26: {
            if (!HasParams) {
              Params = new global::Bgs.Protocol.InvitationParams();
            }
            input.ReadMessage(Params);
            break;
          }
        }
      }
    }

  }

  public sealed partial class RevokeInvitationRequest : pb::IMessage<RevokeInvitationRequest> {
    private static readonly pb::MessageParser<RevokeInvitationRequest> _parser = new pb::MessageParser<RevokeInvitationRequest>(() => new RevokeInvitationRequest());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RevokeInvitationRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bgs.Protocol.Friends.V1.FriendsServiceReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RevokeInvitationRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RevokeInvitationRequest(RevokeInvitationRequest other) : this() {
      _hasBits0 = other._hasBits0;
      agentId_ = other.HasAgentId ? other.agentId_.Clone() : null;
      invitationId_ = other.invitationId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RevokeInvitationRequest Clone() {
      return new RevokeInvitationRequest(this);
    }

    /// <summary>Field number for the "agent_id" field.</summary>
    public const int AgentIdFieldNumber = 1;
    private global::Bgs.Protocol.EntityId agentId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bgs.Protocol.EntityId AgentId {
      get { return agentId_; }
      set {
        agentId_ = value;
      }
    }
    /// <summary>Gets whether the agent_id field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasAgentId {
      get { return agentId_ != null; }
    }
    /// <summary>Clears the value of the agent_id field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearAgentId() {
      agentId_ = null;
    }

    /// <summary>Field number for the "invitation_id" field.</summary>
    public const int InvitationIdFieldNumber = 2;
    private readonly static ulong InvitationIdDefaultValue = 0UL;

    private ulong invitationId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong InvitationId {
      get { if ((_hasBits0 & 1) != 0) { return invitationId_; } else { return InvitationIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        invitationId_ = value;
      }
    }
    /// <summary>Gets whether the "invitation_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasInvitationId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "invitation_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearInvitationId() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RevokeInvitationRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RevokeInvitationRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(AgentId, other.AgentId)) return false;
      if (InvitationId != other.InvitationId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasAgentId) hash ^= AgentId.GetHashCode();
      if (HasInvitationId) hash ^= InvitationId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasAgentId) {
        output.WriteRawTag(10);
        output.WriteMessage(AgentId);
      }
      if (HasInvitationId) {
        output.WriteRawTag(17);
        output.WriteFixed64(InvitationId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasAgentId) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AgentId);
      }
      if (HasInvitationId) {
        size += 1 + 8;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RevokeInvitationRequest other) {
      if (other == null) {
        return;
      }
      if (other.HasAgentId) {
        if (!HasAgentId) {
          AgentId = new global::Bgs.Protocol.EntityId();
        }
        AgentId.MergeFrom(other.AgentId);
      }
      if (other.HasInvitationId) {
        InvitationId = other.InvitationId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (!HasAgentId) {
              AgentId = new global::Bgs.Protocol.EntityId();
            }
            input.ReadMessage(AgentId);
            break;
          }
          case 17: {
            InvitationId = input.ReadFixed64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class AcceptInvitationRequest : pb::IMessage<AcceptInvitationRequest> {
    private static readonly pb::MessageParser<AcceptInvitationRequest> _parser = new pb::MessageParser<AcceptInvitationRequest>(() => new AcceptInvitationRequest());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AcceptInvitationRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bgs.Protocol.Friends.V1.FriendsServiceReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AcceptInvitationRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AcceptInvitationRequest(AcceptInvitationRequest other) : this() {
      _hasBits0 = other._hasBits0;
      agentId_ = other.HasAgentId ? other.agentId_.Clone() : null;
      invitationId_ = other.invitationId_;
      options_ = other.HasOptions ? other.options_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AcceptInvitationRequest Clone() {
      return new AcceptInvitationRequest(this);
    }

    /// <summary>Field number for the "agent_id" field.</summary>
    public const int AgentIdFieldNumber = 1;
    private global::Bgs.Protocol.EntityId agentId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bgs.Protocol.EntityId AgentId {
      get { return agentId_; }
      set {
        agentId_ = value;
      }
    }
    /// <summary>Gets whether the agent_id field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasAgentId {
      get { return agentId_ != null; }
    }
    /// <summary>Clears the value of the agent_id field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearAgentId() {
      agentId_ = null;
    }

    /// <summary>Field number for the "invitation_id" field.</summary>
    public const int InvitationIdFieldNumber = 3;
    private readonly static ulong InvitationIdDefaultValue = 0UL;

    private ulong invitationId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong InvitationId {
      get { if ((_hasBits0 & 1) != 0) { return invitationId_; } else { return InvitationIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        invitationId_ = value;
      }
    }
    /// <summary>Gets whether the "invitation_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasInvitationId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "invitation_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearInvitationId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "options" field.</summary>
    public const int OptionsFieldNumber = 4;
    private global::Bgs.Protocol.Friends.V1.AcceptInvitationOptions options_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bgs.Protocol.Friends.V1.AcceptInvitationOptions Options {
      get { return options_; }
      set {
        options_ = value;
      }
    }
    /// <summary>Gets whether the options field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasOptions {
      get { return options_ != null; }
    }
    /// <summary>Clears the value of the options field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearOptions() {
      options_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AcceptInvitationRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AcceptInvitationRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(AgentId, other.AgentId)) return false;
      if (InvitationId != other.InvitationId) return false;
      if (!object.Equals(Options, other.Options)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasAgentId) hash ^= AgentId.GetHashCode();
      if (HasInvitationId) hash ^= InvitationId.GetHashCode();
      if (HasOptions) hash ^= Options.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasAgentId) {
        output.WriteRawTag(10);
        output.WriteMessage(AgentId);
      }
      if (HasInvitationId) {
        output.WriteRawTag(25);
        output.WriteFixed64(InvitationId);
      }
      if (HasOptions) {
        output.WriteRawTag(34);
        output.WriteMessage(Options);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasAgentId) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AgentId);
      }
      if (HasInvitationId) {
        size += 1 + 8;
      }
      if (HasOptions) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Options);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AcceptInvitationRequest other) {
      if (other == null) {
        return;
      }
      if (other.HasAgentId) {
        if (!HasAgentId) {
          AgentId = new global::Bgs.Protocol.EntityId();
        }
        AgentId.MergeFrom(other.AgentId);
      }
      if (other.HasInvitationId) {
        InvitationId = other.InvitationId;
      }
      if (other.HasOptions) {
        if (!HasOptions) {
          Options = new global::Bgs.Protocol.Friends.V1.AcceptInvitationOptions();
        }
        Options.MergeFrom(other.Options);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (!HasAgentId) {
              AgentId = new global::Bgs.Protocol.EntityId();
            }
            input.ReadMessage(AgentId);
            break;
          }
          case 25: {
            InvitationId = input.ReadFixed64();
            break;
          }
          case 34: {
            if (!HasOptions) {
              Options = new global::Bgs.Protocol.Friends.V1.AcceptInvitationOptions();
            }
            input.ReadMessage(Options);
            break;
          }
        }
      }
    }

  }

  public sealed partial class DeclineInvitationRequest : pb::IMessage<DeclineInvitationRequest> {
    private static readonly pb::MessageParser<DeclineInvitationRequest> _parser = new pb::MessageParser<DeclineInvitationRequest>(() => new DeclineInvitationRequest());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DeclineInvitationRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bgs.Protocol.Friends.V1.FriendsServiceReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeclineInvitationRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeclineInvitationRequest(DeclineInvitationRequest other) : this() {
      _hasBits0 = other._hasBits0;
      agentId_ = other.HasAgentId ? other.agentId_.Clone() : null;
      invitationId_ = other.invitationId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeclineInvitationRequest Clone() {
      return new DeclineInvitationRequest(this);
    }

    /// <summary>Field number for the "agent_id" field.</summary>
    public const int AgentIdFieldNumber = 1;
    private global::Bgs.Protocol.EntityId agentId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bgs.Protocol.EntityId AgentId {
      get { return agentId_; }
      set {
        agentId_ = value;
      }
    }
    /// <summary>Gets whether the agent_id field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasAgentId {
      get { return agentId_ != null; }
    }
    /// <summary>Clears the value of the agent_id field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearAgentId() {
      agentId_ = null;
    }

    /// <summary>Field number for the "invitation_id" field.</summary>
    public const int InvitationIdFieldNumber = 3;
    private readonly static ulong InvitationIdDefaultValue = 0UL;

    private ulong invitationId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong InvitationId {
      get { if ((_hasBits0 & 1) != 0) { return invitationId_; } else { return InvitationIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        invitationId_ = value;
      }
    }
    /// <summary>Gets whether the "invitation_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasInvitationId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "invitation_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearInvitationId() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DeclineInvitationRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DeclineInvitationRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(AgentId, other.AgentId)) return false;
      if (InvitationId != other.InvitationId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasAgentId) hash ^= AgentId.GetHashCode();
      if (HasInvitationId) hash ^= InvitationId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasAgentId) {
        output.WriteRawTag(10);
        output.WriteMessage(AgentId);
      }
      if (HasInvitationId) {
        output.WriteRawTag(25);
        output.WriteFixed64(InvitationId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasAgentId) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AgentId);
      }
      if (HasInvitationId) {
        size += 1 + 8;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DeclineInvitationRequest other) {
      if (other == null) {
        return;
      }
      if (other.HasAgentId) {
        if (!HasAgentId) {
          AgentId = new global::Bgs.Protocol.EntityId();
        }
        AgentId.MergeFrom(other.AgentId);
      }
      if (other.HasInvitationId) {
        InvitationId = other.InvitationId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (!HasAgentId) {
              AgentId = new global::Bgs.Protocol.EntityId();
            }
            input.ReadMessage(AgentId);
            break;
          }
          case 25: {
            InvitationId = input.ReadFixed64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class IgnoreInvitationRequest : pb::IMessage<IgnoreInvitationRequest> {
    private static readonly pb::MessageParser<IgnoreInvitationRequest> _parser = new pb::MessageParser<IgnoreInvitationRequest>(() => new IgnoreInvitationRequest());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<IgnoreInvitationRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bgs.Protocol.Friends.V1.FriendsServiceReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IgnoreInvitationRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IgnoreInvitationRequest(IgnoreInvitationRequest other) : this() {
      _hasBits0 = other._hasBits0;
      agentId_ = other.HasAgentId ? other.agentId_.Clone() : null;
      invitationId_ = other.invitationId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IgnoreInvitationRequest Clone() {
      return new IgnoreInvitationRequest(this);
    }

    /// <summary>Field number for the "agent_id" field.</summary>
    public const int AgentIdFieldNumber = 1;
    private global::Bgs.Protocol.EntityId agentId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bgs.Protocol.EntityId AgentId {
      get { return agentId_; }
      set {
        agentId_ = value;
      }
    }
    /// <summary>Gets whether the agent_id field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasAgentId {
      get { return agentId_ != null; }
    }
    /// <summary>Clears the value of the agent_id field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearAgentId() {
      agentId_ = null;
    }

    /// <summary>Field number for the "invitation_id" field.</summary>
    public const int InvitationIdFieldNumber = 3;
    private readonly static ulong InvitationIdDefaultValue = 0UL;

    private ulong invitationId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong InvitationId {
      get { if ((_hasBits0 & 1) != 0) { return invitationId_; } else { return InvitationIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        invitationId_ = value;
      }
    }
    /// <summary>Gets whether the "invitation_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasInvitationId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "invitation_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearInvitationId() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as IgnoreInvitationRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(IgnoreInvitationRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(AgentId, other.AgentId)) return false;
      if (InvitationId != other.InvitationId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasAgentId) hash ^= AgentId.GetHashCode();
      if (HasInvitationId) hash ^= InvitationId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasAgentId) {
        output.WriteRawTag(10);
        output.WriteMessage(AgentId);
      }
      if (HasInvitationId) {
        output.WriteRawTag(25);
        output.WriteFixed64(InvitationId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasAgentId) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AgentId);
      }
      if (HasInvitationId) {
        size += 1 + 8;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(IgnoreInvitationRequest other) {
      if (other == null) {
        return;
      }
      if (other.HasAgentId) {
        if (!HasAgentId) {
          AgentId = new global::Bgs.Protocol.EntityId();
        }
        AgentId.MergeFrom(other.AgentId);
      }
      if (other.HasInvitationId) {
        InvitationId = other.InvitationId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (!HasAgentId) {
              AgentId = new global::Bgs.Protocol.EntityId();
            }
            input.ReadMessage(AgentId);
            break;
          }
          case 25: {
            InvitationId = input.ReadFixed64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class RemoveFriendRequest : pb::IMessage<RemoveFriendRequest> {
    private static readonly pb::MessageParser<RemoveFriendRequest> _parser = new pb::MessageParser<RemoveFriendRequest>(() => new RemoveFriendRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RemoveFriendRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bgs.Protocol.Friends.V1.FriendsServiceReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RemoveFriendRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RemoveFriendRequest(RemoveFriendRequest other) : this() {
      agentId_ = other.HasAgentId ? other.agentId_.Clone() : null;
      targetId_ = other.HasTargetId ? other.targetId_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RemoveFriendRequest Clone() {
      return new RemoveFriendRequest(this);
    }

    /// <summary>Field number for the "agent_id" field.</summary>
    public const int AgentIdFieldNumber = 1;
    private global::Bgs.Protocol.EntityId agentId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bgs.Protocol.EntityId AgentId {
      get { return agentId_; }
      set {
        agentId_ = value;
      }
    }
    /// <summary>Gets whether the agent_id field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasAgentId {
      get { return agentId_ != null; }
    }
    /// <summary>Clears the value of the agent_id field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearAgentId() {
      agentId_ = null;
    }

    /// <summary>Field number for the "target_id" field.</summary>
    public const int TargetIdFieldNumber = 2;
    private global::Bgs.Protocol.EntityId targetId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bgs.Protocol.EntityId TargetId {
      get { return targetId_; }
      set {
        targetId_ = value;
      }
    }
    /// <summary>Gets whether the target_id field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasTargetId {
      get { return targetId_ != null; }
    }
    /// <summary>Clears the value of the target_id field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearTargetId() {
      targetId_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RemoveFriendRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RemoveFriendRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(AgentId, other.AgentId)) return false;
      if (!object.Equals(TargetId, other.TargetId)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasAgentId) hash ^= AgentId.GetHashCode();
      if (HasTargetId) hash ^= TargetId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasAgentId) {
        output.WriteRawTag(10);
        output.WriteMessage(AgentId);
      }
      if (HasTargetId) {
        output.WriteRawTag(18);
        output.WriteMessage(TargetId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasAgentId) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AgentId);
      }
      if (HasTargetId) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TargetId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RemoveFriendRequest other) {
      if (other == null) {
        return;
      }
      if (other.HasAgentId) {
        if (!HasAgentId) {
          AgentId = new global::Bgs.Protocol.EntityId();
        }
        AgentId.MergeFrom(other.AgentId);
      }
      if (other.HasTargetId) {
        if (!HasTargetId) {
          TargetId = new global::Bgs.Protocol.EntityId();
        }
        TargetId.MergeFrom(other.TargetId);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (!HasAgentId) {
              AgentId = new global::Bgs.Protocol.EntityId();
            }
            input.ReadMessage(AgentId);
            break;
          }
          case 18: {
            if (!HasTargetId) {
              TargetId = new global::Bgs.Protocol.EntityId();
            }
            input.ReadMessage(TargetId);
            break;
          }
        }
      }
    }

  }

  public sealed partial class RevokeAllInvitationsRequest : pb::IMessage<RevokeAllInvitationsRequest> {
    private static readonly pb::MessageParser<RevokeAllInvitationsRequest> _parser = new pb::MessageParser<RevokeAllInvitationsRequest>(() => new RevokeAllInvitationsRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RevokeAllInvitationsRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bgs.Protocol.Friends.V1.FriendsServiceReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RevokeAllInvitationsRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RevokeAllInvitationsRequest(RevokeAllInvitationsRequest other) : this() {
      agentId_ = other.HasAgentId ? other.agentId_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RevokeAllInvitationsRequest Clone() {
      return new RevokeAllInvitationsRequest(this);
    }

    /// <summary>Field number for the "agent_id" field.</summary>
    public const int AgentIdFieldNumber = 2;
    private global::Bgs.Protocol.EntityId agentId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bgs.Protocol.EntityId AgentId {
      get { return agentId_; }
      set {
        agentId_ = value;
      }
    }
    /// <summary>Gets whether the agent_id field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasAgentId {
      get { return agentId_ != null; }
    }
    /// <summary>Clears the value of the agent_id field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearAgentId() {
      agentId_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RevokeAllInvitationsRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RevokeAllInvitationsRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(AgentId, other.AgentId)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasAgentId) hash ^= AgentId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasAgentId) {
        output.WriteRawTag(18);
        output.WriteMessage(AgentId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasAgentId) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AgentId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RevokeAllInvitationsRequest other) {
      if (other == null) {
        return;
      }
      if (other.HasAgentId) {
        if (!HasAgentId) {
          AgentId = new global::Bgs.Protocol.EntityId();
        }
        AgentId.MergeFrom(other.AgentId);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 18: {
            if (!HasAgentId) {
              AgentId = new global::Bgs.Protocol.EntityId();
            }
            input.ReadMessage(AgentId);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ViewFriendsRequest : pb::IMessage<ViewFriendsRequest> {
    private static readonly pb::MessageParser<ViewFriendsRequest> _parser = new pb::MessageParser<ViewFriendsRequest>(() => new ViewFriendsRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ViewFriendsRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bgs.Protocol.Friends.V1.FriendsServiceReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ViewFriendsRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ViewFriendsRequest(ViewFriendsRequest other) : this() {
      agentId_ = other.HasAgentId ? other.agentId_.Clone() : null;
      targetId_ = other.HasTargetId ? other.targetId_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ViewFriendsRequest Clone() {
      return new ViewFriendsRequest(this);
    }

    /// <summary>Field number for the "agent_id" field.</summary>
    public const int AgentIdFieldNumber = 1;
    private global::Bgs.Protocol.EntityId agentId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bgs.Protocol.EntityId AgentId {
      get { return agentId_; }
      set {
        agentId_ = value;
      }
    }
    /// <summary>Gets whether the agent_id field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasAgentId {
      get { return agentId_ != null; }
    }
    /// <summary>Clears the value of the agent_id field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearAgentId() {
      agentId_ = null;
    }

    /// <summary>Field number for the "target_id" field.</summary>
    public const int TargetIdFieldNumber = 2;
    private global::Bgs.Protocol.EntityId targetId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bgs.Protocol.EntityId TargetId {
      get { return targetId_; }
      set {
        targetId_ = value;
      }
    }
    /// <summary>Gets whether the target_id field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasTargetId {
      get { return targetId_ != null; }
    }
    /// <summary>Clears the value of the target_id field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearTargetId() {
      targetId_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ViewFriendsRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ViewFriendsRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(AgentId, other.AgentId)) return false;
      if (!object.Equals(TargetId, other.TargetId)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasAgentId) hash ^= AgentId.GetHashCode();
      if (HasTargetId) hash ^= TargetId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasAgentId) {
        output.WriteRawTag(10);
        output.WriteMessage(AgentId);
      }
      if (HasTargetId) {
        output.WriteRawTag(18);
        output.WriteMessage(TargetId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasAgentId) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AgentId);
      }
      if (HasTargetId) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TargetId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ViewFriendsRequest other) {
      if (other == null) {
        return;
      }
      if (other.HasAgentId) {
        if (!HasAgentId) {
          AgentId = new global::Bgs.Protocol.EntityId();
        }
        AgentId.MergeFrom(other.AgentId);
      }
      if (other.HasTargetId) {
        if (!HasTargetId) {
          TargetId = new global::Bgs.Protocol.EntityId();
        }
        TargetId.MergeFrom(other.TargetId);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (!HasAgentId) {
              AgentId = new global::Bgs.Protocol.EntityId();
            }
            input.ReadMessage(AgentId);
            break;
          }
          case 18: {
            if (!HasTargetId) {
              TargetId = new global::Bgs.Protocol.EntityId();
            }
            input.ReadMessage(TargetId);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ViewFriendsResponse : pb::IMessage<ViewFriendsResponse> {
    private static readonly pb::MessageParser<ViewFriendsResponse> _parser = new pb::MessageParser<ViewFriendsResponse>(() => new ViewFriendsResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ViewFriendsResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bgs.Protocol.Friends.V1.FriendsServiceReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ViewFriendsResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ViewFriendsResponse(ViewFriendsResponse other) : this() {
      friends_ = other.friends_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ViewFriendsResponse Clone() {
      return new ViewFriendsResponse(this);
    }

    /// <summary>Field number for the "friends" field.</summary>
    public const int FriendsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Bgs.Protocol.Friends.V1.FriendOfFriend> _repeated_friends_codec
        = pb::FieldCodec.ForMessage(10, global::Bgs.Protocol.Friends.V1.FriendOfFriend.Parser);
    private readonly pbc::RepeatedField<global::Bgs.Protocol.Friends.V1.FriendOfFriend> friends_ = new pbc::RepeatedField<global::Bgs.Protocol.Friends.V1.FriendOfFriend>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Bgs.Protocol.Friends.V1.FriendOfFriend> Friends {
      get { return friends_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ViewFriendsResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ViewFriendsResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!friends_.Equals(other.friends_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= friends_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      friends_.WriteTo(output, _repeated_friends_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += friends_.CalculateSize(_repeated_friends_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ViewFriendsResponse other) {
      if (other == null) {
        return;
      }
      friends_.Add(other.friends_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            friends_.AddEntriesFrom(input, _repeated_friends_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class UpdateFriendStateRequest : pb::IMessage<UpdateFriendStateRequest> {
    private static readonly pb::MessageParser<UpdateFriendStateRequest> _parser = new pb::MessageParser<UpdateFriendStateRequest>(() => new UpdateFriendStateRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UpdateFriendStateRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bgs.Protocol.Friends.V1.FriendsServiceReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateFriendStateRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateFriendStateRequest(UpdateFriendStateRequest other) : this() {
      agentId_ = other.HasAgentId ? other.agentId_.Clone() : null;
      targetId_ = other.HasTargetId ? other.targetId_.Clone() : null;
      attribute_ = other.attribute_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateFriendStateRequest Clone() {
      return new UpdateFriendStateRequest(this);
    }

    /// <summary>Field number for the "agent_id" field.</summary>
    public const int AgentIdFieldNumber = 1;
    private global::Bgs.Protocol.EntityId agentId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bgs.Protocol.EntityId AgentId {
      get { return agentId_; }
      set {
        agentId_ = value;
      }
    }
    /// <summary>Gets whether the agent_id field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasAgentId {
      get { return agentId_ != null; }
    }
    /// <summary>Clears the value of the agent_id field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearAgentId() {
      agentId_ = null;
    }

    /// <summary>Field number for the "target_id" field.</summary>
    public const int TargetIdFieldNumber = 2;
    private global::Bgs.Protocol.EntityId targetId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bgs.Protocol.EntityId TargetId {
      get { return targetId_; }
      set {
        targetId_ = value;
      }
    }
    /// <summary>Gets whether the target_id field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasTargetId {
      get { return targetId_ != null; }
    }
    /// <summary>Clears the value of the target_id field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearTargetId() {
      targetId_ = null;
    }

    /// <summary>Field number for the "attribute" field.</summary>
    public const int AttributeFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Bgs.Protocol.Attribute> _repeated_attribute_codec
        = pb::FieldCodec.ForMessage(26, global::Bgs.Protocol.Attribute.Parser);
    private readonly pbc::RepeatedField<global::Bgs.Protocol.Attribute> attribute_ = new pbc::RepeatedField<global::Bgs.Protocol.Attribute>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Bgs.Protocol.Attribute> Attribute {
      get { return attribute_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UpdateFriendStateRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UpdateFriendStateRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(AgentId, other.AgentId)) return false;
      if (!object.Equals(TargetId, other.TargetId)) return false;
      if(!attribute_.Equals(other.attribute_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasAgentId) hash ^= AgentId.GetHashCode();
      if (HasTargetId) hash ^= TargetId.GetHashCode();
      hash ^= attribute_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasAgentId) {
        output.WriteRawTag(10);
        output.WriteMessage(AgentId);
      }
      if (HasTargetId) {
        output.WriteRawTag(18);
        output.WriteMessage(TargetId);
      }
      attribute_.WriteTo(output, _repeated_attribute_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasAgentId) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AgentId);
      }
      if (HasTargetId) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TargetId);
      }
      size += attribute_.CalculateSize(_repeated_attribute_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UpdateFriendStateRequest other) {
      if (other == null) {
        return;
      }
      if (other.HasAgentId) {
        if (!HasAgentId) {
          AgentId = new global::Bgs.Protocol.EntityId();
        }
        AgentId.MergeFrom(other.AgentId);
      }
      if (other.HasTargetId) {
        if (!HasTargetId) {
          TargetId = new global::Bgs.Protocol.EntityId();
        }
        TargetId.MergeFrom(other.TargetId);
      }
      attribute_.Add(other.attribute_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (!HasAgentId) {
              AgentId = new global::Bgs.Protocol.EntityId();
            }
            input.ReadMessage(AgentId);
            break;
          }
          case 18: {
            if (!HasTargetId) {
              TargetId = new global::Bgs.Protocol.EntityId();
            }
            input.ReadMessage(TargetId);
            break;
          }
          case 26: {
            attribute_.AddEntriesFrom(input, _repeated_attribute_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetFriendListRequest : pb::IMessage<GetFriendListRequest> {
    private static readonly pb::MessageParser<GetFriendListRequest> _parser = new pb::MessageParser<GetFriendListRequest>(() => new GetFriendListRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetFriendListRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bgs.Protocol.Friends.V1.FriendsServiceReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetFriendListRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetFriendListRequest(GetFriendListRequest other) : this() {
      agentId_ = other.HasAgentId ? other.agentId_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetFriendListRequest Clone() {
      return new GetFriendListRequest(this);
    }

    /// <summary>Field number for the "agent_id" field.</summary>
    public const int AgentIdFieldNumber = 2;
    private global::Bgs.Protocol.EntityId agentId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bgs.Protocol.EntityId AgentId {
      get { return agentId_; }
      set {
        agentId_ = value;
      }
    }
    /// <summary>Gets whether the agent_id field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasAgentId {
      get { return agentId_ != null; }
    }
    /// <summary>Clears the value of the agent_id field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearAgentId() {
      agentId_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetFriendListRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetFriendListRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(AgentId, other.AgentId)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasAgentId) hash ^= AgentId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasAgentId) {
        output.WriteRawTag(18);
        output.WriteMessage(AgentId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasAgentId) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AgentId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetFriendListRequest other) {
      if (other == null) {
        return;
      }
      if (other.HasAgentId) {
        if (!HasAgentId) {
          AgentId = new global::Bgs.Protocol.EntityId();
        }
        AgentId.MergeFrom(other.AgentId);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 18: {
            if (!HasAgentId) {
              AgentId = new global::Bgs.Protocol.EntityId();
            }
            input.ReadMessage(AgentId);
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetFriendListResponse : pb::IMessage<GetFriendListResponse> {
    private static readonly pb::MessageParser<GetFriendListResponse> _parser = new pb::MessageParser<GetFriendListResponse>(() => new GetFriendListResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetFriendListResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bgs.Protocol.Friends.V1.FriendsServiceReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetFriendListResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetFriendListResponse(GetFriendListResponse other) : this() {
      friends_ = other.friends_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetFriendListResponse Clone() {
      return new GetFriendListResponse(this);
    }

    /// <summary>Field number for the "friends" field.</summary>
    public const int FriendsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Bgs.Protocol.Friends.V1.Friend> _repeated_friends_codec
        = pb::FieldCodec.ForMessage(10, global::Bgs.Protocol.Friends.V1.Friend.Parser);
    private readonly pbc::RepeatedField<global::Bgs.Protocol.Friends.V1.Friend> friends_ = new pbc::RepeatedField<global::Bgs.Protocol.Friends.V1.Friend>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Bgs.Protocol.Friends.V1.Friend> Friends {
      get { return friends_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetFriendListResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetFriendListResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!friends_.Equals(other.friends_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= friends_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      friends_.WriteTo(output, _repeated_friends_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += friends_.CalculateSize(_repeated_friends_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetFriendListResponse other) {
      if (other == null) {
        return;
      }
      friends_.Add(other.friends_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            friends_.AddEntriesFrom(input, _repeated_friends_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class CreateFriendshipRequest : pb::IMessage<CreateFriendshipRequest> {
    private static readonly pb::MessageParser<CreateFriendshipRequest> _parser = new pb::MessageParser<CreateFriendshipRequest>(() => new CreateFriendshipRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CreateFriendshipRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bgs.Protocol.Friends.V1.FriendsServiceReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateFriendshipRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateFriendshipRequest(CreateFriendshipRequest other) : this() {
      agentId_ = other.HasAgentId ? other.agentId_.Clone() : null;
      targetId_ = other.HasTargetId ? other.targetId_.Clone() : null;
      role_ = other.role_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateFriendshipRequest Clone() {
      return new CreateFriendshipRequest(this);
    }

    /// <summary>Field number for the "agent_id" field.</summary>
    public const int AgentIdFieldNumber = 1;
    private global::Bgs.Protocol.EntityId agentId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bgs.Protocol.EntityId AgentId {
      get { return agentId_; }
      set {
        agentId_ = value;
      }
    }
    /// <summary>Gets whether the agent_id field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasAgentId {
      get { return agentId_ != null; }
    }
    /// <summary>Clears the value of the agent_id field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearAgentId() {
      agentId_ = null;
    }

    /// <summary>Field number for the "target_id" field.</summary>
    public const int TargetIdFieldNumber = 2;
    private global::Bgs.Protocol.EntityId targetId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bgs.Protocol.EntityId TargetId {
      get { return targetId_; }
      set {
        targetId_ = value;
      }
    }
    /// <summary>Gets whether the target_id field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasTargetId {
      get { return targetId_ != null; }
    }
    /// <summary>Clears the value of the target_id field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearTargetId() {
      targetId_ = null;
    }

    /// <summary>Field number for the "role" field.</summary>
    public const int RoleFieldNumber = 3;
    private static readonly pb::FieldCodec<uint> _repeated_role_codec
        = pb::FieldCodec.ForUInt32(26);
    private readonly pbc::RepeatedField<uint> role_ = new pbc::RepeatedField<uint>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<uint> Role {
      get { return role_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CreateFriendshipRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CreateFriendshipRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(AgentId, other.AgentId)) return false;
      if (!object.Equals(TargetId, other.TargetId)) return false;
      if(!role_.Equals(other.role_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasAgentId) hash ^= AgentId.GetHashCode();
      if (HasTargetId) hash ^= TargetId.GetHashCode();
      hash ^= role_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasAgentId) {
        output.WriteRawTag(10);
        output.WriteMessage(AgentId);
      }
      if (HasTargetId) {
        output.WriteRawTag(18);
        output.WriteMessage(TargetId);
      }
      role_.WriteTo(output, _repeated_role_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasAgentId) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AgentId);
      }
      if (HasTargetId) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TargetId);
      }
      size += role_.CalculateSize(_repeated_role_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CreateFriendshipRequest other) {
      if (other == null) {
        return;
      }
      if (other.HasAgentId) {
        if (!HasAgentId) {
          AgentId = new global::Bgs.Protocol.EntityId();
        }
        AgentId.MergeFrom(other.AgentId);
      }
      if (other.HasTargetId) {
        if (!HasTargetId) {
          TargetId = new global::Bgs.Protocol.EntityId();
        }
        TargetId.MergeFrom(other.TargetId);
      }
      role_.Add(other.role_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (!HasAgentId) {
              AgentId = new global::Bgs.Protocol.EntityId();
            }
            input.ReadMessage(AgentId);
            break;
          }
          case 18: {
            if (!HasTargetId) {
              TargetId = new global::Bgs.Protocol.EntityId();
            }
            input.ReadMessage(TargetId);
            break;
          }
          case 26:
          case 24: {
            role_.AddEntriesFrom(input, _repeated_role_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class FriendNotification : pb::IMessage<FriendNotification> {
    private static readonly pb::MessageParser<FriendNotification> _parser = new pb::MessageParser<FriendNotification>(() => new FriendNotification());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FriendNotification> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bgs.Protocol.Friends.V1.FriendsServiceReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FriendNotification() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FriendNotification(FriendNotification other) : this() {
      target_ = other.HasTarget ? other.target_.Clone() : null;
      accountId_ = other.HasAccountId ? other.accountId_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FriendNotification Clone() {
      return new FriendNotification(this);
    }

    /// <summary>Field number for the "target" field.</summary>
    public const int TargetFieldNumber = 1;
    private global::Bgs.Protocol.Friends.V1.Friend target_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bgs.Protocol.Friends.V1.Friend Target {
      get { return target_; }
      set {
        target_ = value;
      }
    }
    /// <summary>Gets whether the target field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasTarget {
      get { return target_ != null; }
    }
    /// <summary>Clears the value of the target field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearTarget() {
      target_ = null;
    }

    /// <summary>Field number for the "account_id" field.</summary>
    public const int AccountIdFieldNumber = 5;
    private global::Bgs.Protocol.EntityId accountId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bgs.Protocol.EntityId AccountId {
      get { return accountId_; }
      set {
        accountId_ = value;
      }
    }
    /// <summary>Gets whether the account_id field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasAccountId {
      get { return accountId_ != null; }
    }
    /// <summary>Clears the value of the account_id field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearAccountId() {
      accountId_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FriendNotification);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FriendNotification other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Target, other.Target)) return false;
      if (!object.Equals(AccountId, other.AccountId)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasTarget) hash ^= Target.GetHashCode();
      if (HasAccountId) hash ^= AccountId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasTarget) {
        output.WriteRawTag(10);
        output.WriteMessage(Target);
      }
      if (HasAccountId) {
        output.WriteRawTag(42);
        output.WriteMessage(AccountId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasTarget) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Target);
      }
      if (HasAccountId) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AccountId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FriendNotification other) {
      if (other == null) {
        return;
      }
      if (other.HasTarget) {
        if (!HasTarget) {
          Target = new global::Bgs.Protocol.Friends.V1.Friend();
        }
        Target.MergeFrom(other.Target);
      }
      if (other.HasAccountId) {
        if (!HasAccountId) {
          AccountId = new global::Bgs.Protocol.EntityId();
        }
        AccountId.MergeFrom(other.AccountId);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (!HasTarget) {
              Target = new global::Bgs.Protocol.Friends.V1.Friend();
            }
            input.ReadMessage(Target);
            break;
          }
          case 42: {
            if (!HasAccountId) {
              AccountId = new global::Bgs.Protocol.EntityId();
            }
            input.ReadMessage(AccountId);
            break;
          }
        }
      }
    }

  }

  public sealed partial class UpdateFriendStateNotification : pb::IMessage<UpdateFriendStateNotification> {
    private static readonly pb::MessageParser<UpdateFriendStateNotification> _parser = new pb::MessageParser<UpdateFriendStateNotification>(() => new UpdateFriendStateNotification());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UpdateFriendStateNotification> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bgs.Protocol.Friends.V1.FriendsServiceReflection.Descriptor.MessageTypes[16]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateFriendStateNotification() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateFriendStateNotification(UpdateFriendStateNotification other) : this() {
      changedFriend_ = other.HasChangedFriend ? other.changedFriend_.Clone() : null;
      accountId_ = other.HasAccountId ? other.accountId_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateFriendStateNotification Clone() {
      return new UpdateFriendStateNotification(this);
    }

    /// <summary>Field number for the "changed_friend" field.</summary>
    public const int ChangedFriendFieldNumber = 1;
    private global::Bgs.Protocol.Friends.V1.Friend changedFriend_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bgs.Protocol.Friends.V1.Friend ChangedFriend {
      get { return changedFriend_; }
      set {
        changedFriend_ = value;
      }
    }
    /// <summary>Gets whether the changed_friend field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasChangedFriend {
      get { return changedFriend_ != null; }
    }
    /// <summary>Clears the value of the changed_friend field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearChangedFriend() {
      changedFriend_ = null;
    }

    /// <summary>Field number for the "account_id" field.</summary>
    public const int AccountIdFieldNumber = 5;
    private global::Bgs.Protocol.EntityId accountId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bgs.Protocol.EntityId AccountId {
      get { return accountId_; }
      set {
        accountId_ = value;
      }
    }
    /// <summary>Gets whether the account_id field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasAccountId {
      get { return accountId_ != null; }
    }
    /// <summary>Clears the value of the account_id field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearAccountId() {
      accountId_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UpdateFriendStateNotification);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UpdateFriendStateNotification other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(ChangedFriend, other.ChangedFriend)) return false;
      if (!object.Equals(AccountId, other.AccountId)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasChangedFriend) hash ^= ChangedFriend.GetHashCode();
      if (HasAccountId) hash ^= AccountId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasChangedFriend) {
        output.WriteRawTag(10);
        output.WriteMessage(ChangedFriend);
      }
      if (HasAccountId) {
        output.WriteRawTag(42);
        output.WriteMessage(AccountId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasChangedFriend) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ChangedFriend);
      }
      if (HasAccountId) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AccountId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UpdateFriendStateNotification other) {
      if (other == null) {
        return;
      }
      if (other.HasChangedFriend) {
        if (!HasChangedFriend) {
          ChangedFriend = new global::Bgs.Protocol.Friends.V1.Friend();
        }
        ChangedFriend.MergeFrom(other.ChangedFriend);
      }
      if (other.HasAccountId) {
        if (!HasAccountId) {
          AccountId = new global::Bgs.Protocol.EntityId();
        }
        AccountId.MergeFrom(other.AccountId);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (!HasChangedFriend) {
              ChangedFriend = new global::Bgs.Protocol.Friends.V1.Friend();
            }
            input.ReadMessage(ChangedFriend);
            break;
          }
          case 42: {
            if (!HasAccountId) {
              AccountId = new global::Bgs.Protocol.EntityId();
            }
            input.ReadMessage(AccountId);
            break;
          }
        }
      }
    }

  }

  public sealed partial class InvitationNotification : pb::IMessage<InvitationNotification> {
    private static readonly pb::MessageParser<InvitationNotification> _parser = new pb::MessageParser<InvitationNotification>(() => new InvitationNotification());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<InvitationNotification> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bgs.Protocol.Friends.V1.FriendsServiceReflection.Descriptor.MessageTypes[17]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InvitationNotification() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InvitationNotification(InvitationNotification other) : this() {
      _hasBits0 = other._hasBits0;
      invitation_ = other.HasInvitation ? other.invitation_.Clone() : null;
      reason_ = other.reason_;
      accountId_ = other.HasAccountId ? other.accountId_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InvitationNotification Clone() {
      return new InvitationNotification(this);
    }

    /// <summary>Field number for the "invitation" field.</summary>
    public const int InvitationFieldNumber = 1;
    private global::Bgs.Protocol.Friends.V1.ReceivedInvitation invitation_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bgs.Protocol.Friends.V1.ReceivedInvitation Invitation {
      get { return invitation_; }
      set {
        invitation_ = value;
      }
    }
    /// <summary>Gets whether the invitation field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasInvitation {
      get { return invitation_ != null; }
    }
    /// <summary>Clears the value of the invitation field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearInvitation() {
      invitation_ = null;
    }

    /// <summary>Field number for the "reason" field.</summary>
    public const int ReasonFieldNumber = 3;
    private readonly static uint ReasonDefaultValue = 0;

    private uint reason_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Reason {
      get { if ((_hasBits0 & 1) != 0) { return reason_; } else { return ReasonDefaultValue; } }
      set {
        _hasBits0 |= 1;
        reason_ = value;
      }
    }
    /// <summary>Gets whether the "reason" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasReason {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "reason" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearReason() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "account_id" field.</summary>
    public const int AccountIdFieldNumber = 5;
    private global::Bgs.Protocol.EntityId accountId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bgs.Protocol.EntityId AccountId {
      get { return accountId_; }
      set {
        accountId_ = value;
      }
    }
    /// <summary>Gets whether the account_id field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasAccountId {
      get { return accountId_ != null; }
    }
    /// <summary>Clears the value of the account_id field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearAccountId() {
      accountId_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as InvitationNotification);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(InvitationNotification other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Invitation, other.Invitation)) return false;
      if (Reason != other.Reason) return false;
      if (!object.Equals(AccountId, other.AccountId)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasInvitation) hash ^= Invitation.GetHashCode();
      if (HasReason) hash ^= Reason.GetHashCode();
      if (HasAccountId) hash ^= AccountId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasInvitation) {
        output.WriteRawTag(10);
        output.WriteMessage(Invitation);
      }
      if (HasReason) {
        output.WriteRawTag(24);
        output.WriteUInt32(Reason);
      }
      if (HasAccountId) {
        output.WriteRawTag(42);
        output.WriteMessage(AccountId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasInvitation) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Invitation);
      }
      if (HasReason) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Reason);
      }
      if (HasAccountId) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AccountId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(InvitationNotification other) {
      if (other == null) {
        return;
      }
      if (other.HasInvitation) {
        if (!HasInvitation) {
          Invitation = new global::Bgs.Protocol.Friends.V1.ReceivedInvitation();
        }
        Invitation.MergeFrom(other.Invitation);
      }
      if (other.HasReason) {
        Reason = other.Reason;
      }
      if (other.HasAccountId) {
        if (!HasAccountId) {
          AccountId = new global::Bgs.Protocol.EntityId();
        }
        AccountId.MergeFrom(other.AccountId);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (!HasInvitation) {
              Invitation = new global::Bgs.Protocol.Friends.V1.ReceivedInvitation();
            }
            input.ReadMessage(Invitation);
            break;
          }
          case 24: {
            Reason = input.ReadUInt32();
            break;
          }
          case 42: {
            if (!HasAccountId) {
              AccountId = new global::Bgs.Protocol.EntityId();
            }
            input.ReadMessage(AccountId);
            break;
          }
        }
      }
    }

  }

  public sealed partial class SentInvitationAddedNotification : pb::IMessage<SentInvitationAddedNotification> {
    private static readonly pb::MessageParser<SentInvitationAddedNotification> _parser = new pb::MessageParser<SentInvitationAddedNotification>(() => new SentInvitationAddedNotification());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SentInvitationAddedNotification> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bgs.Protocol.Friends.V1.FriendsServiceReflection.Descriptor.MessageTypes[18]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SentInvitationAddedNotification() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SentInvitationAddedNotification(SentInvitationAddedNotification other) : this() {
      accountId_ = other.HasAccountId ? other.accountId_.Clone() : null;
      invitation_ = other.HasInvitation ? other.invitation_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SentInvitationAddedNotification Clone() {
      return new SentInvitationAddedNotification(this);
    }

    /// <summary>Field number for the "account_id" field.</summary>
    public const int AccountIdFieldNumber = 1;
    private global::Bgs.Protocol.EntityId accountId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bgs.Protocol.EntityId AccountId {
      get { return accountId_; }
      set {
        accountId_ = value;
      }
    }
    /// <summary>Gets whether the account_id field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasAccountId {
      get { return accountId_ != null; }
    }
    /// <summary>Clears the value of the account_id field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearAccountId() {
      accountId_ = null;
    }

    /// <summary>Field number for the "invitation" field.</summary>
    public const int InvitationFieldNumber = 2;
    private global::Bgs.Protocol.Friends.V1.SentInvitation invitation_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bgs.Protocol.Friends.V1.SentInvitation Invitation {
      get { return invitation_; }
      set {
        invitation_ = value;
      }
    }
    /// <summary>Gets whether the invitation field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasInvitation {
      get { return invitation_ != null; }
    }
    /// <summary>Clears the value of the invitation field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearInvitation() {
      invitation_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SentInvitationAddedNotification);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SentInvitationAddedNotification other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(AccountId, other.AccountId)) return false;
      if (!object.Equals(Invitation, other.Invitation)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasAccountId) hash ^= AccountId.GetHashCode();
      if (HasInvitation) hash ^= Invitation.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasAccountId) {
        output.WriteRawTag(10);
        output.WriteMessage(AccountId);
      }
      if (HasInvitation) {
        output.WriteRawTag(18);
        output.WriteMessage(Invitation);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasAccountId) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AccountId);
      }
      if (HasInvitation) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Invitation);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SentInvitationAddedNotification other) {
      if (other == null) {
        return;
      }
      if (other.HasAccountId) {
        if (!HasAccountId) {
          AccountId = new global::Bgs.Protocol.EntityId();
        }
        AccountId.MergeFrom(other.AccountId);
      }
      if (other.HasInvitation) {
        if (!HasInvitation) {
          Invitation = new global::Bgs.Protocol.Friends.V1.SentInvitation();
        }
        Invitation.MergeFrom(other.Invitation);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (!HasAccountId) {
              AccountId = new global::Bgs.Protocol.EntityId();
            }
            input.ReadMessage(AccountId);
            break;
          }
          case 18: {
            if (!HasInvitation) {
              Invitation = new global::Bgs.Protocol.Friends.V1.SentInvitation();
            }
            input.ReadMessage(Invitation);
            break;
          }
        }
      }
    }

  }

  public sealed partial class SentInvitationRemovedNotification : pb::IMessage<SentInvitationRemovedNotification> {
    private static readonly pb::MessageParser<SentInvitationRemovedNotification> _parser = new pb::MessageParser<SentInvitationRemovedNotification>(() => new SentInvitationRemovedNotification());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SentInvitationRemovedNotification> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bgs.Protocol.Friends.V1.FriendsServiceReflection.Descriptor.MessageTypes[19]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SentInvitationRemovedNotification() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SentInvitationRemovedNotification(SentInvitationRemovedNotification other) : this() {
      _hasBits0 = other._hasBits0;
      accountId_ = other.HasAccountId ? other.accountId_.Clone() : null;
      invitationId_ = other.invitationId_;
      reason_ = other.reason_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SentInvitationRemovedNotification Clone() {
      return new SentInvitationRemovedNotification(this);
    }

    /// <summary>Field number for the "account_id" field.</summary>
    public const int AccountIdFieldNumber = 1;
    private global::Bgs.Protocol.EntityId accountId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bgs.Protocol.EntityId AccountId {
      get { return accountId_; }
      set {
        accountId_ = value;
      }
    }
    /// <summary>Gets whether the account_id field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasAccountId {
      get { return accountId_ != null; }
    }
    /// <summary>Clears the value of the account_id field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearAccountId() {
      accountId_ = null;
    }

    /// <summary>Field number for the "invitation_id" field.</summary>
    public const int InvitationIdFieldNumber = 2;
    private readonly static ulong InvitationIdDefaultValue = 0UL;

    private ulong invitationId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong InvitationId {
      get { if ((_hasBits0 & 1) != 0) { return invitationId_; } else { return InvitationIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        invitationId_ = value;
      }
    }
    /// <summary>Gets whether the "invitation_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasInvitationId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "invitation_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearInvitationId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "reason" field.</summary>
    public const int ReasonFieldNumber = 3;
    private readonly static uint ReasonDefaultValue = 0;

    private uint reason_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Reason {
      get { if ((_hasBits0 & 2) != 0) { return reason_; } else { return ReasonDefaultValue; } }
      set {
        _hasBits0 |= 2;
        reason_ = value;
      }
    }
    /// <summary>Gets whether the "reason" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasReason {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "reason" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearReason() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SentInvitationRemovedNotification);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SentInvitationRemovedNotification other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(AccountId, other.AccountId)) return false;
      if (InvitationId != other.InvitationId) return false;
      if (Reason != other.Reason) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasAccountId) hash ^= AccountId.GetHashCode();
      if (HasInvitationId) hash ^= InvitationId.GetHashCode();
      if (HasReason) hash ^= Reason.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasAccountId) {
        output.WriteRawTag(10);
        output.WriteMessage(AccountId);
      }
      if (HasInvitationId) {
        output.WriteRawTag(17);
        output.WriteFixed64(InvitationId);
      }
      if (HasReason) {
        output.WriteRawTag(24);
        output.WriteUInt32(Reason);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasAccountId) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AccountId);
      }
      if (HasInvitationId) {
        size += 1 + 8;
      }
      if (HasReason) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Reason);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SentInvitationRemovedNotification other) {
      if (other == null) {
        return;
      }
      if (other.HasAccountId) {
        if (!HasAccountId) {
          AccountId = new global::Bgs.Protocol.EntityId();
        }
        AccountId.MergeFrom(other.AccountId);
      }
      if (other.HasInvitationId) {
        InvitationId = other.InvitationId;
      }
      if (other.HasReason) {
        Reason = other.Reason;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (!HasAccountId) {
              AccountId = new global::Bgs.Protocol.EntityId();
            }
            input.ReadMessage(AccountId);
            break;
          }
          case 17: {
            InvitationId = input.ReadFixed64();
            break;
          }
          case 24: {
            Reason = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
