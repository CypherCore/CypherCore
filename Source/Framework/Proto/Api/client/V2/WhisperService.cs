// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: bgs/low/pb/client/api/client/v2/whisper_service.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Bgs.Protocol.Whisper.V2.Client {

  /// <summary>Holder for reflection information generated from bgs/low/pb/client/api/client/v2/whisper_service.proto</summary>
  public static partial class WhisperServiceReflection {

    #region Descriptor
    /// <summary>File descriptor for bgs/low/pb/client/api/client/v2/whisper_service.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static WhisperServiceReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CjViZ3MvbG93L3BiL2NsaWVudC9hcGkvY2xpZW50L3YyL3doaXNwZXJfc2Vy",
            "dmljZS5wcm90bxIeYmdzLnByb3RvY29sLndoaXNwZXIudjIuY2xpZW50GjZi",
            "Z3MvbG93L3BiL2NsaWVudC9hcGkvY29tbW9uL3YxL2V2ZW50X3ZpZXdfdHlw",
            "ZXMucHJvdG8aM2Jncy9sb3cvcGIvY2xpZW50L2FwaS9jb21tb24vdjEvbWVz",
            "c2FnZV90eXBlcy5wcm90bxozYmdzL2xvdy9wYi9jbGllbnQvYXBpL2NvbW1v",
            "bi92Mi93aGlzcGVyX3R5cGVzLnByb3RvGiFiZ3MvbG93L3BiL2NsaWVudC9y",
            "cGNfdHlwZXMucHJvdG8aN2Jncy9sb3cvcGIvY2xpZW50L2dsb2JhbF9leHRl",
            "bnNpb25zL2ZpZWxkX29wdGlvbnMucHJvdG8aOWJncy9sb3cvcGIvY2xpZW50",
            "L2dsb2JhbF9leHRlbnNpb25zL21lc3NhZ2Vfb3B0aW9ucy5wcm90bxo4Ymdz",
            "L2xvdy9wYi9jbGllbnQvZ2xvYmFsX2V4dGVuc2lvbnMvbWV0aG9kX29wdGlv",
            "bnMucHJvdG8aOWJncy9sb3cvcGIvY2xpZW50L2dsb2JhbF9leHRlbnNpb25z",
            "L3NlcnZpY2Vfb3B0aW9ucy5wcm90byISChBTdWJzY3JpYmVSZXF1ZXN0IkcK",
            "EVN1YnNjcmliZVJlc3BvbnNlEjIKBHZpZXcYASADKAsyJC5iZ3MucHJvdG9j",
            "b2wud2hpc3Blci52Mi5XaGlzcGVyVmlldyIUChJVbnN1YnNjcmliZVJlcXVl",
            "c3QiewoYR2V0V2hpc3Blckhpc3RvcnlSZXF1ZXN0EhkKEXRhcmdldF9hY2Nv",
            "dW50X2lkGAEgASgEEi4KB29wdGlvbnMYAiABKAsyHS5iZ3MucHJvdG9jb2wu",
            "R2V0RXZlbnRPcHRpb25zEhQKDGNvbnRpbnVhdGlvbhgEIAEoBCJlChlHZXRX",
            "aGlzcGVySGlzdG9yeVJlc3BvbnNlEjIKCHdoaXNwZXJzGAEgAygLMiAuYmdz",
            "LnByb3RvY29sLndoaXNwZXIudjIuV2hpc3BlchIUCgxjb250aW51YXRpb24Y",
            "AiABKAQibQoSU2VuZFdoaXNwZXJSZXF1ZXN0EhkKEXRhcmdldF9hY2NvdW50",
            "X2lkGAEgASgEEjwKB29wdGlvbnMYAiABKAsyKy5iZ3MucHJvdG9jb2wud2hp",
            "c3Blci52Mi5TZW5kV2hpc3Blck9wdGlvbnMiSAoTU2VuZFdoaXNwZXJSZXNw",
            "b25zZRIxCgd3aGlzcGVyGAEgASgLMiAuYmdzLnByb3RvY29sLndoaXNwZXIu",
            "djIuV2hpc3BlciJ2ChlTZXRUeXBpbmdJbmRpY2F0b3JSZXF1ZXN0EhkKEXRh",
            "cmdldF9hY2NvdW50X2lkGAEgASgEEj4KCWluZGljYXRvchgCIAEoDjIdLmJn",
            "cy5wcm90b2NvbC5UeXBpbmdJbmRpY2F0b3I6DFRZUElOR19TVEFSVCIzChZB",
            "ZHZhbmNlVmlld1RpbWVSZXF1ZXN0EhkKEXRhcmdldF9hY2NvdW50X2lkGAEg",
            "ASgEIjQKF0FkdmFuY2VDbGVhclRpbWVSZXF1ZXN0EhkKEXRhcmdldF9hY2Nv",
            "dW50X2lkGAEgASgEMsEHCg5XaGlzcGVyU2VydmljZRJ+CglTdWJzY3JpYmUS",
            "MC5iZ3MucHJvdG9jb2wud2hpc3Blci52Mi5jbGllbnQuU3Vic2NyaWJlUmVx",
            "dWVzdBoxLmJncy5wcm90b2NvbC53aGlzcGVyLnYyLmNsaWVudC5TdWJzY3Jp",
            "YmVSZXNwb25zZSIMgvkrAggBgvkrAhABEmUKC1Vuc3Vic2NyaWJlEjIuYmdz",
            "LnByb3RvY29sLndoaXNwZXIudjIuY2xpZW50LlVuc3Vic2NyaWJlUmVxdWVz",
            "dBoULmJncy5wcm90b2NvbC5Ob0RhdGEiDIL5KwIIAoL5KwIQARKWAQoRR2V0",
            "V2hpc3Blckhpc3RvcnkSOC5iZ3MucHJvdG9jb2wud2hpc3Blci52Mi5jbGll",
            "bnQuR2V0V2hpc3Blckhpc3RvcnlSZXF1ZXN0GjkuYmdzLnByb3RvY29sLndo",
            "aXNwZXIudjIuY2xpZW50LkdldFdoaXNwZXJIaXN0b3J5UmVzcG9uc2UiDIL5",
            "KwIIA4L5KwIQARKEAQoLU2VuZFdoaXNwZXISMi5iZ3MucHJvdG9jb2wud2hp",
            "c3Blci52Mi5jbGllbnQuU2VuZFdoaXNwZXJSZXF1ZXN0GjMuYmdzLnByb3Rv",
            "Y29sLndoaXNwZXIudjIuY2xpZW50LlNlbmRXaGlzcGVyUmVzcG9uc2UiDIL5",
            "KwIIBIL5KwIQARJtCg9BZHZhbmNlVmlld1RpbWUSNi5iZ3MucHJvdG9jb2wu",
            "d2hpc3Blci52Mi5jbGllbnQuQWR2YW5jZVZpZXdUaW1lUmVxdWVzdBoULmJn",
            "cy5wcm90b2NvbC5Ob0RhdGEiDIL5KwIIBYL5KwIQARJvChBBZHZhbmNlQ2xl",
            "YXJUaW1lEjcuYmdzLnByb3RvY29sLndoaXNwZXIudjIuY2xpZW50LkFkdmFu",
            "Y2VDbGVhclRpbWVSZXF1ZXN0GhQuYmdzLnByb3RvY29sLk5vRGF0YSIMgvkr",
            "AggGgvkrAhABEnMKElNldFR5cGluZ0luZGljYXRvchI5LmJncy5wcm90b2Nv",
            "bC53aGlzcGVyLnYyLmNsaWVudC5TZXRUeXBpbmdJbmRpY2F0b3JSZXF1ZXN0",
            "GhQuYmdzLnByb3RvY29sLk5vRGF0YSIMgvkrAggHgvkrAhABGlOC+SswCi5i",
            "bmV0LnByb3RvY29sLndoaXNwZXIudjIuY2xpZW50LldoaXNwZXJTZXJ2aWNl",
            "gvkrCSoHd2hpc3BlcoL5KwJIAYr5KwIQAYr5KwIYAUIDgAEA"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Bgs.Protocol.EventViewTypesReflection.Descriptor, global::Bgs.Protocol.MessageTypesReflection.Descriptor, global::Bgs.Protocol.Whisper.V2.WhisperTypesReflection.Descriptor, global::Bgs.Protocol.RpcTypesReflection.Descriptor, global::Bgs.Protocol.FieldOptionsReflection.Descriptor, global::Bgs.Protocol.MessageOptionsReflection.Descriptor, global::Bgs.Protocol.MethodOptionsReflection.Descriptor, global::Bgs.Protocol.ServiceOptionsReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Bgs.Protocol.Whisper.V2.Client.SubscribeRequest), global::Bgs.Protocol.Whisper.V2.Client.SubscribeRequest.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bgs.Protocol.Whisper.V2.Client.SubscribeResponse), global::Bgs.Protocol.Whisper.V2.Client.SubscribeResponse.Parser, new[]{ "View" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bgs.Protocol.Whisper.V2.Client.UnsubscribeRequest), global::Bgs.Protocol.Whisper.V2.Client.UnsubscribeRequest.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bgs.Protocol.Whisper.V2.Client.GetWhisperHistoryRequest), global::Bgs.Protocol.Whisper.V2.Client.GetWhisperHistoryRequest.Parser, new[]{ "TargetAccountId", "Options", "Continuation" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bgs.Protocol.Whisper.V2.Client.GetWhisperHistoryResponse), global::Bgs.Protocol.Whisper.V2.Client.GetWhisperHistoryResponse.Parser, new[]{ "Whispers", "Continuation" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bgs.Protocol.Whisper.V2.Client.SendWhisperRequest), global::Bgs.Protocol.Whisper.V2.Client.SendWhisperRequest.Parser, new[]{ "TargetAccountId", "Options" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bgs.Protocol.Whisper.V2.Client.SendWhisperResponse), global::Bgs.Protocol.Whisper.V2.Client.SendWhisperResponse.Parser, new[]{ "Whisper" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bgs.Protocol.Whisper.V2.Client.SetTypingIndicatorRequest), global::Bgs.Protocol.Whisper.V2.Client.SetTypingIndicatorRequest.Parser, new[]{ "TargetAccountId", "Indicator" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bgs.Protocol.Whisper.V2.Client.AdvanceViewTimeRequest), global::Bgs.Protocol.Whisper.V2.Client.AdvanceViewTimeRequest.Parser, new[]{ "TargetAccountId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bgs.Protocol.Whisper.V2.Client.AdvanceClearTimeRequest), global::Bgs.Protocol.Whisper.V2.Client.AdvanceClearTimeRequest.Parser, new[]{ "TargetAccountId" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class SubscribeRequest : pb::IMessage<SubscribeRequest> {
    private static readonly pb::MessageParser<SubscribeRequest> _parser = new pb::MessageParser<SubscribeRequest>(() => new SubscribeRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SubscribeRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bgs.Protocol.Whisper.V2.Client.WhisperServiceReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SubscribeRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SubscribeRequest(SubscribeRequest other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SubscribeRequest Clone() {
      return new SubscribeRequest(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SubscribeRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SubscribeRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SubscribeRequest other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class SubscribeResponse : pb::IMessage<SubscribeResponse> {
    private static readonly pb::MessageParser<SubscribeResponse> _parser = new pb::MessageParser<SubscribeResponse>(() => new SubscribeResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SubscribeResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bgs.Protocol.Whisper.V2.Client.WhisperServiceReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SubscribeResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SubscribeResponse(SubscribeResponse other) : this() {
      view_ = other.view_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SubscribeResponse Clone() {
      return new SubscribeResponse(this);
    }

    /// <summary>Field number for the "view" field.</summary>
    public const int ViewFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Bgs.Protocol.Whisper.V2.WhisperView> _repeated_view_codec
        = pb::FieldCodec.ForMessage(10, global::Bgs.Protocol.Whisper.V2.WhisperView.Parser);
    private readonly pbc::RepeatedField<global::Bgs.Protocol.Whisper.V2.WhisperView> view_ = new pbc::RepeatedField<global::Bgs.Protocol.Whisper.V2.WhisperView>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Bgs.Protocol.Whisper.V2.WhisperView> View {
      get { return view_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SubscribeResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SubscribeResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!view_.Equals(other.view_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= view_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      view_.WriteTo(output, _repeated_view_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += view_.CalculateSize(_repeated_view_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SubscribeResponse other) {
      if (other == null) {
        return;
      }
      view_.Add(other.view_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            view_.AddEntriesFrom(input, _repeated_view_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class UnsubscribeRequest : pb::IMessage<UnsubscribeRequest> {
    private static readonly pb::MessageParser<UnsubscribeRequest> _parser = new pb::MessageParser<UnsubscribeRequest>(() => new UnsubscribeRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UnsubscribeRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bgs.Protocol.Whisper.V2.Client.WhisperServiceReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UnsubscribeRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UnsubscribeRequest(UnsubscribeRequest other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UnsubscribeRequest Clone() {
      return new UnsubscribeRequest(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UnsubscribeRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UnsubscribeRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UnsubscribeRequest other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class GetWhisperHistoryRequest : pb::IMessage<GetWhisperHistoryRequest> {
    private static readonly pb::MessageParser<GetWhisperHistoryRequest> _parser = new pb::MessageParser<GetWhisperHistoryRequest>(() => new GetWhisperHistoryRequest());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetWhisperHistoryRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bgs.Protocol.Whisper.V2.Client.WhisperServiceReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetWhisperHistoryRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetWhisperHistoryRequest(GetWhisperHistoryRequest other) : this() {
      _hasBits0 = other._hasBits0;
      targetAccountId_ = other.targetAccountId_;
      options_ = other.HasOptions ? other.options_.Clone() : null;
      continuation_ = other.continuation_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetWhisperHistoryRequest Clone() {
      return new GetWhisperHistoryRequest(this);
    }

    /// <summary>Field number for the "target_account_id" field.</summary>
    public const int TargetAccountIdFieldNumber = 1;
    private readonly static ulong TargetAccountIdDefaultValue = 0UL;

    private ulong targetAccountId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong TargetAccountId {
      get { if ((_hasBits0 & 1) != 0) { return targetAccountId_; } else { return TargetAccountIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        targetAccountId_ = value;
      }
    }
    /// <summary>Gets whether the "target_account_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasTargetAccountId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "target_account_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearTargetAccountId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "options" field.</summary>
    public const int OptionsFieldNumber = 2;
    private global::Bgs.Protocol.GetEventOptions options_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bgs.Protocol.GetEventOptions Options {
      get { return options_; }
      set {
        options_ = value;
      }
    }
    /// <summary>Gets whether the options field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasOptions {
      get { return options_ != null; }
    }
    /// <summary>Clears the value of the options field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearOptions() {
      options_ = null;
    }

    /// <summary>Field number for the "continuation" field.</summary>
    public const int ContinuationFieldNumber = 4;
    private readonly static ulong ContinuationDefaultValue = 0UL;

    private ulong continuation_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong Continuation {
      get { if ((_hasBits0 & 2) != 0) { return continuation_; } else { return ContinuationDefaultValue; } }
      set {
        _hasBits0 |= 2;
        continuation_ = value;
      }
    }
    /// <summary>Gets whether the "continuation" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasContinuation {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "continuation" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearContinuation() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetWhisperHistoryRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetWhisperHistoryRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TargetAccountId != other.TargetAccountId) return false;
      if (!object.Equals(Options, other.Options)) return false;
      if (Continuation != other.Continuation) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasTargetAccountId) hash ^= TargetAccountId.GetHashCode();
      if (HasOptions) hash ^= Options.GetHashCode();
      if (HasContinuation) hash ^= Continuation.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasTargetAccountId) {
        output.WriteRawTag(8);
        output.WriteUInt64(TargetAccountId);
      }
      if (HasOptions) {
        output.WriteRawTag(18);
        output.WriteMessage(Options);
      }
      if (HasContinuation) {
        output.WriteRawTag(32);
        output.WriteUInt64(Continuation);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasTargetAccountId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(TargetAccountId);
      }
      if (HasOptions) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Options);
      }
      if (HasContinuation) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Continuation);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetWhisperHistoryRequest other) {
      if (other == null) {
        return;
      }
      if (other.HasTargetAccountId) {
        TargetAccountId = other.TargetAccountId;
      }
      if (other.HasOptions) {
        if (!HasOptions) {
          Options = new global::Bgs.Protocol.GetEventOptions();
        }
        Options.MergeFrom(other.Options);
      }
      if (other.HasContinuation) {
        Continuation = other.Continuation;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            TargetAccountId = input.ReadUInt64();
            break;
          }
          case 18: {
            if (!HasOptions) {
              Options = new global::Bgs.Protocol.GetEventOptions();
            }
            input.ReadMessage(Options);
            break;
          }
          case 32: {
            Continuation = input.ReadUInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetWhisperHistoryResponse : pb::IMessage<GetWhisperHistoryResponse> {
    private static readonly pb::MessageParser<GetWhisperHistoryResponse> _parser = new pb::MessageParser<GetWhisperHistoryResponse>(() => new GetWhisperHistoryResponse());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetWhisperHistoryResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bgs.Protocol.Whisper.V2.Client.WhisperServiceReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetWhisperHistoryResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetWhisperHistoryResponse(GetWhisperHistoryResponse other) : this() {
      _hasBits0 = other._hasBits0;
      whispers_ = other.whispers_.Clone();
      continuation_ = other.continuation_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetWhisperHistoryResponse Clone() {
      return new GetWhisperHistoryResponse(this);
    }

    /// <summary>Field number for the "whispers" field.</summary>
    public const int WhispersFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Bgs.Protocol.Whisper.V2.Whisper> _repeated_whispers_codec
        = pb::FieldCodec.ForMessage(10, global::Bgs.Protocol.Whisper.V2.Whisper.Parser);
    private readonly pbc::RepeatedField<global::Bgs.Protocol.Whisper.V2.Whisper> whispers_ = new pbc::RepeatedField<global::Bgs.Protocol.Whisper.V2.Whisper>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Bgs.Protocol.Whisper.V2.Whisper> Whispers {
      get { return whispers_; }
    }

    /// <summary>Field number for the "continuation" field.</summary>
    public const int ContinuationFieldNumber = 2;
    private readonly static ulong ContinuationDefaultValue = 0UL;

    private ulong continuation_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong Continuation {
      get { if ((_hasBits0 & 1) != 0) { return continuation_; } else { return ContinuationDefaultValue; } }
      set {
        _hasBits0 |= 1;
        continuation_ = value;
      }
    }
    /// <summary>Gets whether the "continuation" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasContinuation {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "continuation" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearContinuation() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetWhisperHistoryResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetWhisperHistoryResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!whispers_.Equals(other.whispers_)) return false;
      if (Continuation != other.Continuation) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= whispers_.GetHashCode();
      if (HasContinuation) hash ^= Continuation.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      whispers_.WriteTo(output, _repeated_whispers_codec);
      if (HasContinuation) {
        output.WriteRawTag(16);
        output.WriteUInt64(Continuation);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += whispers_.CalculateSize(_repeated_whispers_codec);
      if (HasContinuation) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Continuation);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetWhisperHistoryResponse other) {
      if (other == null) {
        return;
      }
      whispers_.Add(other.whispers_);
      if (other.HasContinuation) {
        Continuation = other.Continuation;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            whispers_.AddEntriesFrom(input, _repeated_whispers_codec);
            break;
          }
          case 16: {
            Continuation = input.ReadUInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class SendWhisperRequest : pb::IMessage<SendWhisperRequest> {
    private static readonly pb::MessageParser<SendWhisperRequest> _parser = new pb::MessageParser<SendWhisperRequest>(() => new SendWhisperRequest());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SendWhisperRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bgs.Protocol.Whisper.V2.Client.WhisperServiceReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SendWhisperRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SendWhisperRequest(SendWhisperRequest other) : this() {
      _hasBits0 = other._hasBits0;
      targetAccountId_ = other.targetAccountId_;
      options_ = other.HasOptions ? other.options_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SendWhisperRequest Clone() {
      return new SendWhisperRequest(this);
    }

    /// <summary>Field number for the "target_account_id" field.</summary>
    public const int TargetAccountIdFieldNumber = 1;
    private readonly static ulong TargetAccountIdDefaultValue = 0UL;

    private ulong targetAccountId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong TargetAccountId {
      get { if ((_hasBits0 & 1) != 0) { return targetAccountId_; } else { return TargetAccountIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        targetAccountId_ = value;
      }
    }
    /// <summary>Gets whether the "target_account_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasTargetAccountId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "target_account_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearTargetAccountId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "options" field.</summary>
    public const int OptionsFieldNumber = 2;
    private global::Bgs.Protocol.Whisper.V2.SendWhisperOptions options_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bgs.Protocol.Whisper.V2.SendWhisperOptions Options {
      get { return options_; }
      set {
        options_ = value;
      }
    }
    /// <summary>Gets whether the options field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasOptions {
      get { return options_ != null; }
    }
    /// <summary>Clears the value of the options field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearOptions() {
      options_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SendWhisperRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SendWhisperRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TargetAccountId != other.TargetAccountId) return false;
      if (!object.Equals(Options, other.Options)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasTargetAccountId) hash ^= TargetAccountId.GetHashCode();
      if (HasOptions) hash ^= Options.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasTargetAccountId) {
        output.WriteRawTag(8);
        output.WriteUInt64(TargetAccountId);
      }
      if (HasOptions) {
        output.WriteRawTag(18);
        output.WriteMessage(Options);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasTargetAccountId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(TargetAccountId);
      }
      if (HasOptions) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Options);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SendWhisperRequest other) {
      if (other == null) {
        return;
      }
      if (other.HasTargetAccountId) {
        TargetAccountId = other.TargetAccountId;
      }
      if (other.HasOptions) {
        if (!HasOptions) {
          Options = new global::Bgs.Protocol.Whisper.V2.SendWhisperOptions();
        }
        Options.MergeFrom(other.Options);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            TargetAccountId = input.ReadUInt64();
            break;
          }
          case 18: {
            if (!HasOptions) {
              Options = new global::Bgs.Protocol.Whisper.V2.SendWhisperOptions();
            }
            input.ReadMessage(Options);
            break;
          }
        }
      }
    }

  }

  public sealed partial class SendWhisperResponse : pb::IMessage<SendWhisperResponse> {
    private static readonly pb::MessageParser<SendWhisperResponse> _parser = new pb::MessageParser<SendWhisperResponse>(() => new SendWhisperResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SendWhisperResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bgs.Protocol.Whisper.V2.Client.WhisperServiceReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SendWhisperResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SendWhisperResponse(SendWhisperResponse other) : this() {
      whisper_ = other.HasWhisper ? other.whisper_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SendWhisperResponse Clone() {
      return new SendWhisperResponse(this);
    }

    /// <summary>Field number for the "whisper" field.</summary>
    public const int WhisperFieldNumber = 1;
    private global::Bgs.Protocol.Whisper.V2.Whisper whisper_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bgs.Protocol.Whisper.V2.Whisper Whisper {
      get { return whisper_; }
      set {
        whisper_ = value;
      }
    }
    /// <summary>Gets whether the whisper field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasWhisper {
      get { return whisper_ != null; }
    }
    /// <summary>Clears the value of the whisper field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearWhisper() {
      whisper_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SendWhisperResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SendWhisperResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Whisper, other.Whisper)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasWhisper) hash ^= Whisper.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasWhisper) {
        output.WriteRawTag(10);
        output.WriteMessage(Whisper);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasWhisper) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Whisper);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SendWhisperResponse other) {
      if (other == null) {
        return;
      }
      if (other.HasWhisper) {
        if (!HasWhisper) {
          Whisper = new global::Bgs.Protocol.Whisper.V2.Whisper();
        }
        Whisper.MergeFrom(other.Whisper);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (!HasWhisper) {
              Whisper = new global::Bgs.Protocol.Whisper.V2.Whisper();
            }
            input.ReadMessage(Whisper);
            break;
          }
        }
      }
    }

  }

  public sealed partial class SetTypingIndicatorRequest : pb::IMessage<SetTypingIndicatorRequest> {
    private static readonly pb::MessageParser<SetTypingIndicatorRequest> _parser = new pb::MessageParser<SetTypingIndicatorRequest>(() => new SetTypingIndicatorRequest());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SetTypingIndicatorRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bgs.Protocol.Whisper.V2.Client.WhisperServiceReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetTypingIndicatorRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetTypingIndicatorRequest(SetTypingIndicatorRequest other) : this() {
      _hasBits0 = other._hasBits0;
      targetAccountId_ = other.targetAccountId_;
      indicator_ = other.indicator_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetTypingIndicatorRequest Clone() {
      return new SetTypingIndicatorRequest(this);
    }

    /// <summary>Field number for the "target_account_id" field.</summary>
    public const int TargetAccountIdFieldNumber = 1;
    private readonly static ulong TargetAccountIdDefaultValue = 0UL;

    private ulong targetAccountId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong TargetAccountId {
      get { if ((_hasBits0 & 1) != 0) { return targetAccountId_; } else { return TargetAccountIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        targetAccountId_ = value;
      }
    }
    /// <summary>Gets whether the "target_account_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasTargetAccountId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "target_account_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearTargetAccountId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "indicator" field.</summary>
    public const int IndicatorFieldNumber = 2;
    private readonly static global::Bgs.Protocol.TypingIndicator IndicatorDefaultValue = global::Bgs.Protocol.TypingIndicator.TypingStart;

    private global::Bgs.Protocol.TypingIndicator indicator_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bgs.Protocol.TypingIndicator Indicator {
      get { if ((_hasBits0 & 2) != 0) { return indicator_; } else { return IndicatorDefaultValue; } }
      set {
        _hasBits0 |= 2;
        indicator_ = value;
      }
    }
    /// <summary>Gets whether the "indicator" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasIndicator {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "indicator" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearIndicator() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SetTypingIndicatorRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SetTypingIndicatorRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TargetAccountId != other.TargetAccountId) return false;
      if (Indicator != other.Indicator) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasTargetAccountId) hash ^= TargetAccountId.GetHashCode();
      if (HasIndicator) hash ^= Indicator.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasTargetAccountId) {
        output.WriteRawTag(8);
        output.WriteUInt64(TargetAccountId);
      }
      if (HasIndicator) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Indicator);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasTargetAccountId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(TargetAccountId);
      }
      if (HasIndicator) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Indicator);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SetTypingIndicatorRequest other) {
      if (other == null) {
        return;
      }
      if (other.HasTargetAccountId) {
        TargetAccountId = other.TargetAccountId;
      }
      if (other.HasIndicator) {
        Indicator = other.Indicator;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            TargetAccountId = input.ReadUInt64();
            break;
          }
          case 16: {
            Indicator = (global::Bgs.Protocol.TypingIndicator) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  public sealed partial class AdvanceViewTimeRequest : pb::IMessage<AdvanceViewTimeRequest> {
    private static readonly pb::MessageParser<AdvanceViewTimeRequest> _parser = new pb::MessageParser<AdvanceViewTimeRequest>(() => new AdvanceViewTimeRequest());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AdvanceViewTimeRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bgs.Protocol.Whisper.V2.Client.WhisperServiceReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AdvanceViewTimeRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AdvanceViewTimeRequest(AdvanceViewTimeRequest other) : this() {
      _hasBits0 = other._hasBits0;
      targetAccountId_ = other.targetAccountId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AdvanceViewTimeRequest Clone() {
      return new AdvanceViewTimeRequest(this);
    }

    /// <summary>Field number for the "target_account_id" field.</summary>
    public const int TargetAccountIdFieldNumber = 1;
    private readonly static ulong TargetAccountIdDefaultValue = 0UL;

    private ulong targetAccountId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong TargetAccountId {
      get { if ((_hasBits0 & 1) != 0) { return targetAccountId_; } else { return TargetAccountIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        targetAccountId_ = value;
      }
    }
    /// <summary>Gets whether the "target_account_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasTargetAccountId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "target_account_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearTargetAccountId() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AdvanceViewTimeRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AdvanceViewTimeRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TargetAccountId != other.TargetAccountId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasTargetAccountId) hash ^= TargetAccountId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasTargetAccountId) {
        output.WriteRawTag(8);
        output.WriteUInt64(TargetAccountId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasTargetAccountId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(TargetAccountId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AdvanceViewTimeRequest other) {
      if (other == null) {
        return;
      }
      if (other.HasTargetAccountId) {
        TargetAccountId = other.TargetAccountId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            TargetAccountId = input.ReadUInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class AdvanceClearTimeRequest : pb::IMessage<AdvanceClearTimeRequest> {
    private static readonly pb::MessageParser<AdvanceClearTimeRequest> _parser = new pb::MessageParser<AdvanceClearTimeRequest>(() => new AdvanceClearTimeRequest());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AdvanceClearTimeRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bgs.Protocol.Whisper.V2.Client.WhisperServiceReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AdvanceClearTimeRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AdvanceClearTimeRequest(AdvanceClearTimeRequest other) : this() {
      _hasBits0 = other._hasBits0;
      targetAccountId_ = other.targetAccountId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AdvanceClearTimeRequest Clone() {
      return new AdvanceClearTimeRequest(this);
    }

    /// <summary>Field number for the "target_account_id" field.</summary>
    public const int TargetAccountIdFieldNumber = 1;
    private readonly static ulong TargetAccountIdDefaultValue = 0UL;

    private ulong targetAccountId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong TargetAccountId {
      get { if ((_hasBits0 & 1) != 0) { return targetAccountId_; } else { return TargetAccountIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        targetAccountId_ = value;
      }
    }
    /// <summary>Gets whether the "target_account_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasTargetAccountId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "target_account_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearTargetAccountId() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AdvanceClearTimeRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AdvanceClearTimeRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TargetAccountId != other.TargetAccountId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasTargetAccountId) hash ^= TargetAccountId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasTargetAccountId) {
        output.WriteRawTag(8);
        output.WriteUInt64(TargetAccountId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasTargetAccountId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(TargetAccountId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AdvanceClearTimeRequest other) {
      if (other == null) {
        return;
      }
      if (other.HasTargetAccountId) {
        TargetAccountId = other.TargetAccountId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            TargetAccountId = input.ReadUInt64();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
