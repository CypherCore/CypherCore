// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: bgs/low/pb/client/api/client/v2/notification_types.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Bgs.Protocol.Notification.V2.Client {

  /// <summary>Holder for reflection information generated from bgs/low/pb/client/api/client/v2/notification_types.proto</summary>
  public static partial class NotificationTypesReflection {

    #region Descriptor
    /// <summary>File descriptor for bgs/low/pb/client/api/client/v2/notification_types.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static NotificationTypesReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CjhiZ3MvbG93L3BiL2NsaWVudC9hcGkvY2xpZW50L3YyL25vdGlmaWNhdGlv",
            "bl90eXBlcy5wcm90bxIjYmdzLnByb3RvY29sLm5vdGlmaWNhdGlvbi52Mi5j",
            "bGllbnQaJWJncy9sb3cvcGIvY2xpZW50L2FjY291bnRfdHlwZXMucHJvdG8a",
            "IWJncy9sb3cvcGIvY2xpZW50L3JwY190eXBlcy5wcm90bxo1YmdzL2xvdy9w",
            "Yi9jbGllbnQvYXBpL2NvbW1vbi92Mi9hdHRyaWJ1dGVfdHlwZXMucHJvdG8a",
            "OWJncy9sb3cvcGIvY2xpZW50L2FwaS9jb21tb24vdjIvZ2FtZV9hY2NvdW50",
            "X2hhbmRsZS5wcm90bxo3YmdzL2xvdy9wYi9jbGllbnQvZ2xvYmFsX2V4dGVu",
            "c2lvbnMvZmllbGRfb3B0aW9ucy5wcm90bxo5YmdzL2xvdy9wYi9jbGllbnQv",
            "Z2xvYmFsX2V4dGVuc2lvbnMvbWVzc2FnZV9vcHRpb25zLnByb3RvGjhiZ3Mv",
            "bG93L3BiL2NsaWVudC9nbG9iYWxfZXh0ZW5zaW9ucy9tZXRob2Rfb3B0aW9u",
            "cy5wcm90bxo5YmdzL2xvdy9wYi9jbGllbnQvZ2xvYmFsX2V4dGVuc2lvbnMv",
            "c2VydmljZV9vcHRpb25zLnByb3RvIi8KD1VzZXJEZXNjcmlwdGlvbhIcCgph",
            "Y2NvdW50X2lkGAEgASgEQgiK+SsEEgIQACK7AQoGRmlsdGVyEhIKCHRpdGxl",
            "X2lkGAEgASgNSAASUQoRZGVwcmVjYXRlZF9oYW5kbGUYAiABKAsyKi5iZ3Mu",
            "cHJvdG9jb2wuYWNjb3VudC52MS5HYW1lQWNjb3VudEhhbmRsZUIIGAGS+SsC",
            "IAFIABJCCgxnYW1lX2FjY291bnQYAyABKAsyKi5iZ3MucHJvdG9jb2wuYWNj",
            "b3VudC52Mi5HYW1lQWNjb3VudEhhbmRsZUgAQgYKBHR5cGUizwEKF1NlbmRO",
            "b3RpZmljYXRpb25PcHRpb25zEiMKBHR5cGUYASABKAlCFYr5KwYiBAoCCAGK",
            "+SsHIgUKAxCABBIjChF0YXJnZXRfYWNjb3VudF9pZBgCIAEoBEIIivkrBBIC",
            "EAASOwoGZmlsdGVyGAMgASgLMisuYmdzLnByb3RvY29sLm5vdGlmaWNhdGlv",
            "bi52Mi5jbGllbnQuRmlsdGVyEi0KCWF0dHJpYnV0ZRgEIAMoCzIaLmJncy5w",
            "cm90b2NvbC52Mi5BdHRyaWJ1dGUiiAIKDE5vdGlmaWNhdGlvbhIjCgR0eXBl",
            "GAEgASgJQhWK+SsGIgQKAggBivkrByIFCgMQgAQSRAoGc2VuZGVyGAIgASgL",
            "MjQuYmdzLnByb3RvY29sLm5vdGlmaWNhdGlvbi52Mi5jbGllbnQuVXNlckRl",
            "c2NyaXB0aW9uEkQKBnRhcmdldBgDIAEoCzI0LmJncy5wcm90b2NvbC5ub3Rp",
            "ZmljYXRpb24udjIuY2xpZW50LlVzZXJEZXNjcmlwdGlvbhItCglhdHRyaWJ1",
            "dGUYBCADKAsyGi5iZ3MucHJvdG9jb2wudjIuQXR0cmlidXRlEhgKEGNyZWF0",
            "aW9uX3RpbWVfbXMYBSABKAQ="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Bgs.Protocol.Account.V1.AccountTypesReflection.Descriptor, global::Bgs.Protocol.RpcTypesReflection.Descriptor, global::Bgs.Protocol.V2.AttributeTypesReflection.Descriptor, global::Bgs.Protocol.Account.V2.GameAccountHandleReflection.Descriptor, global::Bgs.Protocol.FieldOptionsReflection.Descriptor, global::Bgs.Protocol.MessageOptionsReflection.Descriptor, global::Bgs.Protocol.MethodOptionsReflection.Descriptor, global::Bgs.Protocol.ServiceOptionsReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Bgs.Protocol.Notification.V2.Client.UserDescription), global::Bgs.Protocol.Notification.V2.Client.UserDescription.Parser, new[]{ "AccountId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bgs.Protocol.Notification.V2.Client.Filter), global::Bgs.Protocol.Notification.V2.Client.Filter.Parser, new[]{ "TitleId", "DeprecatedHandle", "GameAccount" }, new[]{ "Type" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bgs.Protocol.Notification.V2.Client.SendNotificationOptions), global::Bgs.Protocol.Notification.V2.Client.SendNotificationOptions.Parser, new[]{ "Type", "TargetAccountId", "Filter", "Attribute" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bgs.Protocol.Notification.V2.Client.Notification), global::Bgs.Protocol.Notification.V2.Client.Notification.Parser, new[]{ "Type", "Sender", "Target", "Attribute", "CreationTimeMs" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class UserDescription : pb::IMessage<UserDescription> {
    private static readonly pb::MessageParser<UserDescription> _parser = new pb::MessageParser<UserDescription>(() => new UserDescription());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UserDescription> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bgs.Protocol.Notification.V2.Client.NotificationTypesReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserDescription() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserDescription(UserDescription other) : this() {
      _hasBits0 = other._hasBits0;
      accountId_ = other.accountId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserDescription Clone() {
      return new UserDescription(this);
    }

    /// <summary>Field number for the "account_id" field.</summary>
    public const int AccountIdFieldNumber = 1;
    private readonly static ulong AccountIdDefaultValue = 0UL;

    private ulong accountId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong AccountId {
      get { if ((_hasBits0 & 1) != 0) { return accountId_; } else { return AccountIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        accountId_ = value;
      }
    }
    /// <summary>Gets whether the "account_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasAccountId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "account_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearAccountId() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UserDescription);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UserDescription other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AccountId != other.AccountId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasAccountId) hash ^= AccountId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasAccountId) {
        output.WriteRawTag(8);
        output.WriteUInt64(AccountId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasAccountId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(AccountId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UserDescription other) {
      if (other == null) {
        return;
      }
      if (other.HasAccountId) {
        AccountId = other.AccountId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            AccountId = input.ReadUInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Filter : pb::IMessage<Filter> {
    private static readonly pb::MessageParser<Filter> _parser = new pb::MessageParser<Filter>(() => new Filter());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Filter> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bgs.Protocol.Notification.V2.Client.NotificationTypesReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Filter() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Filter(Filter other) : this() {
      _hasBits0 = other._hasBits0;
      switch (other.TypeCase) {
        case TypeOneofCase.TitleId:
          TitleId = other.TitleId;
          break;
        case TypeOneofCase.DeprecatedHandle:
          DeprecatedHandle = other.DeprecatedHandle.Clone();
          break;
        case TypeOneofCase.GameAccount:
          GameAccount = other.GameAccount.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Filter Clone() {
      return new Filter(this);
    }

    /// <summary>Field number for the "title_id" field.</summary>
    public const int TitleIdFieldNumber = 1;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint TitleId {
      get { return HasTitleId ? (uint) type_ : 0; }
      set {
        type_ = value;
        typeCase_ = TypeOneofCase.TitleId;
      }
    }
    /// <summary>Gets whether the "title_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasTitleId {
      get { return typeCase_ == TypeOneofCase.TitleId; }
    }
    /// <summary> Clears the value of the oneof if it's currently set to "title_id" </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearTitleId() {
      if (HasTitleId) {
        ClearType();
      }
    }

    /// <summary>Field number for the "deprecated_handle" field.</summary>
    public const int DeprecatedHandleFieldNumber = 2;
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bgs.Protocol.Account.V1.GameAccountHandle DeprecatedHandle {
      get { return HasDeprecatedHandle ? (global::Bgs.Protocol.Account.V1.GameAccountHandle) type_ : null; }
      set {
        type_ = value;
        typeCase_ = value == null ? TypeOneofCase.None : TypeOneofCase.DeprecatedHandle;
      }
    }
    /// <summary>Gets whether the "deprecated_handle" field is set</summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasDeprecatedHandle {
      get { return typeCase_ == TypeOneofCase.DeprecatedHandle; }
    }
    /// <summary> Clears the value of the oneof if it's currently set to "deprecated_handle" </summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearDeprecatedHandle() {
      if (HasDeprecatedHandle) {
        ClearType();
      }
    }

    /// <summary>Field number for the "game_account" field.</summary>
    public const int GameAccountFieldNumber = 3;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bgs.Protocol.Account.V2.GameAccountHandle GameAccount {
      get { return HasGameAccount ? (global::Bgs.Protocol.Account.V2.GameAccountHandle) type_ : null; }
      set {
        type_ = value;
        typeCase_ = value == null ? TypeOneofCase.None : TypeOneofCase.GameAccount;
      }
    }
    /// <summary>Gets whether the "game_account" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasGameAccount {
      get { return typeCase_ == TypeOneofCase.GameAccount; }
    }
    /// <summary> Clears the value of the oneof if it's currently set to "game_account" </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearGameAccount() {
      if (HasGameAccount) {
        ClearType();
      }
    }

    private object type_;
    /// <summary>Enum of possible cases for the "type" oneof.</summary>
    public enum TypeOneofCase {
      None = 0,
      TitleId = 1,
      DeprecatedHandle = 2,
      GameAccount = 3,
    }
    private TypeOneofCase typeCase_ = TypeOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TypeOneofCase TypeCase {
      get { return typeCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearType() {
      typeCase_ = TypeOneofCase.None;
      type_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Filter);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Filter other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TitleId != other.TitleId) return false;
      if (!object.Equals(DeprecatedHandle, other.DeprecatedHandle)) return false;
      if (!object.Equals(GameAccount, other.GameAccount)) return false;
      if (TypeCase != other.TypeCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasTitleId) hash ^= TitleId.GetHashCode();
      if (HasDeprecatedHandle) hash ^= DeprecatedHandle.GetHashCode();
      if (HasGameAccount) hash ^= GameAccount.GetHashCode();
      hash ^= (int) typeCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasTitleId) {
        output.WriteRawTag(8);
        output.WriteUInt32(TitleId);
      }
      if (HasDeprecatedHandle) {
        output.WriteRawTag(18);
        output.WriteMessage(DeprecatedHandle);
      }
      if (HasGameAccount) {
        output.WriteRawTag(26);
        output.WriteMessage(GameAccount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasTitleId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(TitleId);
      }
      if (HasDeprecatedHandle) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DeprecatedHandle);
      }
      if (HasGameAccount) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(GameAccount);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Filter other) {
      if (other == null) {
        return;
      }
      switch (other.TypeCase) {
        case TypeOneofCase.TitleId:
          TitleId = other.TitleId;
          break;
        case TypeOneofCase.DeprecatedHandle:
          if (DeprecatedHandle == null) {
            DeprecatedHandle = new global::Bgs.Protocol.Account.V1.GameAccountHandle();
          }
          DeprecatedHandle.MergeFrom(other.DeprecatedHandle);
          break;
        case TypeOneofCase.GameAccount:
          if (GameAccount == null) {
            GameAccount = new global::Bgs.Protocol.Account.V2.GameAccountHandle();
          }
          GameAccount.MergeFrom(other.GameAccount);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            TitleId = input.ReadUInt32();
            break;
          }
          case 18: {
            global::Bgs.Protocol.Account.V1.GameAccountHandle subBuilder = new global::Bgs.Protocol.Account.V1.GameAccountHandle();
            if (HasDeprecatedHandle) {
              subBuilder.MergeFrom(DeprecatedHandle);
            }
            input.ReadMessage(subBuilder);
            DeprecatedHandle = subBuilder;
            break;
          }
          case 26: {
            global::Bgs.Protocol.Account.V2.GameAccountHandle subBuilder = new global::Bgs.Protocol.Account.V2.GameAccountHandle();
            if (HasGameAccount) {
              subBuilder.MergeFrom(GameAccount);
            }
            input.ReadMessage(subBuilder);
            GameAccount = subBuilder;
            break;
          }
        }
      }
    }

  }

  public sealed partial class SendNotificationOptions : pb::IMessage<SendNotificationOptions> {
    private static readonly pb::MessageParser<SendNotificationOptions> _parser = new pb::MessageParser<SendNotificationOptions>(() => new SendNotificationOptions());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SendNotificationOptions> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bgs.Protocol.Notification.V2.Client.NotificationTypesReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SendNotificationOptions() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SendNotificationOptions(SendNotificationOptions other) : this() {
      _hasBits0 = other._hasBits0;
      type_ = other.type_;
      targetAccountId_ = other.targetAccountId_;
      filter_ = other.HasFilter ? other.filter_.Clone() : null;
      attribute_ = other.attribute_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SendNotificationOptions Clone() {
      return new SendNotificationOptions(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    private readonly static string TypeDefaultValue = "";

    private string type_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Type {
      get { return type_ ?? TypeDefaultValue; }
      set {
        type_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasType {
      get { return type_ != null; }
    }
    /// <summary>Clears the value of the "type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearType() {
      type_ = null;
    }

    /// <summary>Field number for the "target_account_id" field.</summary>
    public const int TargetAccountIdFieldNumber = 2;
    private readonly static ulong TargetAccountIdDefaultValue = 0UL;

    private ulong targetAccountId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong TargetAccountId {
      get { if ((_hasBits0 & 1) != 0) { return targetAccountId_; } else { return TargetAccountIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        targetAccountId_ = value;
      }
    }
    /// <summary>Gets whether the "target_account_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasTargetAccountId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "target_account_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearTargetAccountId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "filter" field.</summary>
    public const int FilterFieldNumber = 3;
    private global::Bgs.Protocol.Notification.V2.Client.Filter filter_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bgs.Protocol.Notification.V2.Client.Filter Filter {
      get { return filter_; }
      set {
        filter_ = value;
      }
    }
    /// <summary>Gets whether the filter field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasFilter {
      get { return filter_ != null; }
    }
    /// <summary>Clears the value of the filter field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearFilter() {
      filter_ = null;
    }

    /// <summary>Field number for the "attribute" field.</summary>
    public const int AttributeFieldNumber = 4;
    private static readonly pb::FieldCodec<global::Bgs.Protocol.V2.Attribute> _repeated_attribute_codec
        = pb::FieldCodec.ForMessage(34, global::Bgs.Protocol.V2.Attribute.Parser);
    private readonly pbc::RepeatedField<global::Bgs.Protocol.V2.Attribute> attribute_ = new pbc::RepeatedField<global::Bgs.Protocol.V2.Attribute>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Bgs.Protocol.V2.Attribute> Attribute {
      get { return attribute_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SendNotificationOptions);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SendNotificationOptions other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (TargetAccountId != other.TargetAccountId) return false;
      if (!object.Equals(Filter, other.Filter)) return false;
      if(!attribute_.Equals(other.attribute_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasType) hash ^= Type.GetHashCode();
      if (HasTargetAccountId) hash ^= TargetAccountId.GetHashCode();
      if (HasFilter) hash ^= Filter.GetHashCode();
      hash ^= attribute_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasType) {
        output.WriteRawTag(10);
        output.WriteString(Type);
      }
      if (HasTargetAccountId) {
        output.WriteRawTag(16);
        output.WriteUInt64(TargetAccountId);
      }
      if (HasFilter) {
        output.WriteRawTag(26);
        output.WriteMessage(Filter);
      }
      attribute_.WriteTo(output, _repeated_attribute_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasType) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Type);
      }
      if (HasTargetAccountId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(TargetAccountId);
      }
      if (HasFilter) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Filter);
      }
      size += attribute_.CalculateSize(_repeated_attribute_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SendNotificationOptions other) {
      if (other == null) {
        return;
      }
      if (other.HasType) {
        Type = other.Type;
      }
      if (other.HasTargetAccountId) {
        TargetAccountId = other.TargetAccountId;
      }
      if (other.HasFilter) {
        if (!HasFilter) {
          Filter = new global::Bgs.Protocol.Notification.V2.Client.Filter();
        }
        Filter.MergeFrom(other.Filter);
      }
      attribute_.Add(other.attribute_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Type = input.ReadString();
            break;
          }
          case 16: {
            TargetAccountId = input.ReadUInt64();
            break;
          }
          case 26: {
            if (!HasFilter) {
              Filter = new global::Bgs.Protocol.Notification.V2.Client.Filter();
            }
            input.ReadMessage(Filter);
            break;
          }
          case 34: {
            attribute_.AddEntriesFrom(input, _repeated_attribute_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class Notification : pb::IMessage<Notification> {
    private static readonly pb::MessageParser<Notification> _parser = new pb::MessageParser<Notification>(() => new Notification());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Notification> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bgs.Protocol.Notification.V2.Client.NotificationTypesReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Notification() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Notification(Notification other) : this() {
      _hasBits0 = other._hasBits0;
      type_ = other.type_;
      sender_ = other.HasSender ? other.sender_.Clone() : null;
      target_ = other.HasTarget ? other.target_.Clone() : null;
      attribute_ = other.attribute_.Clone();
      creationTimeMs_ = other.creationTimeMs_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Notification Clone() {
      return new Notification(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    private readonly static string TypeDefaultValue = "";

    private string type_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Type {
      get { return type_ ?? TypeDefaultValue; }
      set {
        type_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasType {
      get { return type_ != null; }
    }
    /// <summary>Clears the value of the "type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearType() {
      type_ = null;
    }

    /// <summary>Field number for the "sender" field.</summary>
    public const int SenderFieldNumber = 2;
    private global::Bgs.Protocol.Notification.V2.Client.UserDescription sender_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bgs.Protocol.Notification.V2.Client.UserDescription Sender {
      get { return sender_; }
      set {
        sender_ = value;
      }
    }
    /// <summary>Gets whether the sender field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasSender {
      get { return sender_ != null; }
    }
    /// <summary>Clears the value of the sender field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearSender() {
      sender_ = null;
    }

    /// <summary>Field number for the "target" field.</summary>
    public const int TargetFieldNumber = 3;
    private global::Bgs.Protocol.Notification.V2.Client.UserDescription target_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bgs.Protocol.Notification.V2.Client.UserDescription Target {
      get { return target_; }
      set {
        target_ = value;
      }
    }
    /// <summary>Gets whether the target field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasTarget {
      get { return target_ != null; }
    }
    /// <summary>Clears the value of the target field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearTarget() {
      target_ = null;
    }

    /// <summary>Field number for the "attribute" field.</summary>
    public const int AttributeFieldNumber = 4;
    private static readonly pb::FieldCodec<global::Bgs.Protocol.V2.Attribute> _repeated_attribute_codec
        = pb::FieldCodec.ForMessage(34, global::Bgs.Protocol.V2.Attribute.Parser);
    private readonly pbc::RepeatedField<global::Bgs.Protocol.V2.Attribute> attribute_ = new pbc::RepeatedField<global::Bgs.Protocol.V2.Attribute>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Bgs.Protocol.V2.Attribute> Attribute {
      get { return attribute_; }
    }

    /// <summary>Field number for the "creation_time_ms" field.</summary>
    public const int CreationTimeMsFieldNumber = 5;
    private readonly static ulong CreationTimeMsDefaultValue = 0UL;

    private ulong creationTimeMs_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong CreationTimeMs {
      get { if ((_hasBits0 & 1) != 0) { return creationTimeMs_; } else { return CreationTimeMsDefaultValue; } }
      set {
        _hasBits0 |= 1;
        creationTimeMs_ = value;
      }
    }
    /// <summary>Gets whether the "creation_time_ms" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasCreationTimeMs {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "creation_time_ms" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearCreationTimeMs() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Notification);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Notification other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (!object.Equals(Sender, other.Sender)) return false;
      if (!object.Equals(Target, other.Target)) return false;
      if(!attribute_.Equals(other.attribute_)) return false;
      if (CreationTimeMs != other.CreationTimeMs) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasType) hash ^= Type.GetHashCode();
      if (HasSender) hash ^= Sender.GetHashCode();
      if (HasTarget) hash ^= Target.GetHashCode();
      hash ^= attribute_.GetHashCode();
      if (HasCreationTimeMs) hash ^= CreationTimeMs.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasType) {
        output.WriteRawTag(10);
        output.WriteString(Type);
      }
      if (HasSender) {
        output.WriteRawTag(18);
        output.WriteMessage(Sender);
      }
      if (HasTarget) {
        output.WriteRawTag(26);
        output.WriteMessage(Target);
      }
      attribute_.WriteTo(output, _repeated_attribute_codec);
      if (HasCreationTimeMs) {
        output.WriteRawTag(40);
        output.WriteUInt64(CreationTimeMs);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasType) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Type);
      }
      if (HasSender) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Sender);
      }
      if (HasTarget) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Target);
      }
      size += attribute_.CalculateSize(_repeated_attribute_codec);
      if (HasCreationTimeMs) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(CreationTimeMs);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Notification other) {
      if (other == null) {
        return;
      }
      if (other.HasType) {
        Type = other.Type;
      }
      if (other.HasSender) {
        if (!HasSender) {
          Sender = new global::Bgs.Protocol.Notification.V2.Client.UserDescription();
        }
        Sender.MergeFrom(other.Sender);
      }
      if (other.HasTarget) {
        if (!HasTarget) {
          Target = new global::Bgs.Protocol.Notification.V2.Client.UserDescription();
        }
        Target.MergeFrom(other.Target);
      }
      attribute_.Add(other.attribute_);
      if (other.HasCreationTimeMs) {
        CreationTimeMs = other.CreationTimeMs;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Type = input.ReadString();
            break;
          }
          case 18: {
            if (!HasSender) {
              Sender = new global::Bgs.Protocol.Notification.V2.Client.UserDescription();
            }
            input.ReadMessage(Sender);
            break;
          }
          case 26: {
            if (!HasTarget) {
              Target = new global::Bgs.Protocol.Notification.V2.Client.UserDescription();
            }
            input.ReadMessage(Target);
            break;
          }
          case 34: {
            attribute_.AddEntriesFrom(input, _repeated_attribute_codec);
            break;
          }
          case 40: {
            CreationTimeMs = input.ReadUInt64();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
