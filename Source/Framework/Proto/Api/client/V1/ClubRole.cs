// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: bgs/low/pb/client/api/client/v1/club_role.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Bgs.Protocol.Club.V1.Client {

  /// <summary>Holder for reflection information generated from bgs/low/pb/client/api/client/v1/club_role.proto</summary>
  public static partial class ClubRoleReflection {

    #region Descriptor
    /// <summary>File descriptor for bgs/low/pb/client/api/client/v1/club_role.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ClubRoleReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Ci9iZ3MvbG93L3BiL2NsaWVudC9hcGkvY2xpZW50L3YxL2NsdWJfcm9sZS5w",
            "cm90bxIbYmdzLnByb3RvY29sLmNsdWIudjEuY2xpZW50GiJiZ3MvbG93L3Bi",
            "L2NsaWVudC9yb2xlX3R5cGVzLnByb3RvIscLChBDbHViUHJpdmlsZWdlU2V0",
            "EhMKC2Nhbl9kZXN0cm95GAEgASgIEhkKEWNhbl9zZXRfYXR0cmlidXRlGAog",
            "ASgIEhQKDGNhbl9zZXRfbmFtZRgLIAEoCBIbChNjYW5fc2V0X2Rlc2NyaXB0",
            "aW9uGAwgASgIEhYKDmNhbl9zZXRfYXZhdGFyGA0gASgIEhkKEWNhbl9zZXRf",
            "YnJvYWRjYXN0GA4gASgIEh0KFWNhbl9zZXRfcHJpdmFjeV9sZXZlbBgPIAEo",
            "CBIWCg5jYW5fYWRkX21lbWJlchgdIAEoCBIXCg9jYW5fa2lja19tZW1iZXIY",
            "HiABKAgSJAocY2FuX3NldF9vd25fbWVtYmVyX2F0dHJpYnV0ZRgfIAEoCBIm",
            "Ch5jYW5fc2V0X290aGVyX21lbWJlcl9hdHRyaWJ1dGUYICABKAgSHwoXY2Fu",
            "X3NldF9vd25fdm9pY2Vfc3RhdGUYISABKAgSIgoaY2FuX3NldF9vd25fcHJl",
            "c2VuY2VfbGV2ZWwYIiABKAgSIQoZY2FuX3NldF9vd25fd2hpc3Blcl9sZXZl",
            "bBgjIAEoCBIfChdjYW5fc2V0X293bl9tZW1iZXJfbm90ZRgkIAEoCBIhChlj",
            "YW5fc2V0X290aGVyX21lbWJlcl9ub3RlGCUgASgIEhUKDWNhbl91c2Vfdm9p",
            "Y2UYMiABKAgSJQodY2FuX3ZvaWNlX211dGVfbWVtYmVyX2Zvcl9hbGwYMyAB",
            "KAgSGgoSY2FuX2dldF9pbnZpdGF0aW9uGEYgASgIEhsKE2Nhbl9zZW5kX2lu",
            "dml0YXRpb24YRyABKAgSIQoZY2FuX3NlbmRfZ3Vlc3RfaW52aXRhdGlvbhhI",
            "IAEoCBIhChljYW5fcmV2b2tlX293bl9pbnZpdGF0aW9uGEkgASgIEiMKG2Nh",
            "bl9yZXZva2Vfb3RoZXJfaW52aXRhdGlvbhhKIAEoCBIaChJjYW5fZ2V0X3N1",
            "Z2dlc3Rpb24YWiABKAgSGgoSY2FuX3N1Z2dlc3RfbWVtYmVyGFsgASgIEhoK",
            "EmNhbl9hcHByb3ZlX21lbWJlchhcIAEoCBIWCg5jYW5fZ2V0X3RpY2tldBhu",
            "IAEoCBIZChFjYW5fY3JlYXRlX3RpY2tldBhvIAEoCBIaChJjYW5fZGVzdHJv",
            "eV90aWNrZXQYcCABKAgSFAoLY2FuX2dldF9iYW4YggEgASgIEhQKC2Nhbl9h",
            "ZGRfYmFuGIMBIAEoCBIXCg5jYW5fcmVtb3ZlX2JhbhiEASABKAgSGgoRY2Fu",
            "X2NyZWF0ZV9zdHJlYW0YjAEgASgIEhsKEmNhbl9kZXN0cm95X3N0cmVhbRiN",
            "ASABKAgSIAoXY2FuX3NldF9zdHJlYW1fcG9zaXRpb24YjgEgASgIEiEKGGNh",
            "bl9zZXRfc3RyZWFtX2F0dHJpYnV0ZRiPASABKAgSHAoTY2FuX3NldF9zdHJl",
            "YW1fbmFtZRiQASABKAgSHwoWY2FuX3NldF9zdHJlYW1fc3ViamVjdBiRASAB",
            "KAgSHgoVY2FuX3NldF9zdHJlYW1fYWNjZXNzGJIBIAEoCBIjChpjYW5fc2V0",
            "X3N0cmVhbV92b2ljZV9sZXZlbBiTASABKAgSGwoSY2FuX2NyZWF0ZV9tZXNz",
            "YWdlGLQBIAEoCBIgChdjYW5fZGVzdHJveV9vd25fbWVzc2FnZRi1ASABKAgS",
            "IgoZY2FuX2Rlc3Ryb3lfb3RoZXJfbWVzc2FnZRi2ASABKAgSHQoUY2FuX2Vk",
            "aXRfb3duX21lc3NhZ2UYtwEgASgIEhgKD2Nhbl9waW5fbWVzc2FnZRi4ASAB",
            "KAgSGAoPY2FuX21lbnRpb25fYWxsGLkBIAEoCBIZChBjYW5fbWVudGlvbl9o",
            "ZXJlGLoBIAEoCBIbChJjYW5fbWVudGlvbl9tZW1iZXIYuwEgASgIEhkKEGNh",
            "bl9tZW50aW9uX3JvbGUYvAEgASgIIsABCghDbHViUm9sZRIKCgJpZBgBIAEo",
            "DRImCgVzdGF0ZRgCIAEoCzIXLmJncy5wcm90b2NvbC5Sb2xlU3RhdGUSQAoJ",
            "cHJpdmlsZWdlGAMgASgLMi0uYmdzLnByb3RvY29sLmNsdWIudjEuY2xpZW50",
            "LkNsdWJQcml2aWxlZ2VTZXQSIgoaYWx3YXlzX2dyYW50X3N0cmVhbV9hY2Nl",
            "c3MYBCABKAgSGgoSYWxsb3dfaW5fY2x1Yl9zbG90GAUgASgIIpsBCgtDbHVi",
            "Um9sZVNldBIzCgRyb2xlGAEgAygLMiUuYmdzLnByb3RvY29sLmNsdWIudjEu",
            "Y2xpZW50LkNsdWJSb2xlEhgKDGRlZmF1bHRfcm9sZRgFIAMoDUICEAESLAok",
            "YXNzaWdubWVudF9yZXNwZWN0c19yZWxlZ2F0aW9uX2NoYWluGAYgASgIEg8K",
            "B3N1YnR5cGUYByABKAk="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Bgs.Protocol.RoleTypesReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Bgs.Protocol.Club.V1.Client.ClubPrivilegeSet), global::Bgs.Protocol.Club.V1.Client.ClubPrivilegeSet.Parser, new[]{ "CanDestroy", "CanSetAttribute", "CanSetName", "CanSetDescription", "CanSetAvatar", "CanSetBroadcast", "CanSetPrivacyLevel", "CanAddMember", "CanKickMember", "CanSetOwnMemberAttribute", "CanSetOtherMemberAttribute", "CanSetOwnVoiceState", "CanSetOwnPresenceLevel", "CanSetOwnWhisperLevel", "CanSetOwnMemberNote", "CanSetOtherMemberNote", "CanUseVoice", "CanVoiceMuteMemberForAll", "CanGetInvitation", "CanSendInvitation", "CanSendGuestInvitation", "CanRevokeOwnInvitation", "CanRevokeOtherInvitation", "CanGetSuggestion", "CanSuggestMember", "CanApproveMember", "CanGetTicket", "CanCreateTicket", "CanDestroyTicket", "CanGetBan", "CanAddBan", "CanRemoveBan", "CanCreateStream", "CanDestroyStream", "CanSetStreamPosition", "CanSetStreamAttribute", "CanSetStreamName", "CanSetStreamSubject", "CanSetStreamAccess", "CanSetStreamVoiceLevel", "CanCreateMessage", "CanDestroyOwnMessage", "CanDestroyOtherMessage", "CanEditOwnMessage", "CanPinMessage", "CanMentionAll", "CanMentionHere", "CanMentionMember", "CanMentionRole" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bgs.Protocol.Club.V1.Client.ClubRole), global::Bgs.Protocol.Club.V1.Client.ClubRole.Parser, new[]{ "Id", "State", "Privilege", "AlwaysGrantStreamAccess", "AllowInClubSlot" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bgs.Protocol.Club.V1.Client.ClubRoleSet), global::Bgs.Protocol.Club.V1.Client.ClubRoleSet.Parser, new[]{ "Role", "DefaultRole", "AssignmentRespectsRelegationChain", "Subtype" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class ClubPrivilegeSet : pb::IMessage<ClubPrivilegeSet> {
    private static readonly pb::MessageParser<ClubPrivilegeSet> _parser = new pb::MessageParser<ClubPrivilegeSet>(() => new ClubPrivilegeSet());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    private int _hasBits1;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ClubPrivilegeSet> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bgs.Protocol.Club.V1.Client.ClubRoleReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClubPrivilegeSet() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClubPrivilegeSet(ClubPrivilegeSet other) : this() {
      _hasBits0 = other._hasBits0;
      _hasBits1 = other._hasBits1;
      canDestroy_ = other.canDestroy_;
      canSetAttribute_ = other.canSetAttribute_;
      canSetName_ = other.canSetName_;
      canSetDescription_ = other.canSetDescription_;
      canSetAvatar_ = other.canSetAvatar_;
      canSetBroadcast_ = other.canSetBroadcast_;
      canSetPrivacyLevel_ = other.canSetPrivacyLevel_;
      canAddMember_ = other.canAddMember_;
      canKickMember_ = other.canKickMember_;
      canSetOwnMemberAttribute_ = other.canSetOwnMemberAttribute_;
      canSetOtherMemberAttribute_ = other.canSetOtherMemberAttribute_;
      canSetOwnVoiceState_ = other.canSetOwnVoiceState_;
      canSetOwnPresenceLevel_ = other.canSetOwnPresenceLevel_;
      canSetOwnWhisperLevel_ = other.canSetOwnWhisperLevel_;
      canSetOwnMemberNote_ = other.canSetOwnMemberNote_;
      canSetOtherMemberNote_ = other.canSetOtherMemberNote_;
      canUseVoice_ = other.canUseVoice_;
      canVoiceMuteMemberForAll_ = other.canVoiceMuteMemberForAll_;
      canGetInvitation_ = other.canGetInvitation_;
      canSendInvitation_ = other.canSendInvitation_;
      canSendGuestInvitation_ = other.canSendGuestInvitation_;
      canRevokeOwnInvitation_ = other.canRevokeOwnInvitation_;
      canRevokeOtherInvitation_ = other.canRevokeOtherInvitation_;
      canGetSuggestion_ = other.canGetSuggestion_;
      canSuggestMember_ = other.canSuggestMember_;
      canApproveMember_ = other.canApproveMember_;
      canGetTicket_ = other.canGetTicket_;
      canCreateTicket_ = other.canCreateTicket_;
      canDestroyTicket_ = other.canDestroyTicket_;
      canGetBan_ = other.canGetBan_;
      canAddBan_ = other.canAddBan_;
      canRemoveBan_ = other.canRemoveBan_;
      canCreateStream_ = other.canCreateStream_;
      canDestroyStream_ = other.canDestroyStream_;
      canSetStreamPosition_ = other.canSetStreamPosition_;
      canSetStreamAttribute_ = other.canSetStreamAttribute_;
      canSetStreamName_ = other.canSetStreamName_;
      canSetStreamSubject_ = other.canSetStreamSubject_;
      canSetStreamAccess_ = other.canSetStreamAccess_;
      canSetStreamVoiceLevel_ = other.canSetStreamVoiceLevel_;
      canCreateMessage_ = other.canCreateMessage_;
      canDestroyOwnMessage_ = other.canDestroyOwnMessage_;
      canDestroyOtherMessage_ = other.canDestroyOtherMessage_;
      canEditOwnMessage_ = other.canEditOwnMessage_;
      canPinMessage_ = other.canPinMessage_;
      canMentionAll_ = other.canMentionAll_;
      canMentionHere_ = other.canMentionHere_;
      canMentionMember_ = other.canMentionMember_;
      canMentionRole_ = other.canMentionRole_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClubPrivilegeSet Clone() {
      return new ClubPrivilegeSet(this);
    }

    /// <summary>Field number for the "can_destroy" field.</summary>
    public const int CanDestroyFieldNumber = 1;
    private readonly static bool CanDestroyDefaultValue = false;

    private bool canDestroy_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool CanDestroy {
      get { if ((_hasBits0 & 1) != 0) { return canDestroy_; } else { return CanDestroyDefaultValue; } }
      set {
        _hasBits0 |= 1;
        canDestroy_ = value;
      }
    }
    /// <summary>Gets whether the "can_destroy" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasCanDestroy {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "can_destroy" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearCanDestroy() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "can_set_attribute" field.</summary>
    public const int CanSetAttributeFieldNumber = 10;
    private readonly static bool CanSetAttributeDefaultValue = false;

    private bool canSetAttribute_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool CanSetAttribute {
      get { if ((_hasBits0 & 2) != 0) { return canSetAttribute_; } else { return CanSetAttributeDefaultValue; } }
      set {
        _hasBits0 |= 2;
        canSetAttribute_ = value;
      }
    }
    /// <summary>Gets whether the "can_set_attribute" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasCanSetAttribute {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "can_set_attribute" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearCanSetAttribute() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "can_set_name" field.</summary>
    public const int CanSetNameFieldNumber = 11;
    private readonly static bool CanSetNameDefaultValue = false;

    private bool canSetName_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool CanSetName {
      get { if ((_hasBits0 & 4) != 0) { return canSetName_; } else { return CanSetNameDefaultValue; } }
      set {
        _hasBits0 |= 4;
        canSetName_ = value;
      }
    }
    /// <summary>Gets whether the "can_set_name" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasCanSetName {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "can_set_name" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearCanSetName() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "can_set_description" field.</summary>
    public const int CanSetDescriptionFieldNumber = 12;
    private readonly static bool CanSetDescriptionDefaultValue = false;

    private bool canSetDescription_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool CanSetDescription {
      get { if ((_hasBits0 & 8) != 0) { return canSetDescription_; } else { return CanSetDescriptionDefaultValue; } }
      set {
        _hasBits0 |= 8;
        canSetDescription_ = value;
      }
    }
    /// <summary>Gets whether the "can_set_description" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasCanSetDescription {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "can_set_description" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearCanSetDescription() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "can_set_avatar" field.</summary>
    public const int CanSetAvatarFieldNumber = 13;
    private readonly static bool CanSetAvatarDefaultValue = false;

    private bool canSetAvatar_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool CanSetAvatar {
      get { if ((_hasBits0 & 16) != 0) { return canSetAvatar_; } else { return CanSetAvatarDefaultValue; } }
      set {
        _hasBits0 |= 16;
        canSetAvatar_ = value;
      }
    }
    /// <summary>Gets whether the "can_set_avatar" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasCanSetAvatar {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "can_set_avatar" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearCanSetAvatar() {
      _hasBits0 &= ~16;
    }

    /// <summary>Field number for the "can_set_broadcast" field.</summary>
    public const int CanSetBroadcastFieldNumber = 14;
    private readonly static bool CanSetBroadcastDefaultValue = false;

    private bool canSetBroadcast_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool CanSetBroadcast {
      get { if ((_hasBits0 & 32) != 0) { return canSetBroadcast_; } else { return CanSetBroadcastDefaultValue; } }
      set {
        _hasBits0 |= 32;
        canSetBroadcast_ = value;
      }
    }
    /// <summary>Gets whether the "can_set_broadcast" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasCanSetBroadcast {
      get { return (_hasBits0 & 32) != 0; }
    }
    /// <summary>Clears the value of the "can_set_broadcast" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearCanSetBroadcast() {
      _hasBits0 &= ~32;
    }

    /// <summary>Field number for the "can_set_privacy_level" field.</summary>
    public const int CanSetPrivacyLevelFieldNumber = 15;
    private readonly static bool CanSetPrivacyLevelDefaultValue = false;

    private bool canSetPrivacyLevel_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool CanSetPrivacyLevel {
      get { if ((_hasBits0 & 64) != 0) { return canSetPrivacyLevel_; } else { return CanSetPrivacyLevelDefaultValue; } }
      set {
        _hasBits0 |= 64;
        canSetPrivacyLevel_ = value;
      }
    }
    /// <summary>Gets whether the "can_set_privacy_level" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasCanSetPrivacyLevel {
      get { return (_hasBits0 & 64) != 0; }
    }
    /// <summary>Clears the value of the "can_set_privacy_level" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearCanSetPrivacyLevel() {
      _hasBits0 &= ~64;
    }

    /// <summary>Field number for the "can_add_member" field.</summary>
    public const int CanAddMemberFieldNumber = 29;
    private readonly static bool CanAddMemberDefaultValue = false;

    private bool canAddMember_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool CanAddMember {
      get { if ((_hasBits0 & 128) != 0) { return canAddMember_; } else { return CanAddMemberDefaultValue; } }
      set {
        _hasBits0 |= 128;
        canAddMember_ = value;
      }
    }
    /// <summary>Gets whether the "can_add_member" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasCanAddMember {
      get { return (_hasBits0 & 128) != 0; }
    }
    /// <summary>Clears the value of the "can_add_member" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearCanAddMember() {
      _hasBits0 &= ~128;
    }

    /// <summary>Field number for the "can_kick_member" field.</summary>
    public const int CanKickMemberFieldNumber = 30;
    private readonly static bool CanKickMemberDefaultValue = false;

    private bool canKickMember_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool CanKickMember {
      get { if ((_hasBits0 & 256) != 0) { return canKickMember_; } else { return CanKickMemberDefaultValue; } }
      set {
        _hasBits0 |= 256;
        canKickMember_ = value;
      }
    }
    /// <summary>Gets whether the "can_kick_member" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasCanKickMember {
      get { return (_hasBits0 & 256) != 0; }
    }
    /// <summary>Clears the value of the "can_kick_member" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearCanKickMember() {
      _hasBits0 &= ~256;
    }

    /// <summary>Field number for the "can_set_own_member_attribute" field.</summary>
    public const int CanSetOwnMemberAttributeFieldNumber = 31;
    private readonly static bool CanSetOwnMemberAttributeDefaultValue = false;

    private bool canSetOwnMemberAttribute_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool CanSetOwnMemberAttribute {
      get { if ((_hasBits0 & 512) != 0) { return canSetOwnMemberAttribute_; } else { return CanSetOwnMemberAttributeDefaultValue; } }
      set {
        _hasBits0 |= 512;
        canSetOwnMemberAttribute_ = value;
      }
    }
    /// <summary>Gets whether the "can_set_own_member_attribute" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasCanSetOwnMemberAttribute {
      get { return (_hasBits0 & 512) != 0; }
    }
    /// <summary>Clears the value of the "can_set_own_member_attribute" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearCanSetOwnMemberAttribute() {
      _hasBits0 &= ~512;
    }

    /// <summary>Field number for the "can_set_other_member_attribute" field.</summary>
    public const int CanSetOtherMemberAttributeFieldNumber = 32;
    private readonly static bool CanSetOtherMemberAttributeDefaultValue = false;

    private bool canSetOtherMemberAttribute_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool CanSetOtherMemberAttribute {
      get { if ((_hasBits0 & 1024) != 0) { return canSetOtherMemberAttribute_; } else { return CanSetOtherMemberAttributeDefaultValue; } }
      set {
        _hasBits0 |= 1024;
        canSetOtherMemberAttribute_ = value;
      }
    }
    /// <summary>Gets whether the "can_set_other_member_attribute" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasCanSetOtherMemberAttribute {
      get { return (_hasBits0 & 1024) != 0; }
    }
    /// <summary>Clears the value of the "can_set_other_member_attribute" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearCanSetOtherMemberAttribute() {
      _hasBits0 &= ~1024;
    }

    /// <summary>Field number for the "can_set_own_voice_state" field.</summary>
    public const int CanSetOwnVoiceStateFieldNumber = 33;
    private readonly static bool CanSetOwnVoiceStateDefaultValue = false;

    private bool canSetOwnVoiceState_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool CanSetOwnVoiceState {
      get { if ((_hasBits0 & 2048) != 0) { return canSetOwnVoiceState_; } else { return CanSetOwnVoiceStateDefaultValue; } }
      set {
        _hasBits0 |= 2048;
        canSetOwnVoiceState_ = value;
      }
    }
    /// <summary>Gets whether the "can_set_own_voice_state" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasCanSetOwnVoiceState {
      get { return (_hasBits0 & 2048) != 0; }
    }
    /// <summary>Clears the value of the "can_set_own_voice_state" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearCanSetOwnVoiceState() {
      _hasBits0 &= ~2048;
    }

    /// <summary>Field number for the "can_set_own_presence_level" field.</summary>
    public const int CanSetOwnPresenceLevelFieldNumber = 34;
    private readonly static bool CanSetOwnPresenceLevelDefaultValue = false;

    private bool canSetOwnPresenceLevel_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool CanSetOwnPresenceLevel {
      get { if ((_hasBits0 & 4096) != 0) { return canSetOwnPresenceLevel_; } else { return CanSetOwnPresenceLevelDefaultValue; } }
      set {
        _hasBits0 |= 4096;
        canSetOwnPresenceLevel_ = value;
      }
    }
    /// <summary>Gets whether the "can_set_own_presence_level" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasCanSetOwnPresenceLevel {
      get { return (_hasBits0 & 4096) != 0; }
    }
    /// <summary>Clears the value of the "can_set_own_presence_level" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearCanSetOwnPresenceLevel() {
      _hasBits0 &= ~4096;
    }

    /// <summary>Field number for the "can_set_own_whisper_level" field.</summary>
    public const int CanSetOwnWhisperLevelFieldNumber = 35;
    private readonly static bool CanSetOwnWhisperLevelDefaultValue = false;

    private bool canSetOwnWhisperLevel_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool CanSetOwnWhisperLevel {
      get { if ((_hasBits0 & 8192) != 0) { return canSetOwnWhisperLevel_; } else { return CanSetOwnWhisperLevelDefaultValue; } }
      set {
        _hasBits0 |= 8192;
        canSetOwnWhisperLevel_ = value;
      }
    }
    /// <summary>Gets whether the "can_set_own_whisper_level" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasCanSetOwnWhisperLevel {
      get { return (_hasBits0 & 8192) != 0; }
    }
    /// <summary>Clears the value of the "can_set_own_whisper_level" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearCanSetOwnWhisperLevel() {
      _hasBits0 &= ~8192;
    }

    /// <summary>Field number for the "can_set_own_member_note" field.</summary>
    public const int CanSetOwnMemberNoteFieldNumber = 36;
    private readonly static bool CanSetOwnMemberNoteDefaultValue = false;

    private bool canSetOwnMemberNote_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool CanSetOwnMemberNote {
      get { if ((_hasBits0 & 16384) != 0) { return canSetOwnMemberNote_; } else { return CanSetOwnMemberNoteDefaultValue; } }
      set {
        _hasBits0 |= 16384;
        canSetOwnMemberNote_ = value;
      }
    }
    /// <summary>Gets whether the "can_set_own_member_note" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasCanSetOwnMemberNote {
      get { return (_hasBits0 & 16384) != 0; }
    }
    /// <summary>Clears the value of the "can_set_own_member_note" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearCanSetOwnMemberNote() {
      _hasBits0 &= ~16384;
    }

    /// <summary>Field number for the "can_set_other_member_note" field.</summary>
    public const int CanSetOtherMemberNoteFieldNumber = 37;
    private readonly static bool CanSetOtherMemberNoteDefaultValue = false;

    private bool canSetOtherMemberNote_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool CanSetOtherMemberNote {
      get { if ((_hasBits0 & 32768) != 0) { return canSetOtherMemberNote_; } else { return CanSetOtherMemberNoteDefaultValue; } }
      set {
        _hasBits0 |= 32768;
        canSetOtherMemberNote_ = value;
      }
    }
    /// <summary>Gets whether the "can_set_other_member_note" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasCanSetOtherMemberNote {
      get { return (_hasBits0 & 32768) != 0; }
    }
    /// <summary>Clears the value of the "can_set_other_member_note" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearCanSetOtherMemberNote() {
      _hasBits0 &= ~32768;
    }

    /// <summary>Field number for the "can_use_voice" field.</summary>
    public const int CanUseVoiceFieldNumber = 50;
    private readonly static bool CanUseVoiceDefaultValue = false;

    private bool canUseVoice_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool CanUseVoice {
      get { if ((_hasBits0 & 65536) != 0) { return canUseVoice_; } else { return CanUseVoiceDefaultValue; } }
      set {
        _hasBits0 |= 65536;
        canUseVoice_ = value;
      }
    }
    /// <summary>Gets whether the "can_use_voice" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasCanUseVoice {
      get { return (_hasBits0 & 65536) != 0; }
    }
    /// <summary>Clears the value of the "can_use_voice" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearCanUseVoice() {
      _hasBits0 &= ~65536;
    }

    /// <summary>Field number for the "can_voice_mute_member_for_all" field.</summary>
    public const int CanVoiceMuteMemberForAllFieldNumber = 51;
    private readonly static bool CanVoiceMuteMemberForAllDefaultValue = false;

    private bool canVoiceMuteMemberForAll_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool CanVoiceMuteMemberForAll {
      get { if ((_hasBits0 & 131072) != 0) { return canVoiceMuteMemberForAll_; } else { return CanVoiceMuteMemberForAllDefaultValue; } }
      set {
        _hasBits0 |= 131072;
        canVoiceMuteMemberForAll_ = value;
      }
    }
    /// <summary>Gets whether the "can_voice_mute_member_for_all" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasCanVoiceMuteMemberForAll {
      get { return (_hasBits0 & 131072) != 0; }
    }
    /// <summary>Clears the value of the "can_voice_mute_member_for_all" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearCanVoiceMuteMemberForAll() {
      _hasBits0 &= ~131072;
    }

    /// <summary>Field number for the "can_get_invitation" field.</summary>
    public const int CanGetInvitationFieldNumber = 70;
    private readonly static bool CanGetInvitationDefaultValue = false;

    private bool canGetInvitation_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool CanGetInvitation {
      get { if ((_hasBits0 & 262144) != 0) { return canGetInvitation_; } else { return CanGetInvitationDefaultValue; } }
      set {
        _hasBits0 |= 262144;
        canGetInvitation_ = value;
      }
    }
    /// <summary>Gets whether the "can_get_invitation" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasCanGetInvitation {
      get { return (_hasBits0 & 262144) != 0; }
    }
    /// <summary>Clears the value of the "can_get_invitation" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearCanGetInvitation() {
      _hasBits0 &= ~262144;
    }

    /// <summary>Field number for the "can_send_invitation" field.</summary>
    public const int CanSendInvitationFieldNumber = 71;
    private readonly static bool CanSendInvitationDefaultValue = false;

    private bool canSendInvitation_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool CanSendInvitation {
      get { if ((_hasBits0 & 524288) != 0) { return canSendInvitation_; } else { return CanSendInvitationDefaultValue; } }
      set {
        _hasBits0 |= 524288;
        canSendInvitation_ = value;
      }
    }
    /// <summary>Gets whether the "can_send_invitation" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasCanSendInvitation {
      get { return (_hasBits0 & 524288) != 0; }
    }
    /// <summary>Clears the value of the "can_send_invitation" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearCanSendInvitation() {
      _hasBits0 &= ~524288;
    }

    /// <summary>Field number for the "can_send_guest_invitation" field.</summary>
    public const int CanSendGuestInvitationFieldNumber = 72;
    private readonly static bool CanSendGuestInvitationDefaultValue = false;

    private bool canSendGuestInvitation_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool CanSendGuestInvitation {
      get { if ((_hasBits0 & 1048576) != 0) { return canSendGuestInvitation_; } else { return CanSendGuestInvitationDefaultValue; } }
      set {
        _hasBits0 |= 1048576;
        canSendGuestInvitation_ = value;
      }
    }
    /// <summary>Gets whether the "can_send_guest_invitation" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasCanSendGuestInvitation {
      get { return (_hasBits0 & 1048576) != 0; }
    }
    /// <summary>Clears the value of the "can_send_guest_invitation" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearCanSendGuestInvitation() {
      _hasBits0 &= ~1048576;
    }

    /// <summary>Field number for the "can_revoke_own_invitation" field.</summary>
    public const int CanRevokeOwnInvitationFieldNumber = 73;
    private readonly static bool CanRevokeOwnInvitationDefaultValue = false;

    private bool canRevokeOwnInvitation_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool CanRevokeOwnInvitation {
      get { if ((_hasBits0 & 2097152) != 0) { return canRevokeOwnInvitation_; } else { return CanRevokeOwnInvitationDefaultValue; } }
      set {
        _hasBits0 |= 2097152;
        canRevokeOwnInvitation_ = value;
      }
    }
    /// <summary>Gets whether the "can_revoke_own_invitation" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasCanRevokeOwnInvitation {
      get { return (_hasBits0 & 2097152) != 0; }
    }
    /// <summary>Clears the value of the "can_revoke_own_invitation" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearCanRevokeOwnInvitation() {
      _hasBits0 &= ~2097152;
    }

    /// <summary>Field number for the "can_revoke_other_invitation" field.</summary>
    public const int CanRevokeOtherInvitationFieldNumber = 74;
    private readonly static bool CanRevokeOtherInvitationDefaultValue = false;

    private bool canRevokeOtherInvitation_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool CanRevokeOtherInvitation {
      get { if ((_hasBits0 & 4194304) != 0) { return canRevokeOtherInvitation_; } else { return CanRevokeOtherInvitationDefaultValue; } }
      set {
        _hasBits0 |= 4194304;
        canRevokeOtherInvitation_ = value;
      }
    }
    /// <summary>Gets whether the "can_revoke_other_invitation" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasCanRevokeOtherInvitation {
      get { return (_hasBits0 & 4194304) != 0; }
    }
    /// <summary>Clears the value of the "can_revoke_other_invitation" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearCanRevokeOtherInvitation() {
      _hasBits0 &= ~4194304;
    }

    /// <summary>Field number for the "can_get_suggestion" field.</summary>
    public const int CanGetSuggestionFieldNumber = 90;
    private readonly static bool CanGetSuggestionDefaultValue = false;

    private bool canGetSuggestion_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool CanGetSuggestion {
      get { if ((_hasBits0 & 8388608) != 0) { return canGetSuggestion_; } else { return CanGetSuggestionDefaultValue; } }
      set {
        _hasBits0 |= 8388608;
        canGetSuggestion_ = value;
      }
    }
    /// <summary>Gets whether the "can_get_suggestion" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasCanGetSuggestion {
      get { return (_hasBits0 & 8388608) != 0; }
    }
    /// <summary>Clears the value of the "can_get_suggestion" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearCanGetSuggestion() {
      _hasBits0 &= ~8388608;
    }

    /// <summary>Field number for the "can_suggest_member" field.</summary>
    public const int CanSuggestMemberFieldNumber = 91;
    private readonly static bool CanSuggestMemberDefaultValue = false;

    private bool canSuggestMember_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool CanSuggestMember {
      get { if ((_hasBits0 & 16777216) != 0) { return canSuggestMember_; } else { return CanSuggestMemberDefaultValue; } }
      set {
        _hasBits0 |= 16777216;
        canSuggestMember_ = value;
      }
    }
    /// <summary>Gets whether the "can_suggest_member" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasCanSuggestMember {
      get { return (_hasBits0 & 16777216) != 0; }
    }
    /// <summary>Clears the value of the "can_suggest_member" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearCanSuggestMember() {
      _hasBits0 &= ~16777216;
    }

    /// <summary>Field number for the "can_approve_member" field.</summary>
    public const int CanApproveMemberFieldNumber = 92;
    private readonly static bool CanApproveMemberDefaultValue = false;

    private bool canApproveMember_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool CanApproveMember {
      get { if ((_hasBits0 & 33554432) != 0) { return canApproveMember_; } else { return CanApproveMemberDefaultValue; } }
      set {
        _hasBits0 |= 33554432;
        canApproveMember_ = value;
      }
    }
    /// <summary>Gets whether the "can_approve_member" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasCanApproveMember {
      get { return (_hasBits0 & 33554432) != 0; }
    }
    /// <summary>Clears the value of the "can_approve_member" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearCanApproveMember() {
      _hasBits0 &= ~33554432;
    }

    /// <summary>Field number for the "can_get_ticket" field.</summary>
    public const int CanGetTicketFieldNumber = 110;
    private readonly static bool CanGetTicketDefaultValue = false;

    private bool canGetTicket_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool CanGetTicket {
      get { if ((_hasBits0 & 67108864) != 0) { return canGetTicket_; } else { return CanGetTicketDefaultValue; } }
      set {
        _hasBits0 |= 67108864;
        canGetTicket_ = value;
      }
    }
    /// <summary>Gets whether the "can_get_ticket" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasCanGetTicket {
      get { return (_hasBits0 & 67108864) != 0; }
    }
    /// <summary>Clears the value of the "can_get_ticket" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearCanGetTicket() {
      _hasBits0 &= ~67108864;
    }

    /// <summary>Field number for the "can_create_ticket" field.</summary>
    public const int CanCreateTicketFieldNumber = 111;
    private readonly static bool CanCreateTicketDefaultValue = false;

    private bool canCreateTicket_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool CanCreateTicket {
      get { if ((_hasBits0 & 134217728) != 0) { return canCreateTicket_; } else { return CanCreateTicketDefaultValue; } }
      set {
        _hasBits0 |= 134217728;
        canCreateTicket_ = value;
      }
    }
    /// <summary>Gets whether the "can_create_ticket" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasCanCreateTicket {
      get { return (_hasBits0 & 134217728) != 0; }
    }
    /// <summary>Clears the value of the "can_create_ticket" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearCanCreateTicket() {
      _hasBits0 &= ~134217728;
    }

    /// <summary>Field number for the "can_destroy_ticket" field.</summary>
    public const int CanDestroyTicketFieldNumber = 112;
    private readonly static bool CanDestroyTicketDefaultValue = false;

    private bool canDestroyTicket_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool CanDestroyTicket {
      get { if ((_hasBits0 & 268435456) != 0) { return canDestroyTicket_; } else { return CanDestroyTicketDefaultValue; } }
      set {
        _hasBits0 |= 268435456;
        canDestroyTicket_ = value;
      }
    }
    /// <summary>Gets whether the "can_destroy_ticket" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasCanDestroyTicket {
      get { return (_hasBits0 & 268435456) != 0; }
    }
    /// <summary>Clears the value of the "can_destroy_ticket" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearCanDestroyTicket() {
      _hasBits0 &= ~268435456;
    }

    /// <summary>Field number for the "can_get_ban" field.</summary>
    public const int CanGetBanFieldNumber = 130;
    private readonly static bool CanGetBanDefaultValue = false;

    private bool canGetBan_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool CanGetBan {
      get { if ((_hasBits0 & 536870912) != 0) { return canGetBan_; } else { return CanGetBanDefaultValue; } }
      set {
        _hasBits0 |= 536870912;
        canGetBan_ = value;
      }
    }
    /// <summary>Gets whether the "can_get_ban" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasCanGetBan {
      get { return (_hasBits0 & 536870912) != 0; }
    }
    /// <summary>Clears the value of the "can_get_ban" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearCanGetBan() {
      _hasBits0 &= ~536870912;
    }

    /// <summary>Field number for the "can_add_ban" field.</summary>
    public const int CanAddBanFieldNumber = 131;
    private readonly static bool CanAddBanDefaultValue = false;

    private bool canAddBan_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool CanAddBan {
      get { if ((_hasBits0 & 1073741824) != 0) { return canAddBan_; } else { return CanAddBanDefaultValue; } }
      set {
        _hasBits0 |= 1073741824;
        canAddBan_ = value;
      }
    }
    /// <summary>Gets whether the "can_add_ban" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasCanAddBan {
      get { return (_hasBits0 & 1073741824) != 0; }
    }
    /// <summary>Clears the value of the "can_add_ban" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearCanAddBan() {
      _hasBits0 &= ~1073741824;
    }

    /// <summary>Field number for the "can_remove_ban" field.</summary>
    public const int CanRemoveBanFieldNumber = 132;
    private readonly static bool CanRemoveBanDefaultValue = false;

    private bool canRemoveBan_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool CanRemoveBan {
      get { if ((_hasBits0 & -2147483648) != 0) { return canRemoveBan_; } else { return CanRemoveBanDefaultValue; } }
      set {
        _hasBits0 |= -2147483648;
        canRemoveBan_ = value;
      }
    }
    /// <summary>Gets whether the "can_remove_ban" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasCanRemoveBan {
      get { return (_hasBits0 & -2147483648) != 0; }
    }
    /// <summary>Clears the value of the "can_remove_ban" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearCanRemoveBan() {
      _hasBits0 &= ~-2147483648;
    }

    /// <summary>Field number for the "can_create_stream" field.</summary>
    public const int CanCreateStreamFieldNumber = 140;
    private readonly static bool CanCreateStreamDefaultValue = false;

    private bool canCreateStream_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool CanCreateStream {
      get { if ((_hasBits1 & 1) != 0) { return canCreateStream_; } else { return CanCreateStreamDefaultValue; } }
      set {
        _hasBits1 |= 1;
        canCreateStream_ = value;
      }
    }
    /// <summary>Gets whether the "can_create_stream" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasCanCreateStream {
      get { return (_hasBits1 & 1) != 0; }
    }
    /// <summary>Clears the value of the "can_create_stream" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearCanCreateStream() {
      _hasBits1 &= ~1;
    }

    /// <summary>Field number for the "can_destroy_stream" field.</summary>
    public const int CanDestroyStreamFieldNumber = 141;
    private readonly static bool CanDestroyStreamDefaultValue = false;

    private bool canDestroyStream_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool CanDestroyStream {
      get { if ((_hasBits1 & 2) != 0) { return canDestroyStream_; } else { return CanDestroyStreamDefaultValue; } }
      set {
        _hasBits1 |= 2;
        canDestroyStream_ = value;
      }
    }
    /// <summary>Gets whether the "can_destroy_stream" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasCanDestroyStream {
      get { return (_hasBits1 & 2) != 0; }
    }
    /// <summary>Clears the value of the "can_destroy_stream" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearCanDestroyStream() {
      _hasBits1 &= ~2;
    }

    /// <summary>Field number for the "can_set_stream_position" field.</summary>
    public const int CanSetStreamPositionFieldNumber = 142;
    private readonly static bool CanSetStreamPositionDefaultValue = false;

    private bool canSetStreamPosition_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool CanSetStreamPosition {
      get { if ((_hasBits1 & 4) != 0) { return canSetStreamPosition_; } else { return CanSetStreamPositionDefaultValue; } }
      set {
        _hasBits1 |= 4;
        canSetStreamPosition_ = value;
      }
    }
    /// <summary>Gets whether the "can_set_stream_position" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasCanSetStreamPosition {
      get { return (_hasBits1 & 4) != 0; }
    }
    /// <summary>Clears the value of the "can_set_stream_position" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearCanSetStreamPosition() {
      _hasBits1 &= ~4;
    }

    /// <summary>Field number for the "can_set_stream_attribute" field.</summary>
    public const int CanSetStreamAttributeFieldNumber = 143;
    private readonly static bool CanSetStreamAttributeDefaultValue = false;

    private bool canSetStreamAttribute_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool CanSetStreamAttribute {
      get { if ((_hasBits1 & 8) != 0) { return canSetStreamAttribute_; } else { return CanSetStreamAttributeDefaultValue; } }
      set {
        _hasBits1 |= 8;
        canSetStreamAttribute_ = value;
      }
    }
    /// <summary>Gets whether the "can_set_stream_attribute" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasCanSetStreamAttribute {
      get { return (_hasBits1 & 8) != 0; }
    }
    /// <summary>Clears the value of the "can_set_stream_attribute" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearCanSetStreamAttribute() {
      _hasBits1 &= ~8;
    }

    /// <summary>Field number for the "can_set_stream_name" field.</summary>
    public const int CanSetStreamNameFieldNumber = 144;
    private readonly static bool CanSetStreamNameDefaultValue = false;

    private bool canSetStreamName_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool CanSetStreamName {
      get { if ((_hasBits1 & 16) != 0) { return canSetStreamName_; } else { return CanSetStreamNameDefaultValue; } }
      set {
        _hasBits1 |= 16;
        canSetStreamName_ = value;
      }
    }
    /// <summary>Gets whether the "can_set_stream_name" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasCanSetStreamName {
      get { return (_hasBits1 & 16) != 0; }
    }
    /// <summary>Clears the value of the "can_set_stream_name" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearCanSetStreamName() {
      _hasBits1 &= ~16;
    }

    /// <summary>Field number for the "can_set_stream_subject" field.</summary>
    public const int CanSetStreamSubjectFieldNumber = 145;
    private readonly static bool CanSetStreamSubjectDefaultValue = false;

    private bool canSetStreamSubject_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool CanSetStreamSubject {
      get { if ((_hasBits1 & 32) != 0) { return canSetStreamSubject_; } else { return CanSetStreamSubjectDefaultValue; } }
      set {
        _hasBits1 |= 32;
        canSetStreamSubject_ = value;
      }
    }
    /// <summary>Gets whether the "can_set_stream_subject" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasCanSetStreamSubject {
      get { return (_hasBits1 & 32) != 0; }
    }
    /// <summary>Clears the value of the "can_set_stream_subject" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearCanSetStreamSubject() {
      _hasBits1 &= ~32;
    }

    /// <summary>Field number for the "can_set_stream_access" field.</summary>
    public const int CanSetStreamAccessFieldNumber = 146;
    private readonly static bool CanSetStreamAccessDefaultValue = false;

    private bool canSetStreamAccess_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool CanSetStreamAccess {
      get { if ((_hasBits1 & 64) != 0) { return canSetStreamAccess_; } else { return CanSetStreamAccessDefaultValue; } }
      set {
        _hasBits1 |= 64;
        canSetStreamAccess_ = value;
      }
    }
    /// <summary>Gets whether the "can_set_stream_access" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasCanSetStreamAccess {
      get { return (_hasBits1 & 64) != 0; }
    }
    /// <summary>Clears the value of the "can_set_stream_access" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearCanSetStreamAccess() {
      _hasBits1 &= ~64;
    }

    /// <summary>Field number for the "can_set_stream_voice_level" field.</summary>
    public const int CanSetStreamVoiceLevelFieldNumber = 147;
    private readonly static bool CanSetStreamVoiceLevelDefaultValue = false;

    private bool canSetStreamVoiceLevel_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool CanSetStreamVoiceLevel {
      get { if ((_hasBits1 & 128) != 0) { return canSetStreamVoiceLevel_; } else { return CanSetStreamVoiceLevelDefaultValue; } }
      set {
        _hasBits1 |= 128;
        canSetStreamVoiceLevel_ = value;
      }
    }
    /// <summary>Gets whether the "can_set_stream_voice_level" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasCanSetStreamVoiceLevel {
      get { return (_hasBits1 & 128) != 0; }
    }
    /// <summary>Clears the value of the "can_set_stream_voice_level" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearCanSetStreamVoiceLevel() {
      _hasBits1 &= ~128;
    }

    /// <summary>Field number for the "can_create_message" field.</summary>
    public const int CanCreateMessageFieldNumber = 180;
    private readonly static bool CanCreateMessageDefaultValue = false;

    private bool canCreateMessage_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool CanCreateMessage {
      get { if ((_hasBits1 & 256) != 0) { return canCreateMessage_; } else { return CanCreateMessageDefaultValue; } }
      set {
        _hasBits1 |= 256;
        canCreateMessage_ = value;
      }
    }
    /// <summary>Gets whether the "can_create_message" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasCanCreateMessage {
      get { return (_hasBits1 & 256) != 0; }
    }
    /// <summary>Clears the value of the "can_create_message" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearCanCreateMessage() {
      _hasBits1 &= ~256;
    }

    /// <summary>Field number for the "can_destroy_own_message" field.</summary>
    public const int CanDestroyOwnMessageFieldNumber = 181;
    private readonly static bool CanDestroyOwnMessageDefaultValue = false;

    private bool canDestroyOwnMessage_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool CanDestroyOwnMessage {
      get { if ((_hasBits1 & 512) != 0) { return canDestroyOwnMessage_; } else { return CanDestroyOwnMessageDefaultValue; } }
      set {
        _hasBits1 |= 512;
        canDestroyOwnMessage_ = value;
      }
    }
    /// <summary>Gets whether the "can_destroy_own_message" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasCanDestroyOwnMessage {
      get { return (_hasBits1 & 512) != 0; }
    }
    /// <summary>Clears the value of the "can_destroy_own_message" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearCanDestroyOwnMessage() {
      _hasBits1 &= ~512;
    }

    /// <summary>Field number for the "can_destroy_other_message" field.</summary>
    public const int CanDestroyOtherMessageFieldNumber = 182;
    private readonly static bool CanDestroyOtherMessageDefaultValue = false;

    private bool canDestroyOtherMessage_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool CanDestroyOtherMessage {
      get { if ((_hasBits1 & 1024) != 0) { return canDestroyOtherMessage_; } else { return CanDestroyOtherMessageDefaultValue; } }
      set {
        _hasBits1 |= 1024;
        canDestroyOtherMessage_ = value;
      }
    }
    /// <summary>Gets whether the "can_destroy_other_message" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasCanDestroyOtherMessage {
      get { return (_hasBits1 & 1024) != 0; }
    }
    /// <summary>Clears the value of the "can_destroy_other_message" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearCanDestroyOtherMessage() {
      _hasBits1 &= ~1024;
    }

    /// <summary>Field number for the "can_edit_own_message" field.</summary>
    public const int CanEditOwnMessageFieldNumber = 183;
    private readonly static bool CanEditOwnMessageDefaultValue = false;

    private bool canEditOwnMessage_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool CanEditOwnMessage {
      get { if ((_hasBits1 & 2048) != 0) { return canEditOwnMessage_; } else { return CanEditOwnMessageDefaultValue; } }
      set {
        _hasBits1 |= 2048;
        canEditOwnMessage_ = value;
      }
    }
    /// <summary>Gets whether the "can_edit_own_message" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasCanEditOwnMessage {
      get { return (_hasBits1 & 2048) != 0; }
    }
    /// <summary>Clears the value of the "can_edit_own_message" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearCanEditOwnMessage() {
      _hasBits1 &= ~2048;
    }

    /// <summary>Field number for the "can_pin_message" field.</summary>
    public const int CanPinMessageFieldNumber = 184;
    private readonly static bool CanPinMessageDefaultValue = false;

    private bool canPinMessage_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool CanPinMessage {
      get { if ((_hasBits1 & 4096) != 0) { return canPinMessage_; } else { return CanPinMessageDefaultValue; } }
      set {
        _hasBits1 |= 4096;
        canPinMessage_ = value;
      }
    }
    /// <summary>Gets whether the "can_pin_message" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasCanPinMessage {
      get { return (_hasBits1 & 4096) != 0; }
    }
    /// <summary>Clears the value of the "can_pin_message" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearCanPinMessage() {
      _hasBits1 &= ~4096;
    }

    /// <summary>Field number for the "can_mention_all" field.</summary>
    public const int CanMentionAllFieldNumber = 185;
    private readonly static bool CanMentionAllDefaultValue = false;

    private bool canMentionAll_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool CanMentionAll {
      get { if ((_hasBits1 & 8192) != 0) { return canMentionAll_; } else { return CanMentionAllDefaultValue; } }
      set {
        _hasBits1 |= 8192;
        canMentionAll_ = value;
      }
    }
    /// <summary>Gets whether the "can_mention_all" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasCanMentionAll {
      get { return (_hasBits1 & 8192) != 0; }
    }
    /// <summary>Clears the value of the "can_mention_all" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearCanMentionAll() {
      _hasBits1 &= ~8192;
    }

    /// <summary>Field number for the "can_mention_here" field.</summary>
    public const int CanMentionHereFieldNumber = 186;
    private readonly static bool CanMentionHereDefaultValue = false;

    private bool canMentionHere_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool CanMentionHere {
      get { if ((_hasBits1 & 16384) != 0) { return canMentionHere_; } else { return CanMentionHereDefaultValue; } }
      set {
        _hasBits1 |= 16384;
        canMentionHere_ = value;
      }
    }
    /// <summary>Gets whether the "can_mention_here" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasCanMentionHere {
      get { return (_hasBits1 & 16384) != 0; }
    }
    /// <summary>Clears the value of the "can_mention_here" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearCanMentionHere() {
      _hasBits1 &= ~16384;
    }

    /// <summary>Field number for the "can_mention_member" field.</summary>
    public const int CanMentionMemberFieldNumber = 187;
    private readonly static bool CanMentionMemberDefaultValue = false;

    private bool canMentionMember_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool CanMentionMember {
      get { if ((_hasBits1 & 32768) != 0) { return canMentionMember_; } else { return CanMentionMemberDefaultValue; } }
      set {
        _hasBits1 |= 32768;
        canMentionMember_ = value;
      }
    }
    /// <summary>Gets whether the "can_mention_member" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasCanMentionMember {
      get { return (_hasBits1 & 32768) != 0; }
    }
    /// <summary>Clears the value of the "can_mention_member" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearCanMentionMember() {
      _hasBits1 &= ~32768;
    }

    /// <summary>Field number for the "can_mention_role" field.</summary>
    public const int CanMentionRoleFieldNumber = 188;
    private readonly static bool CanMentionRoleDefaultValue = false;

    private bool canMentionRole_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool CanMentionRole {
      get { if ((_hasBits1 & 65536) != 0) { return canMentionRole_; } else { return CanMentionRoleDefaultValue; } }
      set {
        _hasBits1 |= 65536;
        canMentionRole_ = value;
      }
    }
    /// <summary>Gets whether the "can_mention_role" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasCanMentionRole {
      get { return (_hasBits1 & 65536) != 0; }
    }
    /// <summary>Clears the value of the "can_mention_role" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearCanMentionRole() {
      _hasBits1 &= ~65536;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ClubPrivilegeSet);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ClubPrivilegeSet other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CanDestroy != other.CanDestroy) return false;
      if (CanSetAttribute != other.CanSetAttribute) return false;
      if (CanSetName != other.CanSetName) return false;
      if (CanSetDescription != other.CanSetDescription) return false;
      if (CanSetAvatar != other.CanSetAvatar) return false;
      if (CanSetBroadcast != other.CanSetBroadcast) return false;
      if (CanSetPrivacyLevel != other.CanSetPrivacyLevel) return false;
      if (CanAddMember != other.CanAddMember) return false;
      if (CanKickMember != other.CanKickMember) return false;
      if (CanSetOwnMemberAttribute != other.CanSetOwnMemberAttribute) return false;
      if (CanSetOtherMemberAttribute != other.CanSetOtherMemberAttribute) return false;
      if (CanSetOwnVoiceState != other.CanSetOwnVoiceState) return false;
      if (CanSetOwnPresenceLevel != other.CanSetOwnPresenceLevel) return false;
      if (CanSetOwnWhisperLevel != other.CanSetOwnWhisperLevel) return false;
      if (CanSetOwnMemberNote != other.CanSetOwnMemberNote) return false;
      if (CanSetOtherMemberNote != other.CanSetOtherMemberNote) return false;
      if (CanUseVoice != other.CanUseVoice) return false;
      if (CanVoiceMuteMemberForAll != other.CanVoiceMuteMemberForAll) return false;
      if (CanGetInvitation != other.CanGetInvitation) return false;
      if (CanSendInvitation != other.CanSendInvitation) return false;
      if (CanSendGuestInvitation != other.CanSendGuestInvitation) return false;
      if (CanRevokeOwnInvitation != other.CanRevokeOwnInvitation) return false;
      if (CanRevokeOtherInvitation != other.CanRevokeOtherInvitation) return false;
      if (CanGetSuggestion != other.CanGetSuggestion) return false;
      if (CanSuggestMember != other.CanSuggestMember) return false;
      if (CanApproveMember != other.CanApproveMember) return false;
      if (CanGetTicket != other.CanGetTicket) return false;
      if (CanCreateTicket != other.CanCreateTicket) return false;
      if (CanDestroyTicket != other.CanDestroyTicket) return false;
      if (CanGetBan != other.CanGetBan) return false;
      if (CanAddBan != other.CanAddBan) return false;
      if (CanRemoveBan != other.CanRemoveBan) return false;
      if (CanCreateStream != other.CanCreateStream) return false;
      if (CanDestroyStream != other.CanDestroyStream) return false;
      if (CanSetStreamPosition != other.CanSetStreamPosition) return false;
      if (CanSetStreamAttribute != other.CanSetStreamAttribute) return false;
      if (CanSetStreamName != other.CanSetStreamName) return false;
      if (CanSetStreamSubject != other.CanSetStreamSubject) return false;
      if (CanSetStreamAccess != other.CanSetStreamAccess) return false;
      if (CanSetStreamVoiceLevel != other.CanSetStreamVoiceLevel) return false;
      if (CanCreateMessage != other.CanCreateMessage) return false;
      if (CanDestroyOwnMessage != other.CanDestroyOwnMessage) return false;
      if (CanDestroyOtherMessage != other.CanDestroyOtherMessage) return false;
      if (CanEditOwnMessage != other.CanEditOwnMessage) return false;
      if (CanPinMessage != other.CanPinMessage) return false;
      if (CanMentionAll != other.CanMentionAll) return false;
      if (CanMentionHere != other.CanMentionHere) return false;
      if (CanMentionMember != other.CanMentionMember) return false;
      if (CanMentionRole != other.CanMentionRole) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasCanDestroy) hash ^= CanDestroy.GetHashCode();
      if (HasCanSetAttribute) hash ^= CanSetAttribute.GetHashCode();
      if (HasCanSetName) hash ^= CanSetName.GetHashCode();
      if (HasCanSetDescription) hash ^= CanSetDescription.GetHashCode();
      if (HasCanSetAvatar) hash ^= CanSetAvatar.GetHashCode();
      if (HasCanSetBroadcast) hash ^= CanSetBroadcast.GetHashCode();
      if (HasCanSetPrivacyLevel) hash ^= CanSetPrivacyLevel.GetHashCode();
      if (HasCanAddMember) hash ^= CanAddMember.GetHashCode();
      if (HasCanKickMember) hash ^= CanKickMember.GetHashCode();
      if (HasCanSetOwnMemberAttribute) hash ^= CanSetOwnMemberAttribute.GetHashCode();
      if (HasCanSetOtherMemberAttribute) hash ^= CanSetOtherMemberAttribute.GetHashCode();
      if (HasCanSetOwnVoiceState) hash ^= CanSetOwnVoiceState.GetHashCode();
      if (HasCanSetOwnPresenceLevel) hash ^= CanSetOwnPresenceLevel.GetHashCode();
      if (HasCanSetOwnWhisperLevel) hash ^= CanSetOwnWhisperLevel.GetHashCode();
      if (HasCanSetOwnMemberNote) hash ^= CanSetOwnMemberNote.GetHashCode();
      if (HasCanSetOtherMemberNote) hash ^= CanSetOtherMemberNote.GetHashCode();
      if (HasCanUseVoice) hash ^= CanUseVoice.GetHashCode();
      if (HasCanVoiceMuteMemberForAll) hash ^= CanVoiceMuteMemberForAll.GetHashCode();
      if (HasCanGetInvitation) hash ^= CanGetInvitation.GetHashCode();
      if (HasCanSendInvitation) hash ^= CanSendInvitation.GetHashCode();
      if (HasCanSendGuestInvitation) hash ^= CanSendGuestInvitation.GetHashCode();
      if (HasCanRevokeOwnInvitation) hash ^= CanRevokeOwnInvitation.GetHashCode();
      if (HasCanRevokeOtherInvitation) hash ^= CanRevokeOtherInvitation.GetHashCode();
      if (HasCanGetSuggestion) hash ^= CanGetSuggestion.GetHashCode();
      if (HasCanSuggestMember) hash ^= CanSuggestMember.GetHashCode();
      if (HasCanApproveMember) hash ^= CanApproveMember.GetHashCode();
      if (HasCanGetTicket) hash ^= CanGetTicket.GetHashCode();
      if (HasCanCreateTicket) hash ^= CanCreateTicket.GetHashCode();
      if (HasCanDestroyTicket) hash ^= CanDestroyTicket.GetHashCode();
      if (HasCanGetBan) hash ^= CanGetBan.GetHashCode();
      if (HasCanAddBan) hash ^= CanAddBan.GetHashCode();
      if (HasCanRemoveBan) hash ^= CanRemoveBan.GetHashCode();
      if (HasCanCreateStream) hash ^= CanCreateStream.GetHashCode();
      if (HasCanDestroyStream) hash ^= CanDestroyStream.GetHashCode();
      if (HasCanSetStreamPosition) hash ^= CanSetStreamPosition.GetHashCode();
      if (HasCanSetStreamAttribute) hash ^= CanSetStreamAttribute.GetHashCode();
      if (HasCanSetStreamName) hash ^= CanSetStreamName.GetHashCode();
      if (HasCanSetStreamSubject) hash ^= CanSetStreamSubject.GetHashCode();
      if (HasCanSetStreamAccess) hash ^= CanSetStreamAccess.GetHashCode();
      if (HasCanSetStreamVoiceLevel) hash ^= CanSetStreamVoiceLevel.GetHashCode();
      if (HasCanCreateMessage) hash ^= CanCreateMessage.GetHashCode();
      if (HasCanDestroyOwnMessage) hash ^= CanDestroyOwnMessage.GetHashCode();
      if (HasCanDestroyOtherMessage) hash ^= CanDestroyOtherMessage.GetHashCode();
      if (HasCanEditOwnMessage) hash ^= CanEditOwnMessage.GetHashCode();
      if (HasCanPinMessage) hash ^= CanPinMessage.GetHashCode();
      if (HasCanMentionAll) hash ^= CanMentionAll.GetHashCode();
      if (HasCanMentionHere) hash ^= CanMentionHere.GetHashCode();
      if (HasCanMentionMember) hash ^= CanMentionMember.GetHashCode();
      if (HasCanMentionRole) hash ^= CanMentionRole.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasCanDestroy) {
        output.WriteRawTag(8);
        output.WriteBool(CanDestroy);
      }
      if (HasCanSetAttribute) {
        output.WriteRawTag(80);
        output.WriteBool(CanSetAttribute);
      }
      if (HasCanSetName) {
        output.WriteRawTag(88);
        output.WriteBool(CanSetName);
      }
      if (HasCanSetDescription) {
        output.WriteRawTag(96);
        output.WriteBool(CanSetDescription);
      }
      if (HasCanSetAvatar) {
        output.WriteRawTag(104);
        output.WriteBool(CanSetAvatar);
      }
      if (HasCanSetBroadcast) {
        output.WriteRawTag(112);
        output.WriteBool(CanSetBroadcast);
      }
      if (HasCanSetPrivacyLevel) {
        output.WriteRawTag(120);
        output.WriteBool(CanSetPrivacyLevel);
      }
      if (HasCanAddMember) {
        output.WriteRawTag(232, 1);
        output.WriteBool(CanAddMember);
      }
      if (HasCanKickMember) {
        output.WriteRawTag(240, 1);
        output.WriteBool(CanKickMember);
      }
      if (HasCanSetOwnMemberAttribute) {
        output.WriteRawTag(248, 1);
        output.WriteBool(CanSetOwnMemberAttribute);
      }
      if (HasCanSetOtherMemberAttribute) {
        output.WriteRawTag(128, 2);
        output.WriteBool(CanSetOtherMemberAttribute);
      }
      if (HasCanSetOwnVoiceState) {
        output.WriteRawTag(136, 2);
        output.WriteBool(CanSetOwnVoiceState);
      }
      if (HasCanSetOwnPresenceLevel) {
        output.WriteRawTag(144, 2);
        output.WriteBool(CanSetOwnPresenceLevel);
      }
      if (HasCanSetOwnWhisperLevel) {
        output.WriteRawTag(152, 2);
        output.WriteBool(CanSetOwnWhisperLevel);
      }
      if (HasCanSetOwnMemberNote) {
        output.WriteRawTag(160, 2);
        output.WriteBool(CanSetOwnMemberNote);
      }
      if (HasCanSetOtherMemberNote) {
        output.WriteRawTag(168, 2);
        output.WriteBool(CanSetOtherMemberNote);
      }
      if (HasCanUseVoice) {
        output.WriteRawTag(144, 3);
        output.WriteBool(CanUseVoice);
      }
      if (HasCanVoiceMuteMemberForAll) {
        output.WriteRawTag(152, 3);
        output.WriteBool(CanVoiceMuteMemberForAll);
      }
      if (HasCanGetInvitation) {
        output.WriteRawTag(176, 4);
        output.WriteBool(CanGetInvitation);
      }
      if (HasCanSendInvitation) {
        output.WriteRawTag(184, 4);
        output.WriteBool(CanSendInvitation);
      }
      if (HasCanSendGuestInvitation) {
        output.WriteRawTag(192, 4);
        output.WriteBool(CanSendGuestInvitation);
      }
      if (HasCanRevokeOwnInvitation) {
        output.WriteRawTag(200, 4);
        output.WriteBool(CanRevokeOwnInvitation);
      }
      if (HasCanRevokeOtherInvitation) {
        output.WriteRawTag(208, 4);
        output.WriteBool(CanRevokeOtherInvitation);
      }
      if (HasCanGetSuggestion) {
        output.WriteRawTag(208, 5);
        output.WriteBool(CanGetSuggestion);
      }
      if (HasCanSuggestMember) {
        output.WriteRawTag(216, 5);
        output.WriteBool(CanSuggestMember);
      }
      if (HasCanApproveMember) {
        output.WriteRawTag(224, 5);
        output.WriteBool(CanApproveMember);
      }
      if (HasCanGetTicket) {
        output.WriteRawTag(240, 6);
        output.WriteBool(CanGetTicket);
      }
      if (HasCanCreateTicket) {
        output.WriteRawTag(248, 6);
        output.WriteBool(CanCreateTicket);
      }
      if (HasCanDestroyTicket) {
        output.WriteRawTag(128, 7);
        output.WriteBool(CanDestroyTicket);
      }
      if (HasCanGetBan) {
        output.WriteRawTag(144, 8);
        output.WriteBool(CanGetBan);
      }
      if (HasCanAddBan) {
        output.WriteRawTag(152, 8);
        output.WriteBool(CanAddBan);
      }
      if (HasCanRemoveBan) {
        output.WriteRawTag(160, 8);
        output.WriteBool(CanRemoveBan);
      }
      if (HasCanCreateStream) {
        output.WriteRawTag(224, 8);
        output.WriteBool(CanCreateStream);
      }
      if (HasCanDestroyStream) {
        output.WriteRawTag(232, 8);
        output.WriteBool(CanDestroyStream);
      }
      if (HasCanSetStreamPosition) {
        output.WriteRawTag(240, 8);
        output.WriteBool(CanSetStreamPosition);
      }
      if (HasCanSetStreamAttribute) {
        output.WriteRawTag(248, 8);
        output.WriteBool(CanSetStreamAttribute);
      }
      if (HasCanSetStreamName) {
        output.WriteRawTag(128, 9);
        output.WriteBool(CanSetStreamName);
      }
      if (HasCanSetStreamSubject) {
        output.WriteRawTag(136, 9);
        output.WriteBool(CanSetStreamSubject);
      }
      if (HasCanSetStreamAccess) {
        output.WriteRawTag(144, 9);
        output.WriteBool(CanSetStreamAccess);
      }
      if (HasCanSetStreamVoiceLevel) {
        output.WriteRawTag(152, 9);
        output.WriteBool(CanSetStreamVoiceLevel);
      }
      if (HasCanCreateMessage) {
        output.WriteRawTag(160, 11);
        output.WriteBool(CanCreateMessage);
      }
      if (HasCanDestroyOwnMessage) {
        output.WriteRawTag(168, 11);
        output.WriteBool(CanDestroyOwnMessage);
      }
      if (HasCanDestroyOtherMessage) {
        output.WriteRawTag(176, 11);
        output.WriteBool(CanDestroyOtherMessage);
      }
      if (HasCanEditOwnMessage) {
        output.WriteRawTag(184, 11);
        output.WriteBool(CanEditOwnMessage);
      }
      if (HasCanPinMessage) {
        output.WriteRawTag(192, 11);
        output.WriteBool(CanPinMessage);
      }
      if (HasCanMentionAll) {
        output.WriteRawTag(200, 11);
        output.WriteBool(CanMentionAll);
      }
      if (HasCanMentionHere) {
        output.WriteRawTag(208, 11);
        output.WriteBool(CanMentionHere);
      }
      if (HasCanMentionMember) {
        output.WriteRawTag(216, 11);
        output.WriteBool(CanMentionMember);
      }
      if (HasCanMentionRole) {
        output.WriteRawTag(224, 11);
        output.WriteBool(CanMentionRole);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasCanDestroy) {
        size += 1 + 1;
      }
      if (HasCanSetAttribute) {
        size += 1 + 1;
      }
      if (HasCanSetName) {
        size += 1 + 1;
      }
      if (HasCanSetDescription) {
        size += 1 + 1;
      }
      if (HasCanSetAvatar) {
        size += 1 + 1;
      }
      if (HasCanSetBroadcast) {
        size += 1 + 1;
      }
      if (HasCanSetPrivacyLevel) {
        size += 1 + 1;
      }
      if (HasCanAddMember) {
        size += 2 + 1;
      }
      if (HasCanKickMember) {
        size += 2 + 1;
      }
      if (HasCanSetOwnMemberAttribute) {
        size += 2 + 1;
      }
      if (HasCanSetOtherMemberAttribute) {
        size += 2 + 1;
      }
      if (HasCanSetOwnVoiceState) {
        size += 2 + 1;
      }
      if (HasCanSetOwnPresenceLevel) {
        size += 2 + 1;
      }
      if (HasCanSetOwnWhisperLevel) {
        size += 2 + 1;
      }
      if (HasCanSetOwnMemberNote) {
        size += 2 + 1;
      }
      if (HasCanSetOtherMemberNote) {
        size += 2 + 1;
      }
      if (HasCanUseVoice) {
        size += 2 + 1;
      }
      if (HasCanVoiceMuteMemberForAll) {
        size += 2 + 1;
      }
      if (HasCanGetInvitation) {
        size += 2 + 1;
      }
      if (HasCanSendInvitation) {
        size += 2 + 1;
      }
      if (HasCanSendGuestInvitation) {
        size += 2 + 1;
      }
      if (HasCanRevokeOwnInvitation) {
        size += 2 + 1;
      }
      if (HasCanRevokeOtherInvitation) {
        size += 2 + 1;
      }
      if (HasCanGetSuggestion) {
        size += 2 + 1;
      }
      if (HasCanSuggestMember) {
        size += 2 + 1;
      }
      if (HasCanApproveMember) {
        size += 2 + 1;
      }
      if (HasCanGetTicket) {
        size += 2 + 1;
      }
      if (HasCanCreateTicket) {
        size += 2 + 1;
      }
      if (HasCanDestroyTicket) {
        size += 2 + 1;
      }
      if (HasCanGetBan) {
        size += 2 + 1;
      }
      if (HasCanAddBan) {
        size += 2 + 1;
      }
      if (HasCanRemoveBan) {
        size += 2 + 1;
      }
      if (HasCanCreateStream) {
        size += 2 + 1;
      }
      if (HasCanDestroyStream) {
        size += 2 + 1;
      }
      if (HasCanSetStreamPosition) {
        size += 2 + 1;
      }
      if (HasCanSetStreamAttribute) {
        size += 2 + 1;
      }
      if (HasCanSetStreamName) {
        size += 2 + 1;
      }
      if (HasCanSetStreamSubject) {
        size += 2 + 1;
      }
      if (HasCanSetStreamAccess) {
        size += 2 + 1;
      }
      if (HasCanSetStreamVoiceLevel) {
        size += 2 + 1;
      }
      if (HasCanCreateMessage) {
        size += 2 + 1;
      }
      if (HasCanDestroyOwnMessage) {
        size += 2 + 1;
      }
      if (HasCanDestroyOtherMessage) {
        size += 2 + 1;
      }
      if (HasCanEditOwnMessage) {
        size += 2 + 1;
      }
      if (HasCanPinMessage) {
        size += 2 + 1;
      }
      if (HasCanMentionAll) {
        size += 2 + 1;
      }
      if (HasCanMentionHere) {
        size += 2 + 1;
      }
      if (HasCanMentionMember) {
        size += 2 + 1;
      }
      if (HasCanMentionRole) {
        size += 2 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ClubPrivilegeSet other) {
      if (other == null) {
        return;
      }
      if (other.HasCanDestroy) {
        CanDestroy = other.CanDestroy;
      }
      if (other.HasCanSetAttribute) {
        CanSetAttribute = other.CanSetAttribute;
      }
      if (other.HasCanSetName) {
        CanSetName = other.CanSetName;
      }
      if (other.HasCanSetDescription) {
        CanSetDescription = other.CanSetDescription;
      }
      if (other.HasCanSetAvatar) {
        CanSetAvatar = other.CanSetAvatar;
      }
      if (other.HasCanSetBroadcast) {
        CanSetBroadcast = other.CanSetBroadcast;
      }
      if (other.HasCanSetPrivacyLevel) {
        CanSetPrivacyLevel = other.CanSetPrivacyLevel;
      }
      if (other.HasCanAddMember) {
        CanAddMember = other.CanAddMember;
      }
      if (other.HasCanKickMember) {
        CanKickMember = other.CanKickMember;
      }
      if (other.HasCanSetOwnMemberAttribute) {
        CanSetOwnMemberAttribute = other.CanSetOwnMemberAttribute;
      }
      if (other.HasCanSetOtherMemberAttribute) {
        CanSetOtherMemberAttribute = other.CanSetOtherMemberAttribute;
      }
      if (other.HasCanSetOwnVoiceState) {
        CanSetOwnVoiceState = other.CanSetOwnVoiceState;
      }
      if (other.HasCanSetOwnPresenceLevel) {
        CanSetOwnPresenceLevel = other.CanSetOwnPresenceLevel;
      }
      if (other.HasCanSetOwnWhisperLevel) {
        CanSetOwnWhisperLevel = other.CanSetOwnWhisperLevel;
      }
      if (other.HasCanSetOwnMemberNote) {
        CanSetOwnMemberNote = other.CanSetOwnMemberNote;
      }
      if (other.HasCanSetOtherMemberNote) {
        CanSetOtherMemberNote = other.CanSetOtherMemberNote;
      }
      if (other.HasCanUseVoice) {
        CanUseVoice = other.CanUseVoice;
      }
      if (other.HasCanVoiceMuteMemberForAll) {
        CanVoiceMuteMemberForAll = other.CanVoiceMuteMemberForAll;
      }
      if (other.HasCanGetInvitation) {
        CanGetInvitation = other.CanGetInvitation;
      }
      if (other.HasCanSendInvitation) {
        CanSendInvitation = other.CanSendInvitation;
      }
      if (other.HasCanSendGuestInvitation) {
        CanSendGuestInvitation = other.CanSendGuestInvitation;
      }
      if (other.HasCanRevokeOwnInvitation) {
        CanRevokeOwnInvitation = other.CanRevokeOwnInvitation;
      }
      if (other.HasCanRevokeOtherInvitation) {
        CanRevokeOtherInvitation = other.CanRevokeOtherInvitation;
      }
      if (other.HasCanGetSuggestion) {
        CanGetSuggestion = other.CanGetSuggestion;
      }
      if (other.HasCanSuggestMember) {
        CanSuggestMember = other.CanSuggestMember;
      }
      if (other.HasCanApproveMember) {
        CanApproveMember = other.CanApproveMember;
      }
      if (other.HasCanGetTicket) {
        CanGetTicket = other.CanGetTicket;
      }
      if (other.HasCanCreateTicket) {
        CanCreateTicket = other.CanCreateTicket;
      }
      if (other.HasCanDestroyTicket) {
        CanDestroyTicket = other.CanDestroyTicket;
      }
      if (other.HasCanGetBan) {
        CanGetBan = other.CanGetBan;
      }
      if (other.HasCanAddBan) {
        CanAddBan = other.CanAddBan;
      }
      if (other.HasCanRemoveBan) {
        CanRemoveBan = other.CanRemoveBan;
      }
      if (other.HasCanCreateStream) {
        CanCreateStream = other.CanCreateStream;
      }
      if (other.HasCanDestroyStream) {
        CanDestroyStream = other.CanDestroyStream;
      }
      if (other.HasCanSetStreamPosition) {
        CanSetStreamPosition = other.CanSetStreamPosition;
      }
      if (other.HasCanSetStreamAttribute) {
        CanSetStreamAttribute = other.CanSetStreamAttribute;
      }
      if (other.HasCanSetStreamName) {
        CanSetStreamName = other.CanSetStreamName;
      }
      if (other.HasCanSetStreamSubject) {
        CanSetStreamSubject = other.CanSetStreamSubject;
      }
      if (other.HasCanSetStreamAccess) {
        CanSetStreamAccess = other.CanSetStreamAccess;
      }
      if (other.HasCanSetStreamVoiceLevel) {
        CanSetStreamVoiceLevel = other.CanSetStreamVoiceLevel;
      }
      if (other.HasCanCreateMessage) {
        CanCreateMessage = other.CanCreateMessage;
      }
      if (other.HasCanDestroyOwnMessage) {
        CanDestroyOwnMessage = other.CanDestroyOwnMessage;
      }
      if (other.HasCanDestroyOtherMessage) {
        CanDestroyOtherMessage = other.CanDestroyOtherMessage;
      }
      if (other.HasCanEditOwnMessage) {
        CanEditOwnMessage = other.CanEditOwnMessage;
      }
      if (other.HasCanPinMessage) {
        CanPinMessage = other.CanPinMessage;
      }
      if (other.HasCanMentionAll) {
        CanMentionAll = other.CanMentionAll;
      }
      if (other.HasCanMentionHere) {
        CanMentionHere = other.CanMentionHere;
      }
      if (other.HasCanMentionMember) {
        CanMentionMember = other.CanMentionMember;
      }
      if (other.HasCanMentionRole) {
        CanMentionRole = other.CanMentionRole;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            CanDestroy = input.ReadBool();
            break;
          }
          case 80: {
            CanSetAttribute = input.ReadBool();
            break;
          }
          case 88: {
            CanSetName = input.ReadBool();
            break;
          }
          case 96: {
            CanSetDescription = input.ReadBool();
            break;
          }
          case 104: {
            CanSetAvatar = input.ReadBool();
            break;
          }
          case 112: {
            CanSetBroadcast = input.ReadBool();
            break;
          }
          case 120: {
            CanSetPrivacyLevel = input.ReadBool();
            break;
          }
          case 232: {
            CanAddMember = input.ReadBool();
            break;
          }
          case 240: {
            CanKickMember = input.ReadBool();
            break;
          }
          case 248: {
            CanSetOwnMemberAttribute = input.ReadBool();
            break;
          }
          case 256: {
            CanSetOtherMemberAttribute = input.ReadBool();
            break;
          }
          case 264: {
            CanSetOwnVoiceState = input.ReadBool();
            break;
          }
          case 272: {
            CanSetOwnPresenceLevel = input.ReadBool();
            break;
          }
          case 280: {
            CanSetOwnWhisperLevel = input.ReadBool();
            break;
          }
          case 288: {
            CanSetOwnMemberNote = input.ReadBool();
            break;
          }
          case 296: {
            CanSetOtherMemberNote = input.ReadBool();
            break;
          }
          case 400: {
            CanUseVoice = input.ReadBool();
            break;
          }
          case 408: {
            CanVoiceMuteMemberForAll = input.ReadBool();
            break;
          }
          case 560: {
            CanGetInvitation = input.ReadBool();
            break;
          }
          case 568: {
            CanSendInvitation = input.ReadBool();
            break;
          }
          case 576: {
            CanSendGuestInvitation = input.ReadBool();
            break;
          }
          case 584: {
            CanRevokeOwnInvitation = input.ReadBool();
            break;
          }
          case 592: {
            CanRevokeOtherInvitation = input.ReadBool();
            break;
          }
          case 720: {
            CanGetSuggestion = input.ReadBool();
            break;
          }
          case 728: {
            CanSuggestMember = input.ReadBool();
            break;
          }
          case 736: {
            CanApproveMember = input.ReadBool();
            break;
          }
          case 880: {
            CanGetTicket = input.ReadBool();
            break;
          }
          case 888: {
            CanCreateTicket = input.ReadBool();
            break;
          }
          case 896: {
            CanDestroyTicket = input.ReadBool();
            break;
          }
          case 1040: {
            CanGetBan = input.ReadBool();
            break;
          }
          case 1048: {
            CanAddBan = input.ReadBool();
            break;
          }
          case 1056: {
            CanRemoveBan = input.ReadBool();
            break;
          }
          case 1120: {
            CanCreateStream = input.ReadBool();
            break;
          }
          case 1128: {
            CanDestroyStream = input.ReadBool();
            break;
          }
          case 1136: {
            CanSetStreamPosition = input.ReadBool();
            break;
          }
          case 1144: {
            CanSetStreamAttribute = input.ReadBool();
            break;
          }
          case 1152: {
            CanSetStreamName = input.ReadBool();
            break;
          }
          case 1160: {
            CanSetStreamSubject = input.ReadBool();
            break;
          }
          case 1168: {
            CanSetStreamAccess = input.ReadBool();
            break;
          }
          case 1176: {
            CanSetStreamVoiceLevel = input.ReadBool();
            break;
          }
          case 1440: {
            CanCreateMessage = input.ReadBool();
            break;
          }
          case 1448: {
            CanDestroyOwnMessage = input.ReadBool();
            break;
          }
          case 1456: {
            CanDestroyOtherMessage = input.ReadBool();
            break;
          }
          case 1464: {
            CanEditOwnMessage = input.ReadBool();
            break;
          }
          case 1472: {
            CanPinMessage = input.ReadBool();
            break;
          }
          case 1480: {
            CanMentionAll = input.ReadBool();
            break;
          }
          case 1488: {
            CanMentionHere = input.ReadBool();
            break;
          }
          case 1496: {
            CanMentionMember = input.ReadBool();
            break;
          }
          case 1504: {
            CanMentionRole = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ClubRole : pb::IMessage<ClubRole> {
    private static readonly pb::MessageParser<ClubRole> _parser = new pb::MessageParser<ClubRole>(() => new ClubRole());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ClubRole> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bgs.Protocol.Club.V1.Client.ClubRoleReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClubRole() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClubRole(ClubRole other) : this() {
      _hasBits0 = other._hasBits0;
      id_ = other.id_;
      state_ = other.HasState ? other.state_.Clone() : null;
      privilege_ = other.HasPrivilege ? other.privilege_.Clone() : null;
      alwaysGrantStreamAccess_ = other.alwaysGrantStreamAccess_;
      allowInClubSlot_ = other.allowInClubSlot_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClubRole Clone() {
      return new ClubRole(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private readonly static uint IdDefaultValue = 0;

    private uint id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Id {
      get { if ((_hasBits0 & 1) != 0) { return id_; } else { return IdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        id_ = value;
      }
    }
    /// <summary>Gets whether the "id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "state" field.</summary>
    public const int StateFieldNumber = 2;
    private global::Bgs.Protocol.RoleState state_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bgs.Protocol.RoleState State {
      get { return state_; }
      set {
        state_ = value;
      }
    }
    /// <summary>Gets whether the state field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasState {
      get { return state_ != null; }
    }
    /// <summary>Clears the value of the state field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearState() {
      state_ = null;
    }

    /// <summary>Field number for the "privilege" field.</summary>
    public const int PrivilegeFieldNumber = 3;
    private global::Bgs.Protocol.Club.V1.Client.ClubPrivilegeSet privilege_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bgs.Protocol.Club.V1.Client.ClubPrivilegeSet Privilege {
      get { return privilege_; }
      set {
        privilege_ = value;
      }
    }
    /// <summary>Gets whether the privilege field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasPrivilege {
      get { return privilege_ != null; }
    }
    /// <summary>Clears the value of the privilege field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearPrivilege() {
      privilege_ = null;
    }

    /// <summary>Field number for the "always_grant_stream_access" field.</summary>
    public const int AlwaysGrantStreamAccessFieldNumber = 4;
    private readonly static bool AlwaysGrantStreamAccessDefaultValue = false;

    private bool alwaysGrantStreamAccess_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool AlwaysGrantStreamAccess {
      get { if ((_hasBits0 & 2) != 0) { return alwaysGrantStreamAccess_; } else { return AlwaysGrantStreamAccessDefaultValue; } }
      set {
        _hasBits0 |= 2;
        alwaysGrantStreamAccess_ = value;
      }
    }
    /// <summary>Gets whether the "always_grant_stream_access" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasAlwaysGrantStreamAccess {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "always_grant_stream_access" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearAlwaysGrantStreamAccess() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "allow_in_club_slot" field.</summary>
    public const int AllowInClubSlotFieldNumber = 5;
    private readonly static bool AllowInClubSlotDefaultValue = false;

    private bool allowInClubSlot_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool AllowInClubSlot {
      get { if ((_hasBits0 & 4) != 0) { return allowInClubSlot_; } else { return AllowInClubSlotDefaultValue; } }
      set {
        _hasBits0 |= 4;
        allowInClubSlot_ = value;
      }
    }
    /// <summary>Gets whether the "allow_in_club_slot" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasAllowInClubSlot {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "allow_in_club_slot" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearAllowInClubSlot() {
      _hasBits0 &= ~4;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ClubRole);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ClubRole other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (!object.Equals(State, other.State)) return false;
      if (!object.Equals(Privilege, other.Privilege)) return false;
      if (AlwaysGrantStreamAccess != other.AlwaysGrantStreamAccess) return false;
      if (AllowInClubSlot != other.AllowInClubSlot) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasId) hash ^= Id.GetHashCode();
      if (HasState) hash ^= State.GetHashCode();
      if (HasPrivilege) hash ^= Privilege.GetHashCode();
      if (HasAlwaysGrantStreamAccess) hash ^= AlwaysGrantStreamAccess.GetHashCode();
      if (HasAllowInClubSlot) hash ^= AllowInClubSlot.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasId) {
        output.WriteRawTag(8);
        output.WriteUInt32(Id);
      }
      if (HasState) {
        output.WriteRawTag(18);
        output.WriteMessage(State);
      }
      if (HasPrivilege) {
        output.WriteRawTag(26);
        output.WriteMessage(Privilege);
      }
      if (HasAlwaysGrantStreamAccess) {
        output.WriteRawTag(32);
        output.WriteBool(AlwaysGrantStreamAccess);
      }
      if (HasAllowInClubSlot) {
        output.WriteRawTag(40);
        output.WriteBool(AllowInClubSlot);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Id);
      }
      if (HasState) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(State);
      }
      if (HasPrivilege) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Privilege);
      }
      if (HasAlwaysGrantStreamAccess) {
        size += 1 + 1;
      }
      if (HasAllowInClubSlot) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ClubRole other) {
      if (other == null) {
        return;
      }
      if (other.HasId) {
        Id = other.Id;
      }
      if (other.HasState) {
        if (!HasState) {
          State = new global::Bgs.Protocol.RoleState();
        }
        State.MergeFrom(other.State);
      }
      if (other.HasPrivilege) {
        if (!HasPrivilege) {
          Privilege = new global::Bgs.Protocol.Club.V1.Client.ClubPrivilegeSet();
        }
        Privilege.MergeFrom(other.Privilege);
      }
      if (other.HasAlwaysGrantStreamAccess) {
        AlwaysGrantStreamAccess = other.AlwaysGrantStreamAccess;
      }
      if (other.HasAllowInClubSlot) {
        AllowInClubSlot = other.AllowInClubSlot;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadUInt32();
            break;
          }
          case 18: {
            if (!HasState) {
              State = new global::Bgs.Protocol.RoleState();
            }
            input.ReadMessage(State);
            break;
          }
          case 26: {
            if (!HasPrivilege) {
              Privilege = new global::Bgs.Protocol.Club.V1.Client.ClubPrivilegeSet();
            }
            input.ReadMessage(Privilege);
            break;
          }
          case 32: {
            AlwaysGrantStreamAccess = input.ReadBool();
            break;
          }
          case 40: {
            AllowInClubSlot = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ClubRoleSet : pb::IMessage<ClubRoleSet> {
    private static readonly pb::MessageParser<ClubRoleSet> _parser = new pb::MessageParser<ClubRoleSet>(() => new ClubRoleSet());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ClubRoleSet> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bgs.Protocol.Club.V1.Client.ClubRoleReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClubRoleSet() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClubRoleSet(ClubRoleSet other) : this() {
      _hasBits0 = other._hasBits0;
      role_ = other.role_.Clone();
      defaultRole_ = other.defaultRole_.Clone();
      assignmentRespectsRelegationChain_ = other.assignmentRespectsRelegationChain_;
      subtype_ = other.subtype_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClubRoleSet Clone() {
      return new ClubRoleSet(this);
    }

    /// <summary>Field number for the "role" field.</summary>
    public const int RoleFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Bgs.Protocol.Club.V1.Client.ClubRole> _repeated_role_codec
        = pb::FieldCodec.ForMessage(10, global::Bgs.Protocol.Club.V1.Client.ClubRole.Parser);
    private readonly pbc::RepeatedField<global::Bgs.Protocol.Club.V1.Client.ClubRole> role_ = new pbc::RepeatedField<global::Bgs.Protocol.Club.V1.Client.ClubRole>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Bgs.Protocol.Club.V1.Client.ClubRole> Role {
      get { return role_; }
    }

    /// <summary>Field number for the "default_role" field.</summary>
    public const int DefaultRoleFieldNumber = 5;
    private static readonly pb::FieldCodec<uint> _repeated_defaultRole_codec
        = pb::FieldCodec.ForUInt32(42);
    private readonly pbc::RepeatedField<uint> defaultRole_ = new pbc::RepeatedField<uint>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<uint> DefaultRole {
      get { return defaultRole_; }
    }

    /// <summary>Field number for the "assignment_respects_relegation_chain" field.</summary>
    public const int AssignmentRespectsRelegationChainFieldNumber = 6;
    private readonly static bool AssignmentRespectsRelegationChainDefaultValue = false;

    private bool assignmentRespectsRelegationChain_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool AssignmentRespectsRelegationChain {
      get { if ((_hasBits0 & 1) != 0) { return assignmentRespectsRelegationChain_; } else { return AssignmentRespectsRelegationChainDefaultValue; } }
      set {
        _hasBits0 |= 1;
        assignmentRespectsRelegationChain_ = value;
      }
    }
    /// <summary>Gets whether the "assignment_respects_relegation_chain" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasAssignmentRespectsRelegationChain {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "assignment_respects_relegation_chain" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearAssignmentRespectsRelegationChain() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "subtype" field.</summary>
    public const int SubtypeFieldNumber = 7;
    private readonly static string SubtypeDefaultValue = "";

    private string subtype_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Subtype {
      get { return subtype_ ?? SubtypeDefaultValue; }
      set {
        subtype_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "subtype" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasSubtype {
      get { return subtype_ != null; }
    }
    /// <summary>Clears the value of the "subtype" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearSubtype() {
      subtype_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ClubRoleSet);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ClubRoleSet other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!role_.Equals(other.role_)) return false;
      if(!defaultRole_.Equals(other.defaultRole_)) return false;
      if (AssignmentRespectsRelegationChain != other.AssignmentRespectsRelegationChain) return false;
      if (Subtype != other.Subtype) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= role_.GetHashCode();
      hash ^= defaultRole_.GetHashCode();
      if (HasAssignmentRespectsRelegationChain) hash ^= AssignmentRespectsRelegationChain.GetHashCode();
      if (HasSubtype) hash ^= Subtype.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      role_.WriteTo(output, _repeated_role_codec);
      defaultRole_.WriteTo(output, _repeated_defaultRole_codec);
      if (HasAssignmentRespectsRelegationChain) {
        output.WriteRawTag(48);
        output.WriteBool(AssignmentRespectsRelegationChain);
      }
      if (HasSubtype) {
        output.WriteRawTag(58);
        output.WriteString(Subtype);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += role_.CalculateSize(_repeated_role_codec);
      size += defaultRole_.CalculateSize(_repeated_defaultRole_codec);
      if (HasAssignmentRespectsRelegationChain) {
        size += 1 + 1;
      }
      if (HasSubtype) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Subtype);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ClubRoleSet other) {
      if (other == null) {
        return;
      }
      role_.Add(other.role_);
      defaultRole_.Add(other.defaultRole_);
      if (other.HasAssignmentRespectsRelegationChain) {
        AssignmentRespectsRelegationChain = other.AssignmentRespectsRelegationChain;
      }
      if (other.HasSubtype) {
        Subtype = other.Subtype;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            role_.AddEntriesFrom(input, _repeated_role_codec);
            break;
          }
          case 42:
          case 40: {
            defaultRole_.AddEntriesFrom(input, _repeated_defaultRole_codec);
            break;
          }
          case 48: {
            AssignmentRespectsRelegationChain = input.ReadBool();
            break;
          }
          case 58: {
            Subtype = input.ReadString();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
