// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: bgs/low/pb/client/api/client/v1/club_request.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Bgs.Protocol.Club.V1.Client {

  /// <summary>Holder for reflection information generated from bgs/low/pb/client/api/client/v1/club_request.proto</summary>
  public static partial class ClubRequestReflection {

    #region Descriptor
    /// <summary>File descriptor for bgs/low/pb/client/api/client/v1/club_request.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ClubRequestReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CjJiZ3MvbG93L3BiL2NsaWVudC9hcGkvY2xpZW50L3YxL2NsdWJfcmVxdWVz",
            "dC5wcm90bxIbYmdzLnByb3RvY29sLmNsdWIudjEuY2xpZW50GjBiZ3MvbG93",
            "L3BiL2NsaWVudC9hcGkvY2xpZW50L3YxL2NsdWJfdHlwZXMucHJvdG8aLmJn",
            "cy9sb3cvcGIvY2xpZW50L2FwaS9jb21tb24vdjEvY2x1Yl90YWcucHJvdG8a",
            "IWJncy9sb3cvcGIvY2xpZW50L3JwY190eXBlcy5wcm90bxo3YmdzL2xvdy9w",
            "Yi9jbGllbnQvZ2xvYmFsX2V4dGVuc2lvbnMvZmllbGRfb3B0aW9ucy5wcm90",
            "bxo5YmdzL2xvdy9wYi9jbGllbnQvZ2xvYmFsX2V4dGVuc2lvbnMvbWVzc2Fn",
            "ZV9vcHRpb25zLnByb3RvGjhiZ3MvbG93L3BiL2NsaWVudC9nbG9iYWxfZXh0",
            "ZW5zaW9ucy9tZXRob2Rfb3B0aW9ucy5wcm90bxo5YmdzL2xvdy9wYi9jbGll",
            "bnQvZ2xvYmFsX2V4dGVuc2lvbnMvc2VydmljZV9vcHRpb25zLnByb3RvIl0K",
            "EFN1YnNjcmliZVJlcXVlc3QSMAoIYWdlbnRfaWQYASABKAsyHi5iZ3MucHJv",
            "dG9jb2wuY2x1Yi52MS5NZW1iZXJJZBIXCgdjbHViX2lkGAIgASgEQgaC+SsC",
            "EAEiXwoSVW5zdWJzY3JpYmVSZXF1ZXN0EjAKCGFnZW50X2lkGAEgASgLMh4u",
            "YmdzLnByb3RvY29sLmNsdWIudjEuTWVtYmVySWQSFwoHY2x1Yl9pZBgCIAEo",
            "BEIGgvkrAhABIoIBCg1DcmVhdGVSZXF1ZXN0EjAKCGFnZW50X2lkGAEgASgL",
            "Mh4uYmdzLnByb3RvY29sLmNsdWIudjEuTWVtYmVySWQSPwoHb3B0aW9ucxgC",
            "IAEoCzIuLmJncy5wcm90b2NvbC5jbHViLnYxLmNsaWVudC5DbHViQ3JlYXRl",
            "T3B0aW9ucyIhCg5DcmVhdGVSZXNwb25zZRIPCgdjbHViX2lkGAEgASgEIlsK",
            "DkRlc3Ryb3lSZXF1ZXN0EjAKCGFnZW50X2lkGAEgASgLMh4uYmdzLnByb3Rv",
            "Y29sLmNsdWIudjEuTWVtYmVySWQSFwoHY2x1Yl9pZBgCIAEoBEIGgvkrAhAB",
            "ImIKFUdldERlc2NyaXB0aW9uUmVxdWVzdBIwCghhZ2VudF9pZBgBIAEoCzIe",
            "LmJncy5wcm90b2NvbC5jbHViLnYxLk1lbWJlcklkEhcKB2NsdWJfaWQYAiAB",
            "KARCBoL5KwIQASJNChZHZXREZXNjcmlwdGlvblJlc3BvbnNlEjMKBGNsdWIY",
            "ASABKAsyJS5iZ3MucHJvdG9jb2wuY2x1Yi52MS5DbHViRGVzY3JpcHRpb24i",
            "egoSR2V0Q2x1YlR5cGVSZXF1ZXN0EjAKCGFnZW50X2lkGAEgASgLMh4uYmdz",
            "LnByb3RvY29sLmNsdWIudjEuTWVtYmVySWQSMgoEdHlwZRgCIAEoCzIkLmJn",
            "cy5wcm90b2NvbC5jbHViLnYxLlVuaXF1ZUNsdWJUeXBlIsECChNHZXRDbHVi",
            "VHlwZVJlc3BvbnNlEjIKBHR5cGUYASABKAsyJC5iZ3MucHJvdG9jb2wuY2x1",
            "Yi52MS5VbmlxdWVDbHViVHlwZRI6Cghyb2xlX3NldBgCIAEoCzIoLmJncy5w",
            "cm90b2NvbC5jbHViLnYxLmNsaWVudC5DbHViUm9sZVNldBJACglyYW5nZV9z",
            "ZXQYAyABKAsyLS5iZ3MucHJvdG9jb2wuY2x1Yi52MS5jbGllbnQuQ2x1YlR5",
            "cGVSYW5nZVNldBI8ChBwbGF0Zm9ybV90YWdfc2V0GAQgAygLMiIuYmdzLnBy",
            "b3RvY29sLmNsdWIudjEuTG9jYWxpemVkVGFnEjoKDmN1c3RvbV90YWdfc2V0",
            "GAUgAygLMiIuYmdzLnByb3RvY29sLmNsdWIudjEuTG9jYWxpemVkVGFnIqMB",
            "ChZVcGRhdGVDbHViU3RhdGVSZXF1ZXN0EjAKCGFnZW50X2lkGAEgASgLMh4u",
            "YmdzLnByb3RvY29sLmNsdWIudjEuTWVtYmVySWQSFwoHY2x1Yl9pZBgCIAEo",
            "BEIGgvkrAhABEj4KB29wdGlvbnMYAyABKAsyLS5iZ3MucHJvdG9jb2wuY2x1",
            "Yi52MS5jbGllbnQuQ2x1YlN0YXRlT3B0aW9ucyKpAQoZVXBkYXRlQ2x1YlNl",
            "dHRpbmdzUmVxdWVzdBIwCghhZ2VudF9pZBgBIAEoCzIeLmJncy5wcm90b2Nv",
            "bC5jbHViLnYxLk1lbWJlcklkEhcKB2NsdWJfaWQYAiABKARCBoL5KwIQARJB",
            "CgdvcHRpb25zGAMgASgLMjAuYmdzLnByb3RvY29sLmNsdWIudjEuY2xpZW50",
            "LkNsdWJTZXR0aW5nc09wdGlvbnMioAEKEEFkZE1lbWJlclJlcXVlc3QSMAoI",
            "YWdlbnRfaWQYASABKAsyHi5iZ3MucHJvdG9jb2wuY2x1Yi52MS5NZW1iZXJJ",
            "ZBIXCgdjbHViX2lkGAIgASgEQgaC+SsCEAESQQoHb3B0aW9ucxgDIAEoCzIw",
            "LmJncy5wcm90b2NvbC5jbHViLnYxLmNsaWVudC5DcmVhdGVNZW1iZXJPcHRp",
            "b25zIpsBCgtKb2luUmVxdWVzdBIwCghhZ2VudF9pZBgBIAEoCzIeLmJncy5w",
            "cm90b2NvbC5jbHViLnYxLk1lbWJlcklkEhcKB2NsdWJfaWQYAiABKARCBoL5",
            "KwIQARJBCgdvcHRpb25zGAMgASgLMjAuYmdzLnByb3RvY29sLmNsdWIudjEu",
            "Y2xpZW50LkNyZWF0ZU1lbWJlck9wdGlvbnMiWQoMTGVhdmVSZXF1ZXN0EjAK",
            "CGFnZW50X2lkGAEgASgLMh4uYmdzLnByb3RvY29sLmNsdWIudjEuTWVtYmVy",
            "SWQSFwoHY2x1Yl9pZBgCIAEoBEIGgvkrAhABIosBCgtLaWNrUmVxdWVzdBIw",
            "CghhZ2VudF9pZBgBIAEoCzIeLmJncy5wcm90b2NvbC5jbHViLnYxLk1lbWJl",
            "cklkEhcKB2NsdWJfaWQYAiABKARCBoL5KwIQARIxCgl0YXJnZXRfaWQYAyAB",
            "KAsyHi5iZ3MucHJvdG9jb2wuY2x1Yi52MS5NZW1iZXJJZCKQAQoQR2V0TWVt",
            "YmVyUmVxdWVzdBIwCghhZ2VudF9pZBgBIAEoCzIeLmJncy5wcm90b2NvbC5j",
            "bHViLnYxLk1lbWJlcklkEhcKB2NsdWJfaWQYAiABKARCBoL5KwIQARIxCglt",
            "ZW1iZXJfaWQYAyABKAsyHi5iZ3MucHJvdG9jb2wuY2x1Yi52MS5NZW1iZXJJ",
            "ZCJIChFHZXRNZW1iZXJSZXNwb25zZRIzCgZtZW1iZXIYASABKAsyIy5iZ3Mu",
            "cHJvdG9jb2wuY2x1Yi52MS5jbGllbnQuTWVtYmVyInQKEUdldE1lbWJlcnNS",
            "ZXF1ZXN0EjAKCGFnZW50X2lkGAEgASgLMh4uYmdzLnByb3RvY29sLmNsdWIu",
            "djEuTWVtYmVySWQSFwoHY2x1Yl9pZBgCIAEoBEIGgvkrAhABEhQKDGNvbnRp",
            "bnVhdGlvbhgEIAEoBCJfChJHZXRNZW1iZXJzUmVzcG9uc2USMwoGbWVtYmVy",
            "GAEgAygLMiMuYmdzLnByb3RvY29sLmNsdWIudjEuY2xpZW50Lk1lbWJlchIU",
            "Cgxjb250aW51YXRpb24YAiABKAQi2gEKGFVwZGF0ZU1lbWJlclN0YXRlUmVx",
            "dWVzdBIwCghhZ2VudF9pZBgBIAEoCzIeLmJncy5wcm90b2NvbC5jbHViLnYx",
            "Lk1lbWJlcklkEhcKB2NsdWJfaWQYAiABKARCBoL5KwIQARIxCgltZW1iZXJf",
            "aWQYAyABKAsyHi5iZ3MucHJvdG9jb2wuY2x1Yi52MS5NZW1iZXJJZBJACgdv",
            "cHRpb25zGAUgASgLMi8uYmdzLnByb3RvY29sLmNsdWIudjEuY2xpZW50Lk1l",
            "bWJlclN0YXRlT3B0aW9ucyKvAQocVXBkYXRlU3Vic2NyaWJlclN0YXRlUmVx",
            "dWVzdBIwCghhZ2VudF9pZBgBIAEoCzIeLmJncy5wcm90b2NvbC5jbHViLnYx",
            "Lk1lbWJlcklkEhcKB2NsdWJfaWQYAiABKARCBoL5KwIQARJECgdvcHRpb25z",
            "GAMgASgLMjMuYmdzLnByb3RvY29sLmNsdWIudjEuY2xpZW50LlN1YnNjcmli",
            "ZXJTdGF0ZU9wdGlvbnMimQEKEUFzc2lnblJvbGVSZXF1ZXN0EjAKCGFnZW50",
            "X2lkGAEgASgLMh4uYmdzLnByb3RvY29sLmNsdWIudjEuTWVtYmVySWQSFwoH",
            "Y2x1Yl9pZBgCIAEoBEIGgvkrAhABEjkKB29wdGlvbnMYAyABKAsyKC5iZ3Mu",
            "cHJvdG9jb2wuY2x1Yi52MS5jbGllbnQuUm9sZU9wdGlvbnMimwEKE1VuYXNz",
            "aWduUm9sZVJlcXVlc3QSMAoIYWdlbnRfaWQYASABKAsyHi5iZ3MucHJvdG9j",
            "b2wuY2x1Yi52MS5NZW1iZXJJZBIXCgdjbHViX2lkGAIgASgEQgaC+SsCEAES",
            "OQoHb3B0aW9ucxgDIAEoCzIoLmJncy5wcm90b2NvbC5jbHViLnYxLmNsaWVu",
            "dC5Sb2xlT3B0aW9ucyKnAQoVU2VuZEludml0YXRpb25SZXF1ZXN0EjAKCGFn",
            "ZW50X2lkGAEgASgLMh4uYmdzLnByb3RvY29sLmNsdWIudjEuTWVtYmVySWQS",
            "FwoHY2x1Yl9pZBgCIAEoBEIGgvkrAhABEkMKB29wdGlvbnMYAyABKAsyMi5i",
            "Z3MucHJvdG9jb2wuY2x1Yi52MS5jbGllbnQuU2VuZEludml0YXRpb25PcHRp",
            "b25zInsKF0FjY2VwdEludml0YXRpb25SZXF1ZXN0EjAKCGFnZW50X2lkGAEg",
            "ASgLMh4uYmdzLnByb3RvY29sLmNsdWIudjEuTWVtYmVySWQSFwoHY2x1Yl9p",
            "ZBgCIAEoBEIGgvkrAhABEhUKDWludml0YXRpb25faWQYAyABKAYifAoYRGVj",
            "bGluZUludml0YXRpb25SZXF1ZXN0EjAKCGFnZW50X2lkGAEgASgLMh4uYmdz",
            "LnByb3RvY29sLmNsdWIudjEuTWVtYmVySWQSFwoHY2x1Yl9pZBgCIAEoBEIG",
            "gvkrAhABEhUKDWludml0YXRpb25faWQYAyABKAYiewoXUmV2b2tlSW52aXRh",
            "dGlvblJlcXVlc3QSMAoIYWdlbnRfaWQYASABKAsyHi5iZ3MucHJvdG9jb2wu",
            "Y2x1Yi52MS5NZW1iZXJJZBIXCgdjbHViX2lkGAIgASgEQgaC+SsCEAESFQoN",
            "aW52aXRhdGlvbl9pZBgDIAEoBiJ4ChRHZXRJbnZpdGF0aW9uUmVxdWVzdBIw",
            "CghhZ2VudF9pZBgBIAEoCzIeLmJncy5wcm90b2NvbC5jbHViLnYxLk1lbWJl",
            "cklkEhcKB2NsdWJfaWQYAiABKARCBoL5KwIQARIVCg1pbnZpdGF0aW9uX2lk",
            "GAMgASgGIlgKFUdldEludml0YXRpb25SZXNwb25zZRI/CgppbnZpdGF0aW9u",
            "GAEgASgLMisuYmdzLnByb3RvY29sLmNsdWIudjEuY2xpZW50LkNsdWJJbnZp",
            "dGF0aW9uIngKFUdldEludml0YXRpb25zUmVxdWVzdBIwCghhZ2VudF9pZBgB",
            "IAEoCzIeLmJncy5wcm90b2NvbC5jbHViLnYxLk1lbWJlcklkEhcKB2NsdWJf",
            "aWQYAiABKARCBoL5KwIQARIUCgxjb250aW51YXRpb24YAyABKAQibwoWR2V0",
            "SW52aXRhdGlvbnNSZXNwb25zZRI/CgppbnZpdGF0aW9uGAEgAygLMisuYmdz",
            "LnByb3RvY29sLmNsdWIudjEuY2xpZW50LkNsdWJJbnZpdGF0aW9uEhQKDGNv",
            "bnRpbnVhdGlvbhgCIAEoBCKnAQoVU2VuZFN1Z2dlc3Rpb25SZXF1ZXN0EjAK",
            "CGFnZW50X2lkGAEgASgLMh4uYmdzLnByb3RvY29sLmNsdWIudjEuTWVtYmVy",
            "SWQSFwoHY2x1Yl9pZBgCIAEoBEIGgvkrAhABEkMKB29wdGlvbnMYAyABKAsy",
            "Mi5iZ3MucHJvdG9jb2wuY2x1Yi52MS5jbGllbnQuU2VuZFN1Z2dlc3Rpb25P",
            "cHRpb25zInsKF0FjY2VwdFN1Z2dlc3Rpb25SZXF1ZXN0EjAKCGFnZW50X2lk",
            "GAEgASgLMh4uYmdzLnByb3RvY29sLmNsdWIudjEuTWVtYmVySWQSFwoHY2x1",
            "Yl9pZBgCIAEoBEIGgvkrAhABEhUKDXN1Z2dlc3Rpb25faWQYAyABKAYifAoY",
            "RGVjbGluZVN1Z2dlc3Rpb25SZXF1ZXN0EjAKCGFnZW50X2lkGAEgASgLMh4u",
            "YmdzLnByb3RvY29sLmNsdWIudjEuTWVtYmVySWQSFwoHY2x1Yl9pZBgCIAEo",
            "BEIGgvkrAhABEhUKDXN1Z2dlc3Rpb25faWQYAyABKAYieAoUR2V0U3VnZ2Vz",
            "dGlvblJlcXVlc3QSMAoIYWdlbnRfaWQYASABKAsyHi5iZ3MucHJvdG9jb2wu",
            "Y2x1Yi52MS5NZW1iZXJJZBIXCgdjbHViX2lkGAIgASgEQgaC+SsCEAESFQoN",
            "c3VnZ2VzdGlvbl9pZBgDIAEoBiJYChVHZXRTdWdnZXN0aW9uUmVzcG9uc2US",
            "PwoKc3VnZ2VzdGlvbhgBIAEoCzIrLmJncy5wcm90b2NvbC5jbHViLnYxLmNs",
            "aWVudC5DbHViU3VnZ2VzdGlvbiJ4ChVHZXRTdWdnZXN0aW9uc1JlcXVlc3QS",
            "MAoIYWdlbnRfaWQYASABKAsyHi5iZ3MucHJvdG9jb2wuY2x1Yi52MS5NZW1i",
            "ZXJJZBIXCgdjbHViX2lkGAIgASgEQgaC+SsCEAESFAoMY29udGludWF0aW9u",
            "GAMgASgEIm8KFkdldFN1Z2dlc3Rpb25zUmVzcG9uc2USPwoKc3VnZ2VzdGlv",
            "bhgBIAMoCzIrLmJncy5wcm90b2NvbC5jbHViLnYxLmNsaWVudC5DbHViU3Vn",
            "Z2VzdGlvbhIUCgxjb250aW51YXRpb24YAiABKAQiowEKE0NyZWF0ZVRpY2tl",
            "dFJlcXVlc3QSMAoIYWdlbnRfaWQYASABKAsyHi5iZ3MucHJvdG9jb2wuY2x1",
            "Yi52MS5NZW1iZXJJZBIXCgdjbHViX2lkGAIgASgEQgaC+SsCEAESQQoHb3B0",
            "aW9ucxgDIAEoCzIwLmJncy5wcm90b2NvbC5jbHViLnYxLmNsaWVudC5DcmVh",
            "dGVUaWNrZXRPcHRpb25zIk8KFENyZWF0ZVRpY2tldFJlc3BvbnNlEjcKBnRp",
            "Y2tldBgBIAEoCzInLmJncy5wcm90b2NvbC5jbHViLnYxLmNsaWVudC5DbHVi",
            "VGlja2V0InQKFERlc3Ryb3lUaWNrZXRSZXF1ZXN0EjAKCGFnZW50X2lkGAEg",
            "ASgLMh4uYmdzLnByb3RvY29sLmNsdWIudjEuTWVtYmVySWQSFwoHY2x1Yl9p",
            "ZBgCIAEoBEIGgvkrAhABEhEKCXRpY2tldF9pZBgDIAEoCSJaChNSZWRlZW1U",
            "aWNrZXRSZXF1ZXN0EjAKCGFnZW50X2lkGAEgASgLMh4uYmdzLnByb3RvY29s",
            "LmNsdWIudjEuTWVtYmVySWQSEQoJdGlja2V0X2lkGAMgASgJIlcKEEdldFRp",
            "Y2tldFJlcXVlc3QSMAoIYWdlbnRfaWQYASABKAsyHi5iZ3MucHJvdG9jb2wu",
            "Y2x1Yi52MS5NZW1iZXJJZBIRCgl0aWNrZXRfaWQYAyABKAkiTAoRR2V0VGlj",
            "a2V0UmVzcG9uc2USNwoGdGlja2V0GAEgASgLMicuYmdzLnByb3RvY29sLmNs",
            "dWIudjEuY2xpZW50LkNsdWJUaWNrZXQidAoRR2V0VGlja2V0c1JlcXVlc3QS",
            "MAoIYWdlbnRfaWQYASABKAsyHi5iZ3MucHJvdG9jb2wuY2x1Yi52MS5NZW1i",
            "ZXJJZBIXCgdjbHViX2lkGAIgASgEQgaC+SsCEAESFAoMY29udGludWF0aW9u",
            "GAMgASgEImMKEkdldFRpY2tldHNSZXNwb25zZRI3CgZ0aWNrZXQYASADKAsy",
            "Jy5iZ3MucHJvdG9jb2wuY2x1Yi52MS5jbGllbnQuQ2x1YlRpY2tldBIUCgxj",
            "b250aW51YXRpb24YAiABKAQilwEKDUFkZEJhblJlcXVlc3QSMAoIYWdlbnRf",
            "aWQYASABKAsyHi5iZ3MucHJvdG9jb2wuY2x1Yi52MS5NZW1iZXJJZBIXCgdj",
            "bHViX2lkGAIgASgEQgaC+SsCEAESOwoHb3B0aW9ucxgDIAEoCzIqLmJncy5w",
            "cm90b2NvbC5jbHViLnYxLmNsaWVudC5BZGRCYW5PcHRpb25zIpABChBSZW1v",
            "dmVCYW5SZXF1ZXN0EjAKCGFnZW50X2lkGAEgASgLMh4uYmdzLnByb3RvY29s",
            "LmNsdWIudjEuTWVtYmVySWQSFwoHY2x1Yl9pZBgCIAEoBEIGgvkrAhABEjEK",
            "CXRhcmdldF9pZBgDIAEoCzIeLmJncy5wcm90b2NvbC5jbHViLnYxLk1lbWJl",
            "cklkIo0BCg1HZXRCYW5SZXF1ZXN0EjAKCGFnZW50X2lkGAEgASgLMh4uYmdz",
            "LnByb3RvY29sLmNsdWIudjEuTWVtYmVySWQSFwoHY2x1Yl9pZBgCIAEoBEIG",
            "gvkrAhABEjEKCXRhcmdldF9pZBgDIAEoCzIeLmJncy5wcm90b2NvbC5jbHVi",
            "LnYxLk1lbWJlcklkIkMKDkdldEJhblJlc3BvbnNlEjEKA2JhbhgBIAEoCzIk",
            "LmJncy5wcm90b2NvbC5jbHViLnYxLmNsaWVudC5DbHViQmFuInEKDkdldEJh",
            "bnNSZXF1ZXN0EjAKCGFnZW50X2lkGAEgASgLMh4uYmdzLnByb3RvY29sLmNs",
            "dWIudjEuTWVtYmVySWQSFwoHY2x1Yl9pZBgCIAEoBEIGgvkrAhABEhQKDGNv",
            "bnRpbnVhdGlvbhgDIAEoBCJaCg9HZXRCYW5zUmVzcG9uc2USMQoDYmFuGAEg",
            "AygLMiQuYmdzLnByb3RvY29sLmNsdWIudjEuY2xpZW50LkNsdWJCYW4SFAoM",
            "Y29udGludWF0aW9uGAIgASgEInYKFlN1YnNjcmliZVN0cmVhbVJlcXVlc3QS",
            "MAoIYWdlbnRfaWQYASABKAsyHi5iZ3MucHJvdG9jb2wuY2x1Yi52MS5NZW1i",
            "ZXJJZBIXCgdjbHViX2lkGAIgASgEQgaC+SsCEAESEQoJc3RyZWFtX2lkGAMg",
            "AygEIngKGFVuc3Vic2NyaWJlU3RyZWFtUmVxdWVzdBIwCghhZ2VudF9pZBgB",
            "IAEoCzIeLmJncy5wcm90b2NvbC5jbHViLnYxLk1lbWJlcklkEhcKB2NsdWJf",
            "aWQYAiABKARCBoL5KwIQARIRCglzdHJlYW1faWQYAyADKAQiowEKE0NyZWF0",
            "ZVN0cmVhbVJlcXVlc3QSMAoIYWdlbnRfaWQYASABKAsyHi5iZ3MucHJvdG9j",
            "b2wuY2x1Yi52MS5NZW1iZXJJZBIXCgdjbHViX2lkGAIgASgEQgaC+SsCEAES",
            "QQoHb3B0aW9ucxgDIAEoCzIwLmJncy5wcm90b2NvbC5jbHViLnYxLmNsaWVu",
            "dC5DcmVhdGVTdHJlYW1PcHRpb25zIjoKFENyZWF0ZVN0cmVhbVJlc3BvbnNl",
            "Eg8KB2NsdWJfaWQYASABKAQSEQoJc3RyZWFtX2lkGAIgASgEInQKFERlc3Ry",
            "b3lTdHJlYW1SZXF1ZXN0EjAKCGFnZW50X2lkGAEgASgLMh4uYmdzLnByb3Rv",
            "Y29sLmNsdWIudjEuTWVtYmVySWQSFwoHY2x1Yl9pZBgCIAEoBEIGgvkrAhAB",
            "EhEKCXN0cmVhbV9pZBgDIAEoBCJwChBHZXRTdHJlYW1SZXF1ZXN0EjAKCGFn",
            "ZW50X2lkGAEgASgLMh4uYmdzLnByb3RvY29sLmNsdWIudjEuTWVtYmVySWQS",
            "FwoHY2x1Yl9pZBgCIAEoBEIGgvkrAhABEhEKCXN0cmVhbV9pZBgDIAEoBCJI",
            "ChFHZXRTdHJlYW1SZXNwb25zZRIzCgZzdHJlYW0YASABKAsyIy5iZ3MucHJv",
            "dG9jb2wuY2x1Yi52MS5jbGllbnQuU3RyZWFtInQKEUdldFN0cmVhbXNSZXF1",
            "ZXN0EjAKCGFnZW50X2lkGAEgASgLMh4uYmdzLnByb3RvY29sLmNsdWIudjEu",
            "TWVtYmVySWQSFwoHY2x1Yl9pZBgCIAEoBEIGgvkrAhABEhQKDGNvbnRpbnVh",
            "dGlvbhgDIAEoBCKWAQoSR2V0U3RyZWFtc1Jlc3BvbnNlEjMKBnN0cmVhbRgB",
            "IAMoCzIjLmJncy5wcm90b2NvbC5jbHViLnYxLmNsaWVudC5TdHJlYW0SNQoE",
            "dmlldxgCIAMoCzInLmJncy5wcm90b2NvbC5jbHViLnYxLmNsaWVudC5TdHJl",
            "YW1WaWV3EhQKDGNvbnRpbnVhdGlvbhgDIAEoBCK6AQoYVXBkYXRlU3RyZWFt",
            "U3RhdGVSZXF1ZXN0EjAKCGFnZW50X2lkGAEgASgLMh4uYmdzLnByb3RvY29s",
            "LmNsdWIudjEuTWVtYmVySWQSFwoHY2x1Yl9pZBgCIAEoBEIGgvkrAhABEhEK",
            "CXN0cmVhbV9pZBgDIAEoBBJACgdvcHRpb25zGAUgASgLMi8uYmdzLnByb3Rv",
            "Y29sLmNsdWIudjEuY2xpZW50LlN0cmVhbVN0YXRlT3B0aW9ucyKEAQoVU2V0",
            "U3RyZWFtRm9jdXNSZXF1ZXN0EjAKCGFnZW50X2lkGAEgASgLMh4uYmdzLnBy",
            "b3RvY29sLmNsdWIudjEuTWVtYmVySWQSFwoHY2x1Yl9pZBgCIAEoBEIGgvkr",
            "AhABEhEKCXN0cmVhbV9pZBgDIAEoBBINCgVmb2N1cxgEIAEoCCK4AQoUQ3Jl",
            "YXRlTWVzc2FnZVJlcXVlc3QSMAoIYWdlbnRfaWQYASABKAsyHi5iZ3MucHJv",
            "dG9jb2wuY2x1Yi52MS5NZW1iZXJJZBIXCgdjbHViX2lkGAIgASgEQgaC+SsC",
            "EAESEQoJc3RyZWFtX2lkGAMgASgEEkIKB29wdGlvbnMYBCABKAsyMS5iZ3Mu",
            "cHJvdG9jb2wuY2x1Yi52MS5jbGllbnQuQ3JlYXRlTWVzc2FnZU9wdGlvbnMi",
            "VAoVQ3JlYXRlTWVzc2FnZVJlc3BvbnNlEjsKB21lc3NhZ2UYASABKAsyKi5i",
            "Z3MucHJvdG9jb2wuY2x1Yi52MS5jbGllbnQuU3RyZWFtTWVzc2FnZSKiAQoV",
            "RGVzdHJveU1lc3NhZ2VSZXF1ZXN0EjAKCGFnZW50X2lkGAEgASgLMh4uYmdz",
            "LnByb3RvY29sLmNsdWIudjEuTWVtYmVySWQSFwoHY2x1Yl9pZBgCIAEoBEIG",
            "gvkrAhABEhEKCXN0cmVhbV9pZBgDIAEoBBIrCgptZXNzYWdlX2lkGAQgASgL",
            "MhcuYmdzLnByb3RvY29sLk1lc3NhZ2VJZCJVChZEZXN0cm95TWVzc2FnZVJl",
            "c3BvbnNlEjsKB21lc3NhZ2UYASABKAsyKi5iZ3MucHJvdG9jb2wuY2x1Yi52",
            "MS5jbGllbnQuU3RyZWFtTWVzc2FnZSLjAQoSRWRpdE1lc3NhZ2VSZXF1ZXN0",
            "EjAKCGFnZW50X2lkGAEgASgLMh4uYmdzLnByb3RvY29sLmNsdWIudjEuTWVt",
            "YmVySWQSFwoHY2x1Yl9pZBgCIAEoBEIGgvkrAhABEhEKCXN0cmVhbV9pZBgD",
            "IAEoBBIrCgptZXNzYWdlX2lkGAQgASgLMhcuYmdzLnByb3RvY29sLk1lc3Nh",
            "Z2VJZBJCCgdvcHRpb25zGAUgASgLMjEuYmdzLnByb3RvY29sLmNsdWIudjEu",
            "Y2xpZW50LkNyZWF0ZU1lc3NhZ2VPcHRpb25zIlIKE0VkaXRNZXNzYWdlUmVz",
            "cG9uc2USOwoHbWVzc2FnZRgBIAEoCzIqLmJncy5wcm90b2NvbC5jbHViLnYx",
            "LmNsaWVudC5TdHJlYW1NZXNzYWdlIncKF1NldE1lc3NhZ2VQaW5uZWRSZXF1",
            "ZXN0EjAKCGFnZW50X2lkGAEgASgLMh4uYmdzLnByb3RvY29sLmNsdWIudjEu",
            "TWVtYmVySWQSFwoHY2x1Yl9pZBgCIAEoBEIGgvkrAhABEhEKCXN0cmVhbV9p",
            "ZBgDIAEoBCK5AQoZU2V0VHlwaW5nSW5kaWNhdG9yUmVxdWVzdBIwCghhZ2Vu",
            "dF9pZBgBIAEoCzIeLmJncy5wcm90b2NvbC5jbHViLnYxLk1lbWJlcklkEhcK",
            "B2NsdWJfaWQYAiABKARCBoL5KwIQARIRCglzdHJlYW1faWQYAyABKAQSPgoJ",
            "aW5kaWNhdG9yGAQgASgOMh0uYmdzLnByb3RvY29sLlR5cGluZ0luZGljYXRv",
            "cjoMVFlQSU5HX1NUQVJUIqIBChxBZHZhbmNlU3RyZWFtVmlld1RpbWVSZXF1",
            "ZXN0EjAKCGFnZW50X2lkGAEgASgLMh4uYmdzLnByb3RvY29sLmNsdWIudjEu",
            "TWVtYmVySWQSFwoHY2x1Yl9pZBgCIAEoBEIGgvkrAhABEiAKFHN0cmVhbV9p",
            "ZF9kZXByZWNhdGVkGAMgASgEQgIYARIVCglzdHJlYW1faWQYBCADKARCAhAB",
            "IoMBCiNBZHZhbmNlU3RyZWFtTWVudGlvblZpZXdUaW1lUmVxdWVzdBIwCghh",
            "Z2VudF9pZBgBIAEoCzIeLmJncy5wcm90b2NvbC5jbHViLnYxLk1lbWJlcklk",
            "EhcKB2NsdWJfaWQYAiABKARCBoL5KwIQARIRCglzdHJlYW1faWQYAyABKAQi",
            "awoeQWR2YW5jZUFjdGl2aXR5Vmlld1RpbWVSZXF1ZXN0EjAKCGFnZW50X2lk",
            "GAEgASgLMh4uYmdzLnByb3RvY29sLmNsdWIudjEuTWVtYmVySWQSFwoHY2x1",
            "Yl9pZBgCIAEoBEIGgvkrAhABIqcBChdHZXRTdHJlYW1IaXN0b3J5UmVxdWVz",
            "dBIwCghhZ2VudF9pZBgBIAEoCzIeLmJncy5wcm90b2NvbC5jbHViLnYxLk1l",
            "bWJlcklkEhcKB2NsdWJfaWQYAiABKARCBoL5KwIQARIRCglzdHJlYW1faWQY",
            "AyABKAQSLgoHb3B0aW9ucxgEIAEoCzIdLmJncy5wcm90b2NvbC5HZXRFdmVu",
            "dE9wdGlvbnMibQoYR2V0U3RyZWFtSGlzdG9yeVJlc3BvbnNlEjsKB21lc3Nh",
            "Z2UYASADKAsyKi5iZ3MucHJvdG9jb2wuY2x1Yi52MS5jbGllbnQuU3RyZWFt",
            "TWVzc2FnZRIUCgxjb250aW51YXRpb24YAiABKAQipAEKF0dldFN0cmVhbU1l",
            "c3NhZ2VSZXF1ZXN0EjAKCGFnZW50X2lkGAEgASgLMh4uYmdzLnByb3RvY29s",
            "LmNsdWIudjEuTWVtYmVySWQSFwoHY2x1Yl9pZBgCIAEoBEIGgvkrAhABEhEK",
            "CXN0cmVhbV9pZBgDIAEoBBIrCgptZXNzYWdlX2lkGAQgASgLMhcuYmdzLnBy",
            "b3RvY29sLk1lc3NhZ2VJZCJXChhHZXRTdHJlYW1NZXNzYWdlUmVzcG9uc2US",
            "OwoHbWVzc2FnZRgBIAEoCzIqLmJncy5wcm90b2NvbC5jbHViLnYxLmNsaWVu",
            "dC5TdHJlYW1NZXNzYWdlIpMBChZHZXRDbHViQWN0aXZpdHlSZXF1ZXN0EjAK",
            "CGFnZW50X2lkGAEgASgLMh4uYmdzLnByb3RvY29sLmNsdWIudjEuTWVtYmVy",
            "SWQSFwoHY2x1Yl9pZBgCIAEoBEIGgvkrAhABEi4KB29wdGlvbnMYAyABKAsy",
            "HS5iZ3MucHJvdG9jb2wuR2V0RXZlbnRPcHRpb25zIi8KF0dldENsdWJBY3Rp",
            "dml0eVJlc3BvbnNlEhQKDGNvbnRpbnVhdGlvbhgCIAEoBCKpAQoaR2V0U3Ry",
            "ZWFtVm9pY2VUb2tlblJlcXVlc3QSMAoIYWdlbnRfaWQYASABKAsyHi5iZ3Mu",
            "cHJvdG9jb2wuY2x1Yi52MS5NZW1iZXJJZBIXCgdjbHViX2lkGAIgASgEQgaC",
            "+SsCEAESEQoJc3RyZWFtX2lkGAMgASgEEi0KB3ZlcnNpb24YBCABKA1CHBgB",
            "gvkrFioUVm9pY2VQcm92aWRlclZlcnNpb24icAobR2V0U3RyZWFtVm9pY2VU",
            "b2tlblJlc3BvbnNlEhMKC2NoYW5uZWxfdXJpGAEgASgJEjwKC2NyZWRlbnRp",
            "YWxzGAIgASgLMicuYmdzLnByb3RvY29sLnZvaWNlLnYxLlZvaWNlQ3JlZGVu",
            "dGlhbHMirQEKGktpY2tGcm9tU3RyZWFtVm9pY2VSZXF1ZXN0EjAKCGFnZW50",
            "X2lkGAEgASgLMh4uYmdzLnByb3RvY29sLmNsdWIudjEuTWVtYmVySWQSFwoH",
            "Y2x1Yl9pZBgCIAEoBEIGgvkrAhABEhEKCXN0cmVhbV9pZBgDIAEoBBIxCgl0",
            "YXJnZXRfaWQYBCABKAsyHi5iZ3MucHJvdG9jb2wuY2x1Yi52MS5NZW1iZXJJ",
            "ZFAAUAE="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Bgs.Protocol.Club.V1.Client.ClubTypesReflection.Descriptor, global::Bgs.Protocol.Club.V1.ClubTagReflection.Descriptor, global::Bgs.Protocol.RpcTypesReflection.Descriptor, global::Bgs.Protocol.FieldOptionsReflection.Descriptor, global::Bgs.Protocol.MessageOptionsReflection.Descriptor, global::Bgs.Protocol.MethodOptionsReflection.Descriptor, global::Bgs.Protocol.ServiceOptionsReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Bgs.Protocol.Club.V1.Client.SubscribeRequest), global::Bgs.Protocol.Club.V1.Client.SubscribeRequest.Parser, new[]{ "AgentId", "ClubId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bgs.Protocol.Club.V1.Client.UnsubscribeRequest), global::Bgs.Protocol.Club.V1.Client.UnsubscribeRequest.Parser, new[]{ "AgentId", "ClubId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bgs.Protocol.Club.V1.Client.CreateRequest), global::Bgs.Protocol.Club.V1.Client.CreateRequest.Parser, new[]{ "AgentId", "Options" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bgs.Protocol.Club.V1.Client.CreateResponse), global::Bgs.Protocol.Club.V1.Client.CreateResponse.Parser, new[]{ "ClubId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bgs.Protocol.Club.V1.Client.DestroyRequest), global::Bgs.Protocol.Club.V1.Client.DestroyRequest.Parser, new[]{ "AgentId", "ClubId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bgs.Protocol.Club.V1.Client.GetDescriptionRequest), global::Bgs.Protocol.Club.V1.Client.GetDescriptionRequest.Parser, new[]{ "AgentId", "ClubId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bgs.Protocol.Club.V1.Client.GetDescriptionResponse), global::Bgs.Protocol.Club.V1.Client.GetDescriptionResponse.Parser, new[]{ "Club" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bgs.Protocol.Club.V1.Client.GetClubTypeRequest), global::Bgs.Protocol.Club.V1.Client.GetClubTypeRequest.Parser, new[]{ "AgentId", "Type" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bgs.Protocol.Club.V1.Client.GetClubTypeResponse), global::Bgs.Protocol.Club.V1.Client.GetClubTypeResponse.Parser, new[]{ "Type", "RoleSet", "RangeSet", "PlatformTagSet", "CustomTagSet" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bgs.Protocol.Club.V1.Client.UpdateClubStateRequest), global::Bgs.Protocol.Club.V1.Client.UpdateClubStateRequest.Parser, new[]{ "AgentId", "ClubId", "Options" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bgs.Protocol.Club.V1.Client.UpdateClubSettingsRequest), global::Bgs.Protocol.Club.V1.Client.UpdateClubSettingsRequest.Parser, new[]{ "AgentId", "ClubId", "Options" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bgs.Protocol.Club.V1.Client.AddMemberRequest), global::Bgs.Protocol.Club.V1.Client.AddMemberRequest.Parser, new[]{ "AgentId", "ClubId", "Options" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bgs.Protocol.Club.V1.Client.JoinRequest), global::Bgs.Protocol.Club.V1.Client.JoinRequest.Parser, new[]{ "AgentId", "ClubId", "Options" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bgs.Protocol.Club.V1.Client.LeaveRequest), global::Bgs.Protocol.Club.V1.Client.LeaveRequest.Parser, new[]{ "AgentId", "ClubId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bgs.Protocol.Club.V1.Client.KickRequest), global::Bgs.Protocol.Club.V1.Client.KickRequest.Parser, new[]{ "AgentId", "ClubId", "TargetId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bgs.Protocol.Club.V1.Client.GetMemberRequest), global::Bgs.Protocol.Club.V1.Client.GetMemberRequest.Parser, new[]{ "AgentId", "ClubId", "MemberId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bgs.Protocol.Club.V1.Client.GetMemberResponse), global::Bgs.Protocol.Club.V1.Client.GetMemberResponse.Parser, new[]{ "Member" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bgs.Protocol.Club.V1.Client.GetMembersRequest), global::Bgs.Protocol.Club.V1.Client.GetMembersRequest.Parser, new[]{ "AgentId", "ClubId", "Continuation" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bgs.Protocol.Club.V1.Client.GetMembersResponse), global::Bgs.Protocol.Club.V1.Client.GetMembersResponse.Parser, new[]{ "Member", "Continuation" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bgs.Protocol.Club.V1.Client.UpdateMemberStateRequest), global::Bgs.Protocol.Club.V1.Client.UpdateMemberStateRequest.Parser, new[]{ "AgentId", "ClubId", "MemberId", "Options" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bgs.Protocol.Club.V1.Client.UpdateSubscriberStateRequest), global::Bgs.Protocol.Club.V1.Client.UpdateSubscriberStateRequest.Parser, new[]{ "AgentId", "ClubId", "Options" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bgs.Protocol.Club.V1.Client.AssignRoleRequest), global::Bgs.Protocol.Club.V1.Client.AssignRoleRequest.Parser, new[]{ "AgentId", "ClubId", "Options" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bgs.Protocol.Club.V1.Client.UnassignRoleRequest), global::Bgs.Protocol.Club.V1.Client.UnassignRoleRequest.Parser, new[]{ "AgentId", "ClubId", "Options" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bgs.Protocol.Club.V1.Client.SendInvitationRequest), global::Bgs.Protocol.Club.V1.Client.SendInvitationRequest.Parser, new[]{ "AgentId", "ClubId", "Options" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bgs.Protocol.Club.V1.Client.AcceptInvitationRequest), global::Bgs.Protocol.Club.V1.Client.AcceptInvitationRequest.Parser, new[]{ "AgentId", "ClubId", "InvitationId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bgs.Protocol.Club.V1.Client.DeclineInvitationRequest), global::Bgs.Protocol.Club.V1.Client.DeclineInvitationRequest.Parser, new[]{ "AgentId", "ClubId", "InvitationId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bgs.Protocol.Club.V1.Client.RevokeInvitationRequest), global::Bgs.Protocol.Club.V1.Client.RevokeInvitationRequest.Parser, new[]{ "AgentId", "ClubId", "InvitationId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bgs.Protocol.Club.V1.Client.GetInvitationRequest), global::Bgs.Protocol.Club.V1.Client.GetInvitationRequest.Parser, new[]{ "AgentId", "ClubId", "InvitationId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bgs.Protocol.Club.V1.Client.GetInvitationResponse), global::Bgs.Protocol.Club.V1.Client.GetInvitationResponse.Parser, new[]{ "Invitation" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bgs.Protocol.Club.V1.Client.GetInvitationsRequest), global::Bgs.Protocol.Club.V1.Client.GetInvitationsRequest.Parser, new[]{ "AgentId", "ClubId", "Continuation" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bgs.Protocol.Club.V1.Client.GetInvitationsResponse), global::Bgs.Protocol.Club.V1.Client.GetInvitationsResponse.Parser, new[]{ "Invitation", "Continuation" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bgs.Protocol.Club.V1.Client.SendSuggestionRequest), global::Bgs.Protocol.Club.V1.Client.SendSuggestionRequest.Parser, new[]{ "AgentId", "ClubId", "Options" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bgs.Protocol.Club.V1.Client.AcceptSuggestionRequest), global::Bgs.Protocol.Club.V1.Client.AcceptSuggestionRequest.Parser, new[]{ "AgentId", "ClubId", "SuggestionId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bgs.Protocol.Club.V1.Client.DeclineSuggestionRequest), global::Bgs.Protocol.Club.V1.Client.DeclineSuggestionRequest.Parser, new[]{ "AgentId", "ClubId", "SuggestionId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bgs.Protocol.Club.V1.Client.GetSuggestionRequest), global::Bgs.Protocol.Club.V1.Client.GetSuggestionRequest.Parser, new[]{ "AgentId", "ClubId", "SuggestionId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bgs.Protocol.Club.V1.Client.GetSuggestionResponse), global::Bgs.Protocol.Club.V1.Client.GetSuggestionResponse.Parser, new[]{ "Suggestion" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bgs.Protocol.Club.V1.Client.GetSuggestionsRequest), global::Bgs.Protocol.Club.V1.Client.GetSuggestionsRequest.Parser, new[]{ "AgentId", "ClubId", "Continuation" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bgs.Protocol.Club.V1.Client.GetSuggestionsResponse), global::Bgs.Protocol.Club.V1.Client.GetSuggestionsResponse.Parser, new[]{ "Suggestion", "Continuation" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bgs.Protocol.Club.V1.Client.CreateTicketRequest), global::Bgs.Protocol.Club.V1.Client.CreateTicketRequest.Parser, new[]{ "AgentId", "ClubId", "Options" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bgs.Protocol.Club.V1.Client.CreateTicketResponse), global::Bgs.Protocol.Club.V1.Client.CreateTicketResponse.Parser, new[]{ "Ticket" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bgs.Protocol.Club.V1.Client.DestroyTicketRequest), global::Bgs.Protocol.Club.V1.Client.DestroyTicketRequest.Parser, new[]{ "AgentId", "ClubId", "TicketId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bgs.Protocol.Club.V1.Client.RedeemTicketRequest), global::Bgs.Protocol.Club.V1.Client.RedeemTicketRequest.Parser, new[]{ "AgentId", "TicketId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bgs.Protocol.Club.V1.Client.GetTicketRequest), global::Bgs.Protocol.Club.V1.Client.GetTicketRequest.Parser, new[]{ "AgentId", "TicketId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bgs.Protocol.Club.V1.Client.GetTicketResponse), global::Bgs.Protocol.Club.V1.Client.GetTicketResponse.Parser, new[]{ "Ticket" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bgs.Protocol.Club.V1.Client.GetTicketsRequest), global::Bgs.Protocol.Club.V1.Client.GetTicketsRequest.Parser, new[]{ "AgentId", "ClubId", "Continuation" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bgs.Protocol.Club.V1.Client.GetTicketsResponse), global::Bgs.Protocol.Club.V1.Client.GetTicketsResponse.Parser, new[]{ "Ticket", "Continuation" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bgs.Protocol.Club.V1.Client.AddBanRequest), global::Bgs.Protocol.Club.V1.Client.AddBanRequest.Parser, new[]{ "AgentId", "ClubId", "Options" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bgs.Protocol.Club.V1.Client.RemoveBanRequest), global::Bgs.Protocol.Club.V1.Client.RemoveBanRequest.Parser, new[]{ "AgentId", "ClubId", "TargetId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bgs.Protocol.Club.V1.Client.GetBanRequest), global::Bgs.Protocol.Club.V1.Client.GetBanRequest.Parser, new[]{ "AgentId", "ClubId", "TargetId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bgs.Protocol.Club.V1.Client.GetBanResponse), global::Bgs.Protocol.Club.V1.Client.GetBanResponse.Parser, new[]{ "Ban" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bgs.Protocol.Club.V1.Client.GetBansRequest), global::Bgs.Protocol.Club.V1.Client.GetBansRequest.Parser, new[]{ "AgentId", "ClubId", "Continuation" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bgs.Protocol.Club.V1.Client.GetBansResponse), global::Bgs.Protocol.Club.V1.Client.GetBansResponse.Parser, new[]{ "Ban", "Continuation" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bgs.Protocol.Club.V1.Client.SubscribeStreamRequest), global::Bgs.Protocol.Club.V1.Client.SubscribeStreamRequest.Parser, new[]{ "AgentId", "ClubId", "StreamId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bgs.Protocol.Club.V1.Client.UnsubscribeStreamRequest), global::Bgs.Protocol.Club.V1.Client.UnsubscribeStreamRequest.Parser, new[]{ "AgentId", "ClubId", "StreamId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bgs.Protocol.Club.V1.Client.CreateStreamRequest), global::Bgs.Protocol.Club.V1.Client.CreateStreamRequest.Parser, new[]{ "AgentId", "ClubId", "Options" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bgs.Protocol.Club.V1.Client.CreateStreamResponse), global::Bgs.Protocol.Club.V1.Client.CreateStreamResponse.Parser, new[]{ "ClubId", "StreamId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bgs.Protocol.Club.V1.Client.DestroyStreamRequest), global::Bgs.Protocol.Club.V1.Client.DestroyStreamRequest.Parser, new[]{ "AgentId", "ClubId", "StreamId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bgs.Protocol.Club.V1.Client.GetStreamRequest), global::Bgs.Protocol.Club.V1.Client.GetStreamRequest.Parser, new[]{ "AgentId", "ClubId", "StreamId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bgs.Protocol.Club.V1.Client.GetStreamResponse), global::Bgs.Protocol.Club.V1.Client.GetStreamResponse.Parser, new[]{ "Stream" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bgs.Protocol.Club.V1.Client.GetStreamsRequest), global::Bgs.Protocol.Club.V1.Client.GetStreamsRequest.Parser, new[]{ "AgentId", "ClubId", "Continuation" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bgs.Protocol.Club.V1.Client.GetStreamsResponse), global::Bgs.Protocol.Club.V1.Client.GetStreamsResponse.Parser, new[]{ "Stream", "View", "Continuation" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bgs.Protocol.Club.V1.Client.UpdateStreamStateRequest), global::Bgs.Protocol.Club.V1.Client.UpdateStreamStateRequest.Parser, new[]{ "AgentId", "ClubId", "StreamId", "Options" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bgs.Protocol.Club.V1.Client.SetStreamFocusRequest), global::Bgs.Protocol.Club.V1.Client.SetStreamFocusRequest.Parser, new[]{ "AgentId", "ClubId", "StreamId", "Focus" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bgs.Protocol.Club.V1.Client.CreateMessageRequest), global::Bgs.Protocol.Club.V1.Client.CreateMessageRequest.Parser, new[]{ "AgentId", "ClubId", "StreamId", "Options" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bgs.Protocol.Club.V1.Client.CreateMessageResponse), global::Bgs.Protocol.Club.V1.Client.CreateMessageResponse.Parser, new[]{ "Message" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bgs.Protocol.Club.V1.Client.DestroyMessageRequest), global::Bgs.Protocol.Club.V1.Client.DestroyMessageRequest.Parser, new[]{ "AgentId", "ClubId", "StreamId", "MessageId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bgs.Protocol.Club.V1.Client.DestroyMessageResponse), global::Bgs.Protocol.Club.V1.Client.DestroyMessageResponse.Parser, new[]{ "Message" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bgs.Protocol.Club.V1.Client.EditMessageRequest), global::Bgs.Protocol.Club.V1.Client.EditMessageRequest.Parser, new[]{ "AgentId", "ClubId", "StreamId", "MessageId", "Options" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bgs.Protocol.Club.V1.Client.EditMessageResponse), global::Bgs.Protocol.Club.V1.Client.EditMessageResponse.Parser, new[]{ "Message" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bgs.Protocol.Club.V1.Client.SetMessagePinnedRequest), global::Bgs.Protocol.Club.V1.Client.SetMessagePinnedRequest.Parser, new[]{ "AgentId", "ClubId", "StreamId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bgs.Protocol.Club.V1.Client.SetTypingIndicatorRequest), global::Bgs.Protocol.Club.V1.Client.SetTypingIndicatorRequest.Parser, new[]{ "AgentId", "ClubId", "StreamId", "Indicator" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bgs.Protocol.Club.V1.Client.AdvanceStreamViewTimeRequest), global::Bgs.Protocol.Club.V1.Client.AdvanceStreamViewTimeRequest.Parser, new[]{ "AgentId", "ClubId", "StreamIdDeprecated", "StreamId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bgs.Protocol.Club.V1.Client.AdvanceStreamMentionViewTimeRequest), global::Bgs.Protocol.Club.V1.Client.AdvanceStreamMentionViewTimeRequest.Parser, new[]{ "AgentId", "ClubId", "StreamId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bgs.Protocol.Club.V1.Client.AdvanceActivityViewTimeRequest), global::Bgs.Protocol.Club.V1.Client.AdvanceActivityViewTimeRequest.Parser, new[]{ "AgentId", "ClubId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bgs.Protocol.Club.V1.Client.GetStreamHistoryRequest), global::Bgs.Protocol.Club.V1.Client.GetStreamHistoryRequest.Parser, new[]{ "AgentId", "ClubId", "StreamId", "Options" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bgs.Protocol.Club.V1.Client.GetStreamHistoryResponse), global::Bgs.Protocol.Club.V1.Client.GetStreamHistoryResponse.Parser, new[]{ "Message", "Continuation" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bgs.Protocol.Club.V1.Client.GetStreamMessageRequest), global::Bgs.Protocol.Club.V1.Client.GetStreamMessageRequest.Parser, new[]{ "AgentId", "ClubId", "StreamId", "MessageId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bgs.Protocol.Club.V1.Client.GetStreamMessageResponse), global::Bgs.Protocol.Club.V1.Client.GetStreamMessageResponse.Parser, new[]{ "Message" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bgs.Protocol.Club.V1.Client.GetClubActivityRequest), global::Bgs.Protocol.Club.V1.Client.GetClubActivityRequest.Parser, new[]{ "AgentId", "ClubId", "Options" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bgs.Protocol.Club.V1.Client.GetClubActivityResponse), global::Bgs.Protocol.Club.V1.Client.GetClubActivityResponse.Parser, new[]{ "Continuation" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bgs.Protocol.Club.V1.Client.GetStreamVoiceTokenRequest), global::Bgs.Protocol.Club.V1.Client.GetStreamVoiceTokenRequest.Parser, new[]{ "AgentId", "ClubId", "StreamId", "Version" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bgs.Protocol.Club.V1.Client.GetStreamVoiceTokenResponse), global::Bgs.Protocol.Club.V1.Client.GetStreamVoiceTokenResponse.Parser, new[]{ "ChannelUri", "Credentials" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bgs.Protocol.Club.V1.Client.KickFromStreamVoiceRequest), global::Bgs.Protocol.Club.V1.Client.KickFromStreamVoiceRequest.Parser, new[]{ "AgentId", "ClubId", "StreamId", "TargetId" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class SubscribeRequest : pb::IMessage<SubscribeRequest> {
    private static readonly pb::MessageParser<SubscribeRequest> _parser = new pb::MessageParser<SubscribeRequest>(() => new SubscribeRequest());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SubscribeRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bgs.Protocol.Club.V1.Client.ClubRequestReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SubscribeRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SubscribeRequest(SubscribeRequest other) : this() {
      _hasBits0 = other._hasBits0;
      agentId_ = other.HasAgentId ? other.agentId_.Clone() : null;
      clubId_ = other.clubId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SubscribeRequest Clone() {
      return new SubscribeRequest(this);
    }

    /// <summary>Field number for the "agent_id" field.</summary>
    public const int AgentIdFieldNumber = 1;
    private global::Bgs.Protocol.Club.V1.MemberId agentId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bgs.Protocol.Club.V1.MemberId AgentId {
      get { return agentId_; }
      set {
        agentId_ = value;
      }
    }
    /// <summary>Gets whether the agent_id field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasAgentId {
      get { return agentId_ != null; }
    }
    /// <summary>Clears the value of the agent_id field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearAgentId() {
      agentId_ = null;
    }

    /// <summary>Field number for the "club_id" field.</summary>
    public const int ClubIdFieldNumber = 2;
    private readonly static ulong ClubIdDefaultValue = 0UL;

    private ulong clubId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong ClubId {
      get { if ((_hasBits0 & 1) != 0) { return clubId_; } else { return ClubIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        clubId_ = value;
      }
    }
    /// <summary>Gets whether the "club_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasClubId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "club_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearClubId() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SubscribeRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SubscribeRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(AgentId, other.AgentId)) return false;
      if (ClubId != other.ClubId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasAgentId) hash ^= AgentId.GetHashCode();
      if (HasClubId) hash ^= ClubId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasAgentId) {
        output.WriteRawTag(10);
        output.WriteMessage(AgentId);
      }
      if (HasClubId) {
        output.WriteRawTag(16);
        output.WriteUInt64(ClubId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasAgentId) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AgentId);
      }
      if (HasClubId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(ClubId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SubscribeRequest other) {
      if (other == null) {
        return;
      }
      if (other.HasAgentId) {
        if (!HasAgentId) {
          AgentId = new global::Bgs.Protocol.Club.V1.MemberId();
        }
        AgentId.MergeFrom(other.AgentId);
      }
      if (other.HasClubId) {
        ClubId = other.ClubId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (!HasAgentId) {
              AgentId = new global::Bgs.Protocol.Club.V1.MemberId();
            }
            input.ReadMessage(AgentId);
            break;
          }
          case 16: {
            ClubId = input.ReadUInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class UnsubscribeRequest : pb::IMessage<UnsubscribeRequest> {
    private static readonly pb::MessageParser<UnsubscribeRequest> _parser = new pb::MessageParser<UnsubscribeRequest>(() => new UnsubscribeRequest());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UnsubscribeRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bgs.Protocol.Club.V1.Client.ClubRequestReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UnsubscribeRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UnsubscribeRequest(UnsubscribeRequest other) : this() {
      _hasBits0 = other._hasBits0;
      agentId_ = other.HasAgentId ? other.agentId_.Clone() : null;
      clubId_ = other.clubId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UnsubscribeRequest Clone() {
      return new UnsubscribeRequest(this);
    }

    /// <summary>Field number for the "agent_id" field.</summary>
    public const int AgentIdFieldNumber = 1;
    private global::Bgs.Protocol.Club.V1.MemberId agentId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bgs.Protocol.Club.V1.MemberId AgentId {
      get { return agentId_; }
      set {
        agentId_ = value;
      }
    }
    /// <summary>Gets whether the agent_id field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasAgentId {
      get { return agentId_ != null; }
    }
    /// <summary>Clears the value of the agent_id field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearAgentId() {
      agentId_ = null;
    }

    /// <summary>Field number for the "club_id" field.</summary>
    public const int ClubIdFieldNumber = 2;
    private readonly static ulong ClubIdDefaultValue = 0UL;

    private ulong clubId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong ClubId {
      get { if ((_hasBits0 & 1) != 0) { return clubId_; } else { return ClubIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        clubId_ = value;
      }
    }
    /// <summary>Gets whether the "club_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasClubId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "club_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearClubId() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UnsubscribeRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UnsubscribeRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(AgentId, other.AgentId)) return false;
      if (ClubId != other.ClubId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasAgentId) hash ^= AgentId.GetHashCode();
      if (HasClubId) hash ^= ClubId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasAgentId) {
        output.WriteRawTag(10);
        output.WriteMessage(AgentId);
      }
      if (HasClubId) {
        output.WriteRawTag(16);
        output.WriteUInt64(ClubId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasAgentId) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AgentId);
      }
      if (HasClubId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(ClubId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UnsubscribeRequest other) {
      if (other == null) {
        return;
      }
      if (other.HasAgentId) {
        if (!HasAgentId) {
          AgentId = new global::Bgs.Protocol.Club.V1.MemberId();
        }
        AgentId.MergeFrom(other.AgentId);
      }
      if (other.HasClubId) {
        ClubId = other.ClubId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (!HasAgentId) {
              AgentId = new global::Bgs.Protocol.Club.V1.MemberId();
            }
            input.ReadMessage(AgentId);
            break;
          }
          case 16: {
            ClubId = input.ReadUInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class CreateRequest : pb::IMessage<CreateRequest> {
    private static readonly pb::MessageParser<CreateRequest> _parser = new pb::MessageParser<CreateRequest>(() => new CreateRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CreateRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bgs.Protocol.Club.V1.Client.ClubRequestReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateRequest(CreateRequest other) : this() {
      agentId_ = other.HasAgentId ? other.agentId_.Clone() : null;
      options_ = other.HasOptions ? other.options_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateRequest Clone() {
      return new CreateRequest(this);
    }

    /// <summary>Field number for the "agent_id" field.</summary>
    public const int AgentIdFieldNumber = 1;
    private global::Bgs.Protocol.Club.V1.MemberId agentId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bgs.Protocol.Club.V1.MemberId AgentId {
      get { return agentId_; }
      set {
        agentId_ = value;
      }
    }
    /// <summary>Gets whether the agent_id field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasAgentId {
      get { return agentId_ != null; }
    }
    /// <summary>Clears the value of the agent_id field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearAgentId() {
      agentId_ = null;
    }

    /// <summary>Field number for the "options" field.</summary>
    public const int OptionsFieldNumber = 2;
    private global::Bgs.Protocol.Club.V1.Client.ClubCreateOptions options_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bgs.Protocol.Club.V1.Client.ClubCreateOptions Options {
      get { return options_; }
      set {
        options_ = value;
      }
    }
    /// <summary>Gets whether the options field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasOptions {
      get { return options_ != null; }
    }
    /// <summary>Clears the value of the options field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearOptions() {
      options_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CreateRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CreateRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(AgentId, other.AgentId)) return false;
      if (!object.Equals(Options, other.Options)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasAgentId) hash ^= AgentId.GetHashCode();
      if (HasOptions) hash ^= Options.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasAgentId) {
        output.WriteRawTag(10);
        output.WriteMessage(AgentId);
      }
      if (HasOptions) {
        output.WriteRawTag(18);
        output.WriteMessage(Options);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasAgentId) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AgentId);
      }
      if (HasOptions) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Options);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CreateRequest other) {
      if (other == null) {
        return;
      }
      if (other.HasAgentId) {
        if (!HasAgentId) {
          AgentId = new global::Bgs.Protocol.Club.V1.MemberId();
        }
        AgentId.MergeFrom(other.AgentId);
      }
      if (other.HasOptions) {
        if (!HasOptions) {
          Options = new global::Bgs.Protocol.Club.V1.Client.ClubCreateOptions();
        }
        Options.MergeFrom(other.Options);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (!HasAgentId) {
              AgentId = new global::Bgs.Protocol.Club.V1.MemberId();
            }
            input.ReadMessage(AgentId);
            break;
          }
          case 18: {
            if (!HasOptions) {
              Options = new global::Bgs.Protocol.Club.V1.Client.ClubCreateOptions();
            }
            input.ReadMessage(Options);
            break;
          }
        }
      }
    }

  }

  public sealed partial class CreateResponse : pb::IMessage<CreateResponse> {
    private static readonly pb::MessageParser<CreateResponse> _parser = new pb::MessageParser<CreateResponse>(() => new CreateResponse());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CreateResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bgs.Protocol.Club.V1.Client.ClubRequestReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateResponse(CreateResponse other) : this() {
      _hasBits0 = other._hasBits0;
      clubId_ = other.clubId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateResponse Clone() {
      return new CreateResponse(this);
    }

    /// <summary>Field number for the "club_id" field.</summary>
    public const int ClubIdFieldNumber = 1;
    private readonly static ulong ClubIdDefaultValue = 0UL;

    private ulong clubId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong ClubId {
      get { if ((_hasBits0 & 1) != 0) { return clubId_; } else { return ClubIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        clubId_ = value;
      }
    }
    /// <summary>Gets whether the "club_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasClubId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "club_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearClubId() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CreateResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CreateResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ClubId != other.ClubId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasClubId) hash ^= ClubId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasClubId) {
        output.WriteRawTag(8);
        output.WriteUInt64(ClubId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasClubId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(ClubId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CreateResponse other) {
      if (other == null) {
        return;
      }
      if (other.HasClubId) {
        ClubId = other.ClubId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ClubId = input.ReadUInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DestroyRequest : pb::IMessage<DestroyRequest> {
    private static readonly pb::MessageParser<DestroyRequest> _parser = new pb::MessageParser<DestroyRequest>(() => new DestroyRequest());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DestroyRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bgs.Protocol.Club.V1.Client.ClubRequestReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DestroyRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DestroyRequest(DestroyRequest other) : this() {
      _hasBits0 = other._hasBits0;
      agentId_ = other.HasAgentId ? other.agentId_.Clone() : null;
      clubId_ = other.clubId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DestroyRequest Clone() {
      return new DestroyRequest(this);
    }

    /// <summary>Field number for the "agent_id" field.</summary>
    public const int AgentIdFieldNumber = 1;
    private global::Bgs.Protocol.Club.V1.MemberId agentId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bgs.Protocol.Club.V1.MemberId AgentId {
      get { return agentId_; }
      set {
        agentId_ = value;
      }
    }
    /// <summary>Gets whether the agent_id field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasAgentId {
      get { return agentId_ != null; }
    }
    /// <summary>Clears the value of the agent_id field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearAgentId() {
      agentId_ = null;
    }

    /// <summary>Field number for the "club_id" field.</summary>
    public const int ClubIdFieldNumber = 2;
    private readonly static ulong ClubIdDefaultValue = 0UL;

    private ulong clubId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong ClubId {
      get { if ((_hasBits0 & 1) != 0) { return clubId_; } else { return ClubIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        clubId_ = value;
      }
    }
    /// <summary>Gets whether the "club_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasClubId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "club_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearClubId() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DestroyRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DestroyRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(AgentId, other.AgentId)) return false;
      if (ClubId != other.ClubId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasAgentId) hash ^= AgentId.GetHashCode();
      if (HasClubId) hash ^= ClubId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasAgentId) {
        output.WriteRawTag(10);
        output.WriteMessage(AgentId);
      }
      if (HasClubId) {
        output.WriteRawTag(16);
        output.WriteUInt64(ClubId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasAgentId) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AgentId);
      }
      if (HasClubId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(ClubId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DestroyRequest other) {
      if (other == null) {
        return;
      }
      if (other.HasAgentId) {
        if (!HasAgentId) {
          AgentId = new global::Bgs.Protocol.Club.V1.MemberId();
        }
        AgentId.MergeFrom(other.AgentId);
      }
      if (other.HasClubId) {
        ClubId = other.ClubId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (!HasAgentId) {
              AgentId = new global::Bgs.Protocol.Club.V1.MemberId();
            }
            input.ReadMessage(AgentId);
            break;
          }
          case 16: {
            ClubId = input.ReadUInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetDescriptionRequest : pb::IMessage<GetDescriptionRequest> {
    private static readonly pb::MessageParser<GetDescriptionRequest> _parser = new pb::MessageParser<GetDescriptionRequest>(() => new GetDescriptionRequest());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetDescriptionRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bgs.Protocol.Club.V1.Client.ClubRequestReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetDescriptionRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetDescriptionRequest(GetDescriptionRequest other) : this() {
      _hasBits0 = other._hasBits0;
      agentId_ = other.HasAgentId ? other.agentId_.Clone() : null;
      clubId_ = other.clubId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetDescriptionRequest Clone() {
      return new GetDescriptionRequest(this);
    }

    /// <summary>Field number for the "agent_id" field.</summary>
    public const int AgentIdFieldNumber = 1;
    private global::Bgs.Protocol.Club.V1.MemberId agentId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bgs.Protocol.Club.V1.MemberId AgentId {
      get { return agentId_; }
      set {
        agentId_ = value;
      }
    }
    /// <summary>Gets whether the agent_id field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasAgentId {
      get { return agentId_ != null; }
    }
    /// <summary>Clears the value of the agent_id field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearAgentId() {
      agentId_ = null;
    }

    /// <summary>Field number for the "club_id" field.</summary>
    public const int ClubIdFieldNumber = 2;
    private readonly static ulong ClubIdDefaultValue = 0UL;

    private ulong clubId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong ClubId {
      get { if ((_hasBits0 & 1) != 0) { return clubId_; } else { return ClubIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        clubId_ = value;
      }
    }
    /// <summary>Gets whether the "club_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasClubId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "club_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearClubId() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetDescriptionRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetDescriptionRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(AgentId, other.AgentId)) return false;
      if (ClubId != other.ClubId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasAgentId) hash ^= AgentId.GetHashCode();
      if (HasClubId) hash ^= ClubId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasAgentId) {
        output.WriteRawTag(10);
        output.WriteMessage(AgentId);
      }
      if (HasClubId) {
        output.WriteRawTag(16);
        output.WriteUInt64(ClubId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasAgentId) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AgentId);
      }
      if (HasClubId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(ClubId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetDescriptionRequest other) {
      if (other == null) {
        return;
      }
      if (other.HasAgentId) {
        if (!HasAgentId) {
          AgentId = new global::Bgs.Protocol.Club.V1.MemberId();
        }
        AgentId.MergeFrom(other.AgentId);
      }
      if (other.HasClubId) {
        ClubId = other.ClubId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (!HasAgentId) {
              AgentId = new global::Bgs.Protocol.Club.V1.MemberId();
            }
            input.ReadMessage(AgentId);
            break;
          }
          case 16: {
            ClubId = input.ReadUInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetDescriptionResponse : pb::IMessage<GetDescriptionResponse> {
    private static readonly pb::MessageParser<GetDescriptionResponse> _parser = new pb::MessageParser<GetDescriptionResponse>(() => new GetDescriptionResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetDescriptionResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bgs.Protocol.Club.V1.Client.ClubRequestReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetDescriptionResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetDescriptionResponse(GetDescriptionResponse other) : this() {
      club_ = other.HasClub ? other.club_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetDescriptionResponse Clone() {
      return new GetDescriptionResponse(this);
    }

    /// <summary>Field number for the "club" field.</summary>
    public const int ClubFieldNumber = 1;
    private global::Bgs.Protocol.Club.V1.ClubDescription club_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bgs.Protocol.Club.V1.ClubDescription Club {
      get { return club_; }
      set {
        club_ = value;
      }
    }
    /// <summary>Gets whether the club field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasClub {
      get { return club_ != null; }
    }
    /// <summary>Clears the value of the club field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearClub() {
      club_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetDescriptionResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetDescriptionResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Club, other.Club)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasClub) hash ^= Club.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasClub) {
        output.WriteRawTag(10);
        output.WriteMessage(Club);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasClub) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Club);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetDescriptionResponse other) {
      if (other == null) {
        return;
      }
      if (other.HasClub) {
        if (!HasClub) {
          Club = new global::Bgs.Protocol.Club.V1.ClubDescription();
        }
        Club.MergeFrom(other.Club);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (!HasClub) {
              Club = new global::Bgs.Protocol.Club.V1.ClubDescription();
            }
            input.ReadMessage(Club);
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetClubTypeRequest : pb::IMessage<GetClubTypeRequest> {
    private static readonly pb::MessageParser<GetClubTypeRequest> _parser = new pb::MessageParser<GetClubTypeRequest>(() => new GetClubTypeRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetClubTypeRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bgs.Protocol.Club.V1.Client.ClubRequestReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetClubTypeRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetClubTypeRequest(GetClubTypeRequest other) : this() {
      agentId_ = other.HasAgentId ? other.agentId_.Clone() : null;
      type_ = other.HasType ? other.type_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetClubTypeRequest Clone() {
      return new GetClubTypeRequest(this);
    }

    /// <summary>Field number for the "agent_id" field.</summary>
    public const int AgentIdFieldNumber = 1;
    private global::Bgs.Protocol.Club.V1.MemberId agentId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bgs.Protocol.Club.V1.MemberId AgentId {
      get { return agentId_; }
      set {
        agentId_ = value;
      }
    }
    /// <summary>Gets whether the agent_id field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasAgentId {
      get { return agentId_ != null; }
    }
    /// <summary>Clears the value of the agent_id field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearAgentId() {
      agentId_ = null;
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 2;
    private global::Bgs.Protocol.Club.V1.UniqueClubType type_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bgs.Protocol.Club.V1.UniqueClubType Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }
    /// <summary>Gets whether the type field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasType {
      get { return type_ != null; }
    }
    /// <summary>Clears the value of the type field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearType() {
      type_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetClubTypeRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetClubTypeRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(AgentId, other.AgentId)) return false;
      if (!object.Equals(Type, other.Type)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasAgentId) hash ^= AgentId.GetHashCode();
      if (HasType) hash ^= Type.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasAgentId) {
        output.WriteRawTag(10);
        output.WriteMessage(AgentId);
      }
      if (HasType) {
        output.WriteRawTag(18);
        output.WriteMessage(Type);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasAgentId) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AgentId);
      }
      if (HasType) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Type);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetClubTypeRequest other) {
      if (other == null) {
        return;
      }
      if (other.HasAgentId) {
        if (!HasAgentId) {
          AgentId = new global::Bgs.Protocol.Club.V1.MemberId();
        }
        AgentId.MergeFrom(other.AgentId);
      }
      if (other.HasType) {
        if (!HasType) {
          Type = new global::Bgs.Protocol.Club.V1.UniqueClubType();
        }
        Type.MergeFrom(other.Type);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (!HasAgentId) {
              AgentId = new global::Bgs.Protocol.Club.V1.MemberId();
            }
            input.ReadMessage(AgentId);
            break;
          }
          case 18: {
            if (!HasType) {
              Type = new global::Bgs.Protocol.Club.V1.UniqueClubType();
            }
            input.ReadMessage(Type);
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetClubTypeResponse : pb::IMessage<GetClubTypeResponse> {
    private static readonly pb::MessageParser<GetClubTypeResponse> _parser = new pb::MessageParser<GetClubTypeResponse>(() => new GetClubTypeResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetClubTypeResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bgs.Protocol.Club.V1.Client.ClubRequestReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetClubTypeResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetClubTypeResponse(GetClubTypeResponse other) : this() {
      type_ = other.HasType ? other.type_.Clone() : null;
      roleSet_ = other.HasRoleSet ? other.roleSet_.Clone() : null;
      rangeSet_ = other.HasRangeSet ? other.rangeSet_.Clone() : null;
      platformTagSet_ = other.platformTagSet_.Clone();
      customTagSet_ = other.customTagSet_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetClubTypeResponse Clone() {
      return new GetClubTypeResponse(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    private global::Bgs.Protocol.Club.V1.UniqueClubType type_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bgs.Protocol.Club.V1.UniqueClubType Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }
    /// <summary>Gets whether the type field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasType {
      get { return type_ != null; }
    }
    /// <summary>Clears the value of the type field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearType() {
      type_ = null;
    }

    /// <summary>Field number for the "role_set" field.</summary>
    public const int RoleSetFieldNumber = 2;
    private global::Bgs.Protocol.Club.V1.Client.ClubRoleSet roleSet_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bgs.Protocol.Club.V1.Client.ClubRoleSet RoleSet {
      get { return roleSet_; }
      set {
        roleSet_ = value;
      }
    }
    /// <summary>Gets whether the role_set field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasRoleSet {
      get { return roleSet_ != null; }
    }
    /// <summary>Clears the value of the role_set field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearRoleSet() {
      roleSet_ = null;
    }

    /// <summary>Field number for the "range_set" field.</summary>
    public const int RangeSetFieldNumber = 3;
    private global::Bgs.Protocol.Club.V1.Client.ClubTypeRangeSet rangeSet_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bgs.Protocol.Club.V1.Client.ClubTypeRangeSet RangeSet {
      get { return rangeSet_; }
      set {
        rangeSet_ = value;
      }
    }
    /// <summary>Gets whether the range_set field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasRangeSet {
      get { return rangeSet_ != null; }
    }
    /// <summary>Clears the value of the range_set field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearRangeSet() {
      rangeSet_ = null;
    }

    /// <summary>Field number for the "platform_tag_set" field.</summary>
    public const int PlatformTagSetFieldNumber = 4;
    private static readonly pb::FieldCodec<global::Bgs.Protocol.Club.V1.LocalizedTag> _repeated_platformTagSet_codec
        = pb::FieldCodec.ForMessage(34, global::Bgs.Protocol.Club.V1.LocalizedTag.Parser);
    private readonly pbc::RepeatedField<global::Bgs.Protocol.Club.V1.LocalizedTag> platformTagSet_ = new pbc::RepeatedField<global::Bgs.Protocol.Club.V1.LocalizedTag>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Bgs.Protocol.Club.V1.LocalizedTag> PlatformTagSet {
      get { return platformTagSet_; }
    }

    /// <summary>Field number for the "custom_tag_set" field.</summary>
    public const int CustomTagSetFieldNumber = 5;
    private static readonly pb::FieldCodec<global::Bgs.Protocol.Club.V1.LocalizedTag> _repeated_customTagSet_codec
        = pb::FieldCodec.ForMessage(42, global::Bgs.Protocol.Club.V1.LocalizedTag.Parser);
    private readonly pbc::RepeatedField<global::Bgs.Protocol.Club.V1.LocalizedTag> customTagSet_ = new pbc::RepeatedField<global::Bgs.Protocol.Club.V1.LocalizedTag>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Bgs.Protocol.Club.V1.LocalizedTag> CustomTagSet {
      get { return customTagSet_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetClubTypeResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetClubTypeResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Type, other.Type)) return false;
      if (!object.Equals(RoleSet, other.RoleSet)) return false;
      if (!object.Equals(RangeSet, other.RangeSet)) return false;
      if(!platformTagSet_.Equals(other.platformTagSet_)) return false;
      if(!customTagSet_.Equals(other.customTagSet_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasType) hash ^= Type.GetHashCode();
      if (HasRoleSet) hash ^= RoleSet.GetHashCode();
      if (HasRangeSet) hash ^= RangeSet.GetHashCode();
      hash ^= platformTagSet_.GetHashCode();
      hash ^= customTagSet_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasType) {
        output.WriteRawTag(10);
        output.WriteMessage(Type);
      }
      if (HasRoleSet) {
        output.WriteRawTag(18);
        output.WriteMessage(RoleSet);
      }
      if (HasRangeSet) {
        output.WriteRawTag(26);
        output.WriteMessage(RangeSet);
      }
      platformTagSet_.WriteTo(output, _repeated_platformTagSet_codec);
      customTagSet_.WriteTo(output, _repeated_customTagSet_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasType) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Type);
      }
      if (HasRoleSet) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RoleSet);
      }
      if (HasRangeSet) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RangeSet);
      }
      size += platformTagSet_.CalculateSize(_repeated_platformTagSet_codec);
      size += customTagSet_.CalculateSize(_repeated_customTagSet_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetClubTypeResponse other) {
      if (other == null) {
        return;
      }
      if (other.HasType) {
        if (!HasType) {
          Type = new global::Bgs.Protocol.Club.V1.UniqueClubType();
        }
        Type.MergeFrom(other.Type);
      }
      if (other.HasRoleSet) {
        if (!HasRoleSet) {
          RoleSet = new global::Bgs.Protocol.Club.V1.Client.ClubRoleSet();
        }
        RoleSet.MergeFrom(other.RoleSet);
      }
      if (other.HasRangeSet) {
        if (!HasRangeSet) {
          RangeSet = new global::Bgs.Protocol.Club.V1.Client.ClubTypeRangeSet();
        }
        RangeSet.MergeFrom(other.RangeSet);
      }
      platformTagSet_.Add(other.platformTagSet_);
      customTagSet_.Add(other.customTagSet_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (!HasType) {
              Type = new global::Bgs.Protocol.Club.V1.UniqueClubType();
            }
            input.ReadMessage(Type);
            break;
          }
          case 18: {
            if (!HasRoleSet) {
              RoleSet = new global::Bgs.Protocol.Club.V1.Client.ClubRoleSet();
            }
            input.ReadMessage(RoleSet);
            break;
          }
          case 26: {
            if (!HasRangeSet) {
              RangeSet = new global::Bgs.Protocol.Club.V1.Client.ClubTypeRangeSet();
            }
            input.ReadMessage(RangeSet);
            break;
          }
          case 34: {
            platformTagSet_.AddEntriesFrom(input, _repeated_platformTagSet_codec);
            break;
          }
          case 42: {
            customTagSet_.AddEntriesFrom(input, _repeated_customTagSet_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class UpdateClubStateRequest : pb::IMessage<UpdateClubStateRequest> {
    private static readonly pb::MessageParser<UpdateClubStateRequest> _parser = new pb::MessageParser<UpdateClubStateRequest>(() => new UpdateClubStateRequest());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UpdateClubStateRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bgs.Protocol.Club.V1.Client.ClubRequestReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateClubStateRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateClubStateRequest(UpdateClubStateRequest other) : this() {
      _hasBits0 = other._hasBits0;
      agentId_ = other.HasAgentId ? other.agentId_.Clone() : null;
      clubId_ = other.clubId_;
      options_ = other.HasOptions ? other.options_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateClubStateRequest Clone() {
      return new UpdateClubStateRequest(this);
    }

    /// <summary>Field number for the "agent_id" field.</summary>
    public const int AgentIdFieldNumber = 1;
    private global::Bgs.Protocol.Club.V1.MemberId agentId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bgs.Protocol.Club.V1.MemberId AgentId {
      get { return agentId_; }
      set {
        agentId_ = value;
      }
    }
    /// <summary>Gets whether the agent_id field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasAgentId {
      get { return agentId_ != null; }
    }
    /// <summary>Clears the value of the agent_id field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearAgentId() {
      agentId_ = null;
    }

    /// <summary>Field number for the "club_id" field.</summary>
    public const int ClubIdFieldNumber = 2;
    private readonly static ulong ClubIdDefaultValue = 0UL;

    private ulong clubId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong ClubId {
      get { if ((_hasBits0 & 1) != 0) { return clubId_; } else { return ClubIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        clubId_ = value;
      }
    }
    /// <summary>Gets whether the "club_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasClubId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "club_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearClubId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "options" field.</summary>
    public const int OptionsFieldNumber = 3;
    private global::Bgs.Protocol.Club.V1.Client.ClubStateOptions options_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bgs.Protocol.Club.V1.Client.ClubStateOptions Options {
      get { return options_; }
      set {
        options_ = value;
      }
    }
    /// <summary>Gets whether the options field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasOptions {
      get { return options_ != null; }
    }
    /// <summary>Clears the value of the options field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearOptions() {
      options_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UpdateClubStateRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UpdateClubStateRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(AgentId, other.AgentId)) return false;
      if (ClubId != other.ClubId) return false;
      if (!object.Equals(Options, other.Options)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasAgentId) hash ^= AgentId.GetHashCode();
      if (HasClubId) hash ^= ClubId.GetHashCode();
      if (HasOptions) hash ^= Options.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasAgentId) {
        output.WriteRawTag(10);
        output.WriteMessage(AgentId);
      }
      if (HasClubId) {
        output.WriteRawTag(16);
        output.WriteUInt64(ClubId);
      }
      if (HasOptions) {
        output.WriteRawTag(26);
        output.WriteMessage(Options);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasAgentId) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AgentId);
      }
      if (HasClubId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(ClubId);
      }
      if (HasOptions) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Options);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UpdateClubStateRequest other) {
      if (other == null) {
        return;
      }
      if (other.HasAgentId) {
        if (!HasAgentId) {
          AgentId = new global::Bgs.Protocol.Club.V1.MemberId();
        }
        AgentId.MergeFrom(other.AgentId);
      }
      if (other.HasClubId) {
        ClubId = other.ClubId;
      }
      if (other.HasOptions) {
        if (!HasOptions) {
          Options = new global::Bgs.Protocol.Club.V1.Client.ClubStateOptions();
        }
        Options.MergeFrom(other.Options);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (!HasAgentId) {
              AgentId = new global::Bgs.Protocol.Club.V1.MemberId();
            }
            input.ReadMessage(AgentId);
            break;
          }
          case 16: {
            ClubId = input.ReadUInt64();
            break;
          }
          case 26: {
            if (!HasOptions) {
              Options = new global::Bgs.Protocol.Club.V1.Client.ClubStateOptions();
            }
            input.ReadMessage(Options);
            break;
          }
        }
      }
    }

  }

  public sealed partial class UpdateClubSettingsRequest : pb::IMessage<UpdateClubSettingsRequest> {
    private static readonly pb::MessageParser<UpdateClubSettingsRequest> _parser = new pb::MessageParser<UpdateClubSettingsRequest>(() => new UpdateClubSettingsRequest());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UpdateClubSettingsRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bgs.Protocol.Club.V1.Client.ClubRequestReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateClubSettingsRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateClubSettingsRequest(UpdateClubSettingsRequest other) : this() {
      _hasBits0 = other._hasBits0;
      agentId_ = other.HasAgentId ? other.agentId_.Clone() : null;
      clubId_ = other.clubId_;
      options_ = other.HasOptions ? other.options_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateClubSettingsRequest Clone() {
      return new UpdateClubSettingsRequest(this);
    }

    /// <summary>Field number for the "agent_id" field.</summary>
    public const int AgentIdFieldNumber = 1;
    private global::Bgs.Protocol.Club.V1.MemberId agentId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bgs.Protocol.Club.V1.MemberId AgentId {
      get { return agentId_; }
      set {
        agentId_ = value;
      }
    }
    /// <summary>Gets whether the agent_id field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasAgentId {
      get { return agentId_ != null; }
    }
    /// <summary>Clears the value of the agent_id field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearAgentId() {
      agentId_ = null;
    }

    /// <summary>Field number for the "club_id" field.</summary>
    public const int ClubIdFieldNumber = 2;
    private readonly static ulong ClubIdDefaultValue = 0UL;

    private ulong clubId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong ClubId {
      get { if ((_hasBits0 & 1) != 0) { return clubId_; } else { return ClubIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        clubId_ = value;
      }
    }
    /// <summary>Gets whether the "club_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasClubId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "club_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearClubId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "options" field.</summary>
    public const int OptionsFieldNumber = 3;
    private global::Bgs.Protocol.Club.V1.Client.ClubSettingsOptions options_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bgs.Protocol.Club.V1.Client.ClubSettingsOptions Options {
      get { return options_; }
      set {
        options_ = value;
      }
    }
    /// <summary>Gets whether the options field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasOptions {
      get { return options_ != null; }
    }
    /// <summary>Clears the value of the options field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearOptions() {
      options_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UpdateClubSettingsRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UpdateClubSettingsRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(AgentId, other.AgentId)) return false;
      if (ClubId != other.ClubId) return false;
      if (!object.Equals(Options, other.Options)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasAgentId) hash ^= AgentId.GetHashCode();
      if (HasClubId) hash ^= ClubId.GetHashCode();
      if (HasOptions) hash ^= Options.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasAgentId) {
        output.WriteRawTag(10);
        output.WriteMessage(AgentId);
      }
      if (HasClubId) {
        output.WriteRawTag(16);
        output.WriteUInt64(ClubId);
      }
      if (HasOptions) {
        output.WriteRawTag(26);
        output.WriteMessage(Options);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasAgentId) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AgentId);
      }
      if (HasClubId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(ClubId);
      }
      if (HasOptions) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Options);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UpdateClubSettingsRequest other) {
      if (other == null) {
        return;
      }
      if (other.HasAgentId) {
        if (!HasAgentId) {
          AgentId = new global::Bgs.Protocol.Club.V1.MemberId();
        }
        AgentId.MergeFrom(other.AgentId);
      }
      if (other.HasClubId) {
        ClubId = other.ClubId;
      }
      if (other.HasOptions) {
        if (!HasOptions) {
          Options = new global::Bgs.Protocol.Club.V1.Client.ClubSettingsOptions();
        }
        Options.MergeFrom(other.Options);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (!HasAgentId) {
              AgentId = new global::Bgs.Protocol.Club.V1.MemberId();
            }
            input.ReadMessage(AgentId);
            break;
          }
          case 16: {
            ClubId = input.ReadUInt64();
            break;
          }
          case 26: {
            if (!HasOptions) {
              Options = new global::Bgs.Protocol.Club.V1.Client.ClubSettingsOptions();
            }
            input.ReadMessage(Options);
            break;
          }
        }
      }
    }

  }

  public sealed partial class AddMemberRequest : pb::IMessage<AddMemberRequest> {
    private static readonly pb::MessageParser<AddMemberRequest> _parser = new pb::MessageParser<AddMemberRequest>(() => new AddMemberRequest());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AddMemberRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bgs.Protocol.Club.V1.Client.ClubRequestReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddMemberRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddMemberRequest(AddMemberRequest other) : this() {
      _hasBits0 = other._hasBits0;
      agentId_ = other.HasAgentId ? other.agentId_.Clone() : null;
      clubId_ = other.clubId_;
      options_ = other.HasOptions ? other.options_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddMemberRequest Clone() {
      return new AddMemberRequest(this);
    }

    /// <summary>Field number for the "agent_id" field.</summary>
    public const int AgentIdFieldNumber = 1;
    private global::Bgs.Protocol.Club.V1.MemberId agentId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bgs.Protocol.Club.V1.MemberId AgentId {
      get { return agentId_; }
      set {
        agentId_ = value;
      }
    }
    /// <summary>Gets whether the agent_id field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasAgentId {
      get { return agentId_ != null; }
    }
    /// <summary>Clears the value of the agent_id field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearAgentId() {
      agentId_ = null;
    }

    /// <summary>Field number for the "club_id" field.</summary>
    public const int ClubIdFieldNumber = 2;
    private readonly static ulong ClubIdDefaultValue = 0UL;

    private ulong clubId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong ClubId {
      get { if ((_hasBits0 & 1) != 0) { return clubId_; } else { return ClubIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        clubId_ = value;
      }
    }
    /// <summary>Gets whether the "club_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasClubId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "club_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearClubId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "options" field.</summary>
    public const int OptionsFieldNumber = 3;
    private global::Bgs.Protocol.Club.V1.Client.CreateMemberOptions options_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bgs.Protocol.Club.V1.Client.CreateMemberOptions Options {
      get { return options_; }
      set {
        options_ = value;
      }
    }
    /// <summary>Gets whether the options field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasOptions {
      get { return options_ != null; }
    }
    /// <summary>Clears the value of the options field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearOptions() {
      options_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AddMemberRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AddMemberRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(AgentId, other.AgentId)) return false;
      if (ClubId != other.ClubId) return false;
      if (!object.Equals(Options, other.Options)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasAgentId) hash ^= AgentId.GetHashCode();
      if (HasClubId) hash ^= ClubId.GetHashCode();
      if (HasOptions) hash ^= Options.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasAgentId) {
        output.WriteRawTag(10);
        output.WriteMessage(AgentId);
      }
      if (HasClubId) {
        output.WriteRawTag(16);
        output.WriteUInt64(ClubId);
      }
      if (HasOptions) {
        output.WriteRawTag(26);
        output.WriteMessage(Options);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasAgentId) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AgentId);
      }
      if (HasClubId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(ClubId);
      }
      if (HasOptions) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Options);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AddMemberRequest other) {
      if (other == null) {
        return;
      }
      if (other.HasAgentId) {
        if (!HasAgentId) {
          AgentId = new global::Bgs.Protocol.Club.V1.MemberId();
        }
        AgentId.MergeFrom(other.AgentId);
      }
      if (other.HasClubId) {
        ClubId = other.ClubId;
      }
      if (other.HasOptions) {
        if (!HasOptions) {
          Options = new global::Bgs.Protocol.Club.V1.Client.CreateMemberOptions();
        }
        Options.MergeFrom(other.Options);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (!HasAgentId) {
              AgentId = new global::Bgs.Protocol.Club.V1.MemberId();
            }
            input.ReadMessage(AgentId);
            break;
          }
          case 16: {
            ClubId = input.ReadUInt64();
            break;
          }
          case 26: {
            if (!HasOptions) {
              Options = new global::Bgs.Protocol.Club.V1.Client.CreateMemberOptions();
            }
            input.ReadMessage(Options);
            break;
          }
        }
      }
    }

  }

  public sealed partial class JoinRequest : pb::IMessage<JoinRequest> {
    private static readonly pb::MessageParser<JoinRequest> _parser = new pb::MessageParser<JoinRequest>(() => new JoinRequest());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<JoinRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bgs.Protocol.Club.V1.Client.ClubRequestReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public JoinRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public JoinRequest(JoinRequest other) : this() {
      _hasBits0 = other._hasBits0;
      agentId_ = other.HasAgentId ? other.agentId_.Clone() : null;
      clubId_ = other.clubId_;
      options_ = other.HasOptions ? other.options_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public JoinRequest Clone() {
      return new JoinRequest(this);
    }

    /// <summary>Field number for the "agent_id" field.</summary>
    public const int AgentIdFieldNumber = 1;
    private global::Bgs.Protocol.Club.V1.MemberId agentId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bgs.Protocol.Club.V1.MemberId AgentId {
      get { return agentId_; }
      set {
        agentId_ = value;
      }
    }
    /// <summary>Gets whether the agent_id field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasAgentId {
      get { return agentId_ != null; }
    }
    /// <summary>Clears the value of the agent_id field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearAgentId() {
      agentId_ = null;
    }

    /// <summary>Field number for the "club_id" field.</summary>
    public const int ClubIdFieldNumber = 2;
    private readonly static ulong ClubIdDefaultValue = 0UL;

    private ulong clubId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong ClubId {
      get { if ((_hasBits0 & 1) != 0) { return clubId_; } else { return ClubIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        clubId_ = value;
      }
    }
    /// <summary>Gets whether the "club_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasClubId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "club_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearClubId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "options" field.</summary>
    public const int OptionsFieldNumber = 3;
    private global::Bgs.Protocol.Club.V1.Client.CreateMemberOptions options_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bgs.Protocol.Club.V1.Client.CreateMemberOptions Options {
      get { return options_; }
      set {
        options_ = value;
      }
    }
    /// <summary>Gets whether the options field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasOptions {
      get { return options_ != null; }
    }
    /// <summary>Clears the value of the options field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearOptions() {
      options_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as JoinRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(JoinRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(AgentId, other.AgentId)) return false;
      if (ClubId != other.ClubId) return false;
      if (!object.Equals(Options, other.Options)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasAgentId) hash ^= AgentId.GetHashCode();
      if (HasClubId) hash ^= ClubId.GetHashCode();
      if (HasOptions) hash ^= Options.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasAgentId) {
        output.WriteRawTag(10);
        output.WriteMessage(AgentId);
      }
      if (HasClubId) {
        output.WriteRawTag(16);
        output.WriteUInt64(ClubId);
      }
      if (HasOptions) {
        output.WriteRawTag(26);
        output.WriteMessage(Options);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasAgentId) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AgentId);
      }
      if (HasClubId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(ClubId);
      }
      if (HasOptions) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Options);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(JoinRequest other) {
      if (other == null) {
        return;
      }
      if (other.HasAgentId) {
        if (!HasAgentId) {
          AgentId = new global::Bgs.Protocol.Club.V1.MemberId();
        }
        AgentId.MergeFrom(other.AgentId);
      }
      if (other.HasClubId) {
        ClubId = other.ClubId;
      }
      if (other.HasOptions) {
        if (!HasOptions) {
          Options = new global::Bgs.Protocol.Club.V1.Client.CreateMemberOptions();
        }
        Options.MergeFrom(other.Options);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (!HasAgentId) {
              AgentId = new global::Bgs.Protocol.Club.V1.MemberId();
            }
            input.ReadMessage(AgentId);
            break;
          }
          case 16: {
            ClubId = input.ReadUInt64();
            break;
          }
          case 26: {
            if (!HasOptions) {
              Options = new global::Bgs.Protocol.Club.V1.Client.CreateMemberOptions();
            }
            input.ReadMessage(Options);
            break;
          }
        }
      }
    }

  }

  public sealed partial class LeaveRequest : pb::IMessage<LeaveRequest> {
    private static readonly pb::MessageParser<LeaveRequest> _parser = new pb::MessageParser<LeaveRequest>(() => new LeaveRequest());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LeaveRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bgs.Protocol.Club.V1.Client.ClubRequestReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LeaveRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LeaveRequest(LeaveRequest other) : this() {
      _hasBits0 = other._hasBits0;
      agentId_ = other.HasAgentId ? other.agentId_.Clone() : null;
      clubId_ = other.clubId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LeaveRequest Clone() {
      return new LeaveRequest(this);
    }

    /// <summary>Field number for the "agent_id" field.</summary>
    public const int AgentIdFieldNumber = 1;
    private global::Bgs.Protocol.Club.V1.MemberId agentId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bgs.Protocol.Club.V1.MemberId AgentId {
      get { return agentId_; }
      set {
        agentId_ = value;
      }
    }
    /// <summary>Gets whether the agent_id field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasAgentId {
      get { return agentId_ != null; }
    }
    /// <summary>Clears the value of the agent_id field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearAgentId() {
      agentId_ = null;
    }

    /// <summary>Field number for the "club_id" field.</summary>
    public const int ClubIdFieldNumber = 2;
    private readonly static ulong ClubIdDefaultValue = 0UL;

    private ulong clubId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong ClubId {
      get { if ((_hasBits0 & 1) != 0) { return clubId_; } else { return ClubIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        clubId_ = value;
      }
    }
    /// <summary>Gets whether the "club_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasClubId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "club_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearClubId() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LeaveRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LeaveRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(AgentId, other.AgentId)) return false;
      if (ClubId != other.ClubId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasAgentId) hash ^= AgentId.GetHashCode();
      if (HasClubId) hash ^= ClubId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasAgentId) {
        output.WriteRawTag(10);
        output.WriteMessage(AgentId);
      }
      if (HasClubId) {
        output.WriteRawTag(16);
        output.WriteUInt64(ClubId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasAgentId) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AgentId);
      }
      if (HasClubId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(ClubId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LeaveRequest other) {
      if (other == null) {
        return;
      }
      if (other.HasAgentId) {
        if (!HasAgentId) {
          AgentId = new global::Bgs.Protocol.Club.V1.MemberId();
        }
        AgentId.MergeFrom(other.AgentId);
      }
      if (other.HasClubId) {
        ClubId = other.ClubId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (!HasAgentId) {
              AgentId = new global::Bgs.Protocol.Club.V1.MemberId();
            }
            input.ReadMessage(AgentId);
            break;
          }
          case 16: {
            ClubId = input.ReadUInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class KickRequest : pb::IMessage<KickRequest> {
    private static readonly pb::MessageParser<KickRequest> _parser = new pb::MessageParser<KickRequest>(() => new KickRequest());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<KickRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bgs.Protocol.Club.V1.Client.ClubRequestReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public KickRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public KickRequest(KickRequest other) : this() {
      _hasBits0 = other._hasBits0;
      agentId_ = other.HasAgentId ? other.agentId_.Clone() : null;
      clubId_ = other.clubId_;
      targetId_ = other.HasTargetId ? other.targetId_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public KickRequest Clone() {
      return new KickRequest(this);
    }

    /// <summary>Field number for the "agent_id" field.</summary>
    public const int AgentIdFieldNumber = 1;
    private global::Bgs.Protocol.Club.V1.MemberId agentId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bgs.Protocol.Club.V1.MemberId AgentId {
      get { return agentId_; }
      set {
        agentId_ = value;
      }
    }
    /// <summary>Gets whether the agent_id field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasAgentId {
      get { return agentId_ != null; }
    }
    /// <summary>Clears the value of the agent_id field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearAgentId() {
      agentId_ = null;
    }

    /// <summary>Field number for the "club_id" field.</summary>
    public const int ClubIdFieldNumber = 2;
    private readonly static ulong ClubIdDefaultValue = 0UL;

    private ulong clubId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong ClubId {
      get { if ((_hasBits0 & 1) != 0) { return clubId_; } else { return ClubIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        clubId_ = value;
      }
    }
    /// <summary>Gets whether the "club_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasClubId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "club_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearClubId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "target_id" field.</summary>
    public const int TargetIdFieldNumber = 3;
    private global::Bgs.Protocol.Club.V1.MemberId targetId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bgs.Protocol.Club.V1.MemberId TargetId {
      get { return targetId_; }
      set {
        targetId_ = value;
      }
    }
    /// <summary>Gets whether the target_id field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasTargetId {
      get { return targetId_ != null; }
    }
    /// <summary>Clears the value of the target_id field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearTargetId() {
      targetId_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as KickRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(KickRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(AgentId, other.AgentId)) return false;
      if (ClubId != other.ClubId) return false;
      if (!object.Equals(TargetId, other.TargetId)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasAgentId) hash ^= AgentId.GetHashCode();
      if (HasClubId) hash ^= ClubId.GetHashCode();
      if (HasTargetId) hash ^= TargetId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasAgentId) {
        output.WriteRawTag(10);
        output.WriteMessage(AgentId);
      }
      if (HasClubId) {
        output.WriteRawTag(16);
        output.WriteUInt64(ClubId);
      }
      if (HasTargetId) {
        output.WriteRawTag(26);
        output.WriteMessage(TargetId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasAgentId) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AgentId);
      }
      if (HasClubId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(ClubId);
      }
      if (HasTargetId) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TargetId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(KickRequest other) {
      if (other == null) {
        return;
      }
      if (other.HasAgentId) {
        if (!HasAgentId) {
          AgentId = new global::Bgs.Protocol.Club.V1.MemberId();
        }
        AgentId.MergeFrom(other.AgentId);
      }
      if (other.HasClubId) {
        ClubId = other.ClubId;
      }
      if (other.HasTargetId) {
        if (!HasTargetId) {
          TargetId = new global::Bgs.Protocol.Club.V1.MemberId();
        }
        TargetId.MergeFrom(other.TargetId);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (!HasAgentId) {
              AgentId = new global::Bgs.Protocol.Club.V1.MemberId();
            }
            input.ReadMessage(AgentId);
            break;
          }
          case 16: {
            ClubId = input.ReadUInt64();
            break;
          }
          case 26: {
            if (!HasTargetId) {
              TargetId = new global::Bgs.Protocol.Club.V1.MemberId();
            }
            input.ReadMessage(TargetId);
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetMemberRequest : pb::IMessage<GetMemberRequest> {
    private static readonly pb::MessageParser<GetMemberRequest> _parser = new pb::MessageParser<GetMemberRequest>(() => new GetMemberRequest());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetMemberRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bgs.Protocol.Club.V1.Client.ClubRequestReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetMemberRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetMemberRequest(GetMemberRequest other) : this() {
      _hasBits0 = other._hasBits0;
      agentId_ = other.HasAgentId ? other.agentId_.Clone() : null;
      clubId_ = other.clubId_;
      memberId_ = other.HasMemberId ? other.memberId_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetMemberRequest Clone() {
      return new GetMemberRequest(this);
    }

    /// <summary>Field number for the "agent_id" field.</summary>
    public const int AgentIdFieldNumber = 1;
    private global::Bgs.Protocol.Club.V1.MemberId agentId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bgs.Protocol.Club.V1.MemberId AgentId {
      get { return agentId_; }
      set {
        agentId_ = value;
      }
    }
    /// <summary>Gets whether the agent_id field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasAgentId {
      get { return agentId_ != null; }
    }
    /// <summary>Clears the value of the agent_id field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearAgentId() {
      agentId_ = null;
    }

    /// <summary>Field number for the "club_id" field.</summary>
    public const int ClubIdFieldNumber = 2;
    private readonly static ulong ClubIdDefaultValue = 0UL;

    private ulong clubId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong ClubId {
      get { if ((_hasBits0 & 1) != 0) { return clubId_; } else { return ClubIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        clubId_ = value;
      }
    }
    /// <summary>Gets whether the "club_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasClubId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "club_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearClubId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "member_id" field.</summary>
    public const int MemberIdFieldNumber = 3;
    private global::Bgs.Protocol.Club.V1.MemberId memberId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bgs.Protocol.Club.V1.MemberId MemberId {
      get { return memberId_; }
      set {
        memberId_ = value;
      }
    }
    /// <summary>Gets whether the member_id field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasMemberId {
      get { return memberId_ != null; }
    }
    /// <summary>Clears the value of the member_id field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearMemberId() {
      memberId_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetMemberRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetMemberRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(AgentId, other.AgentId)) return false;
      if (ClubId != other.ClubId) return false;
      if (!object.Equals(MemberId, other.MemberId)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasAgentId) hash ^= AgentId.GetHashCode();
      if (HasClubId) hash ^= ClubId.GetHashCode();
      if (HasMemberId) hash ^= MemberId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasAgentId) {
        output.WriteRawTag(10);
        output.WriteMessage(AgentId);
      }
      if (HasClubId) {
        output.WriteRawTag(16);
        output.WriteUInt64(ClubId);
      }
      if (HasMemberId) {
        output.WriteRawTag(26);
        output.WriteMessage(MemberId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasAgentId) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AgentId);
      }
      if (HasClubId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(ClubId);
      }
      if (HasMemberId) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(MemberId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetMemberRequest other) {
      if (other == null) {
        return;
      }
      if (other.HasAgentId) {
        if (!HasAgentId) {
          AgentId = new global::Bgs.Protocol.Club.V1.MemberId();
        }
        AgentId.MergeFrom(other.AgentId);
      }
      if (other.HasClubId) {
        ClubId = other.ClubId;
      }
      if (other.HasMemberId) {
        if (!HasMemberId) {
          MemberId = new global::Bgs.Protocol.Club.V1.MemberId();
        }
        MemberId.MergeFrom(other.MemberId);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (!HasAgentId) {
              AgentId = new global::Bgs.Protocol.Club.V1.MemberId();
            }
            input.ReadMessage(AgentId);
            break;
          }
          case 16: {
            ClubId = input.ReadUInt64();
            break;
          }
          case 26: {
            if (!HasMemberId) {
              MemberId = new global::Bgs.Protocol.Club.V1.MemberId();
            }
            input.ReadMessage(MemberId);
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetMemberResponse : pb::IMessage<GetMemberResponse> {
    private static readonly pb::MessageParser<GetMemberResponse> _parser = new pb::MessageParser<GetMemberResponse>(() => new GetMemberResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetMemberResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bgs.Protocol.Club.V1.Client.ClubRequestReflection.Descriptor.MessageTypes[16]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetMemberResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetMemberResponse(GetMemberResponse other) : this() {
      member_ = other.HasMember ? other.member_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetMemberResponse Clone() {
      return new GetMemberResponse(this);
    }

    /// <summary>Field number for the "member" field.</summary>
    public const int MemberFieldNumber = 1;
    private global::Bgs.Protocol.Club.V1.Client.Member member_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bgs.Protocol.Club.V1.Client.Member Member {
      get { return member_; }
      set {
        member_ = value;
      }
    }
    /// <summary>Gets whether the member field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasMember {
      get { return member_ != null; }
    }
    /// <summary>Clears the value of the member field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearMember() {
      member_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetMemberResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetMemberResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Member, other.Member)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasMember) hash ^= Member.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasMember) {
        output.WriteRawTag(10);
        output.WriteMessage(Member);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasMember) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Member);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetMemberResponse other) {
      if (other == null) {
        return;
      }
      if (other.HasMember) {
        if (!HasMember) {
          Member = new global::Bgs.Protocol.Club.V1.Client.Member();
        }
        Member.MergeFrom(other.Member);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (!HasMember) {
              Member = new global::Bgs.Protocol.Club.V1.Client.Member();
            }
            input.ReadMessage(Member);
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetMembersRequest : pb::IMessage<GetMembersRequest> {
    private static readonly pb::MessageParser<GetMembersRequest> _parser = new pb::MessageParser<GetMembersRequest>(() => new GetMembersRequest());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetMembersRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bgs.Protocol.Club.V1.Client.ClubRequestReflection.Descriptor.MessageTypes[17]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetMembersRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetMembersRequest(GetMembersRequest other) : this() {
      _hasBits0 = other._hasBits0;
      agentId_ = other.HasAgentId ? other.agentId_.Clone() : null;
      clubId_ = other.clubId_;
      continuation_ = other.continuation_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetMembersRequest Clone() {
      return new GetMembersRequest(this);
    }

    /// <summary>Field number for the "agent_id" field.</summary>
    public const int AgentIdFieldNumber = 1;
    private global::Bgs.Protocol.Club.V1.MemberId agentId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bgs.Protocol.Club.V1.MemberId AgentId {
      get { return agentId_; }
      set {
        agentId_ = value;
      }
    }
    /// <summary>Gets whether the agent_id field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasAgentId {
      get { return agentId_ != null; }
    }
    /// <summary>Clears the value of the agent_id field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearAgentId() {
      agentId_ = null;
    }

    /// <summary>Field number for the "club_id" field.</summary>
    public const int ClubIdFieldNumber = 2;
    private readonly static ulong ClubIdDefaultValue = 0UL;

    private ulong clubId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong ClubId {
      get { if ((_hasBits0 & 1) != 0) { return clubId_; } else { return ClubIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        clubId_ = value;
      }
    }
    /// <summary>Gets whether the "club_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasClubId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "club_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearClubId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "continuation" field.</summary>
    public const int ContinuationFieldNumber = 4;
    private readonly static ulong ContinuationDefaultValue = 0UL;

    private ulong continuation_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong Continuation {
      get { if ((_hasBits0 & 2) != 0) { return continuation_; } else { return ContinuationDefaultValue; } }
      set {
        _hasBits0 |= 2;
        continuation_ = value;
      }
    }
    /// <summary>Gets whether the "continuation" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasContinuation {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "continuation" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearContinuation() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetMembersRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetMembersRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(AgentId, other.AgentId)) return false;
      if (ClubId != other.ClubId) return false;
      if (Continuation != other.Continuation) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasAgentId) hash ^= AgentId.GetHashCode();
      if (HasClubId) hash ^= ClubId.GetHashCode();
      if (HasContinuation) hash ^= Continuation.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasAgentId) {
        output.WriteRawTag(10);
        output.WriteMessage(AgentId);
      }
      if (HasClubId) {
        output.WriteRawTag(16);
        output.WriteUInt64(ClubId);
      }
      if (HasContinuation) {
        output.WriteRawTag(32);
        output.WriteUInt64(Continuation);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasAgentId) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AgentId);
      }
      if (HasClubId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(ClubId);
      }
      if (HasContinuation) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Continuation);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetMembersRequest other) {
      if (other == null) {
        return;
      }
      if (other.HasAgentId) {
        if (!HasAgentId) {
          AgentId = new global::Bgs.Protocol.Club.V1.MemberId();
        }
        AgentId.MergeFrom(other.AgentId);
      }
      if (other.HasClubId) {
        ClubId = other.ClubId;
      }
      if (other.HasContinuation) {
        Continuation = other.Continuation;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (!HasAgentId) {
              AgentId = new global::Bgs.Protocol.Club.V1.MemberId();
            }
            input.ReadMessage(AgentId);
            break;
          }
          case 16: {
            ClubId = input.ReadUInt64();
            break;
          }
          case 32: {
            Continuation = input.ReadUInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetMembersResponse : pb::IMessage<GetMembersResponse> {
    private static readonly pb::MessageParser<GetMembersResponse> _parser = new pb::MessageParser<GetMembersResponse>(() => new GetMembersResponse());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetMembersResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bgs.Protocol.Club.V1.Client.ClubRequestReflection.Descriptor.MessageTypes[18]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetMembersResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetMembersResponse(GetMembersResponse other) : this() {
      _hasBits0 = other._hasBits0;
      member_ = other.member_.Clone();
      continuation_ = other.continuation_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetMembersResponse Clone() {
      return new GetMembersResponse(this);
    }

    /// <summary>Field number for the "member" field.</summary>
    public const int MemberFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Bgs.Protocol.Club.V1.Client.Member> _repeated_member_codec
        = pb::FieldCodec.ForMessage(10, global::Bgs.Protocol.Club.V1.Client.Member.Parser);
    private readonly pbc::RepeatedField<global::Bgs.Protocol.Club.V1.Client.Member> member_ = new pbc::RepeatedField<global::Bgs.Protocol.Club.V1.Client.Member>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Bgs.Protocol.Club.V1.Client.Member> Member {
      get { return member_; }
    }

    /// <summary>Field number for the "continuation" field.</summary>
    public const int ContinuationFieldNumber = 2;
    private readonly static ulong ContinuationDefaultValue = 0UL;

    private ulong continuation_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong Continuation {
      get { if ((_hasBits0 & 1) != 0) { return continuation_; } else { return ContinuationDefaultValue; } }
      set {
        _hasBits0 |= 1;
        continuation_ = value;
      }
    }
    /// <summary>Gets whether the "continuation" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasContinuation {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "continuation" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearContinuation() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetMembersResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetMembersResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!member_.Equals(other.member_)) return false;
      if (Continuation != other.Continuation) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= member_.GetHashCode();
      if (HasContinuation) hash ^= Continuation.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      member_.WriteTo(output, _repeated_member_codec);
      if (HasContinuation) {
        output.WriteRawTag(16);
        output.WriteUInt64(Continuation);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += member_.CalculateSize(_repeated_member_codec);
      if (HasContinuation) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Continuation);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetMembersResponse other) {
      if (other == null) {
        return;
      }
      member_.Add(other.member_);
      if (other.HasContinuation) {
        Continuation = other.Continuation;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            member_.AddEntriesFrom(input, _repeated_member_codec);
            break;
          }
          case 16: {
            Continuation = input.ReadUInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class UpdateMemberStateRequest : pb::IMessage<UpdateMemberStateRequest> {
    private static readonly pb::MessageParser<UpdateMemberStateRequest> _parser = new pb::MessageParser<UpdateMemberStateRequest>(() => new UpdateMemberStateRequest());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UpdateMemberStateRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bgs.Protocol.Club.V1.Client.ClubRequestReflection.Descriptor.MessageTypes[19]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateMemberStateRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateMemberStateRequest(UpdateMemberStateRequest other) : this() {
      _hasBits0 = other._hasBits0;
      agentId_ = other.HasAgentId ? other.agentId_.Clone() : null;
      clubId_ = other.clubId_;
      memberId_ = other.HasMemberId ? other.memberId_.Clone() : null;
      options_ = other.HasOptions ? other.options_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateMemberStateRequest Clone() {
      return new UpdateMemberStateRequest(this);
    }

    /// <summary>Field number for the "agent_id" field.</summary>
    public const int AgentIdFieldNumber = 1;
    private global::Bgs.Protocol.Club.V1.MemberId agentId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bgs.Protocol.Club.V1.MemberId AgentId {
      get { return agentId_; }
      set {
        agentId_ = value;
      }
    }
    /// <summary>Gets whether the agent_id field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasAgentId {
      get { return agentId_ != null; }
    }
    /// <summary>Clears the value of the agent_id field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearAgentId() {
      agentId_ = null;
    }

    /// <summary>Field number for the "club_id" field.</summary>
    public const int ClubIdFieldNumber = 2;
    private readonly static ulong ClubIdDefaultValue = 0UL;

    private ulong clubId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong ClubId {
      get { if ((_hasBits0 & 1) != 0) { return clubId_; } else { return ClubIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        clubId_ = value;
      }
    }
    /// <summary>Gets whether the "club_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasClubId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "club_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearClubId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "member_id" field.</summary>
    public const int MemberIdFieldNumber = 3;
    private global::Bgs.Protocol.Club.V1.MemberId memberId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bgs.Protocol.Club.V1.MemberId MemberId {
      get { return memberId_; }
      set {
        memberId_ = value;
      }
    }
    /// <summary>Gets whether the member_id field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasMemberId {
      get { return memberId_ != null; }
    }
    /// <summary>Clears the value of the member_id field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearMemberId() {
      memberId_ = null;
    }

    /// <summary>Field number for the "options" field.</summary>
    public const int OptionsFieldNumber = 5;
    private global::Bgs.Protocol.Club.V1.Client.MemberStateOptions options_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bgs.Protocol.Club.V1.Client.MemberStateOptions Options {
      get { return options_; }
      set {
        options_ = value;
      }
    }
    /// <summary>Gets whether the options field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasOptions {
      get { return options_ != null; }
    }
    /// <summary>Clears the value of the options field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearOptions() {
      options_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UpdateMemberStateRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UpdateMemberStateRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(AgentId, other.AgentId)) return false;
      if (ClubId != other.ClubId) return false;
      if (!object.Equals(MemberId, other.MemberId)) return false;
      if (!object.Equals(Options, other.Options)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasAgentId) hash ^= AgentId.GetHashCode();
      if (HasClubId) hash ^= ClubId.GetHashCode();
      if (HasMemberId) hash ^= MemberId.GetHashCode();
      if (HasOptions) hash ^= Options.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasAgentId) {
        output.WriteRawTag(10);
        output.WriteMessage(AgentId);
      }
      if (HasClubId) {
        output.WriteRawTag(16);
        output.WriteUInt64(ClubId);
      }
      if (HasMemberId) {
        output.WriteRawTag(26);
        output.WriteMessage(MemberId);
      }
      if (HasOptions) {
        output.WriteRawTag(42);
        output.WriteMessage(Options);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasAgentId) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AgentId);
      }
      if (HasClubId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(ClubId);
      }
      if (HasMemberId) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(MemberId);
      }
      if (HasOptions) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Options);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UpdateMemberStateRequest other) {
      if (other == null) {
        return;
      }
      if (other.HasAgentId) {
        if (!HasAgentId) {
          AgentId = new global::Bgs.Protocol.Club.V1.MemberId();
        }
        AgentId.MergeFrom(other.AgentId);
      }
      if (other.HasClubId) {
        ClubId = other.ClubId;
      }
      if (other.HasMemberId) {
        if (!HasMemberId) {
          MemberId = new global::Bgs.Protocol.Club.V1.MemberId();
        }
        MemberId.MergeFrom(other.MemberId);
      }
      if (other.HasOptions) {
        if (!HasOptions) {
          Options = new global::Bgs.Protocol.Club.V1.Client.MemberStateOptions();
        }
        Options.MergeFrom(other.Options);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (!HasAgentId) {
              AgentId = new global::Bgs.Protocol.Club.V1.MemberId();
            }
            input.ReadMessage(AgentId);
            break;
          }
          case 16: {
            ClubId = input.ReadUInt64();
            break;
          }
          case 26: {
            if (!HasMemberId) {
              MemberId = new global::Bgs.Protocol.Club.V1.MemberId();
            }
            input.ReadMessage(MemberId);
            break;
          }
          case 42: {
            if (!HasOptions) {
              Options = new global::Bgs.Protocol.Club.V1.Client.MemberStateOptions();
            }
            input.ReadMessage(Options);
            break;
          }
        }
      }
    }

  }

  public sealed partial class UpdateSubscriberStateRequest : pb::IMessage<UpdateSubscriberStateRequest> {
    private static readonly pb::MessageParser<UpdateSubscriberStateRequest> _parser = new pb::MessageParser<UpdateSubscriberStateRequest>(() => new UpdateSubscriberStateRequest());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UpdateSubscriberStateRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bgs.Protocol.Club.V1.Client.ClubRequestReflection.Descriptor.MessageTypes[20]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateSubscriberStateRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateSubscriberStateRequest(UpdateSubscriberStateRequest other) : this() {
      _hasBits0 = other._hasBits0;
      agentId_ = other.HasAgentId ? other.agentId_.Clone() : null;
      clubId_ = other.clubId_;
      options_ = other.HasOptions ? other.options_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateSubscriberStateRequest Clone() {
      return new UpdateSubscriberStateRequest(this);
    }

    /// <summary>Field number for the "agent_id" field.</summary>
    public const int AgentIdFieldNumber = 1;
    private global::Bgs.Protocol.Club.V1.MemberId agentId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bgs.Protocol.Club.V1.MemberId AgentId {
      get { return agentId_; }
      set {
        agentId_ = value;
      }
    }
    /// <summary>Gets whether the agent_id field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasAgentId {
      get { return agentId_ != null; }
    }
    /// <summary>Clears the value of the agent_id field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearAgentId() {
      agentId_ = null;
    }

    /// <summary>Field number for the "club_id" field.</summary>
    public const int ClubIdFieldNumber = 2;
    private readonly static ulong ClubIdDefaultValue = 0UL;

    private ulong clubId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong ClubId {
      get { if ((_hasBits0 & 1) != 0) { return clubId_; } else { return ClubIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        clubId_ = value;
      }
    }
    /// <summary>Gets whether the "club_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasClubId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "club_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearClubId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "options" field.</summary>
    public const int OptionsFieldNumber = 3;
    private global::Bgs.Protocol.Club.V1.Client.SubscriberStateOptions options_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bgs.Protocol.Club.V1.Client.SubscriberStateOptions Options {
      get { return options_; }
      set {
        options_ = value;
      }
    }
    /// <summary>Gets whether the options field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasOptions {
      get { return options_ != null; }
    }
    /// <summary>Clears the value of the options field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearOptions() {
      options_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UpdateSubscriberStateRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UpdateSubscriberStateRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(AgentId, other.AgentId)) return false;
      if (ClubId != other.ClubId) return false;
      if (!object.Equals(Options, other.Options)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasAgentId) hash ^= AgentId.GetHashCode();
      if (HasClubId) hash ^= ClubId.GetHashCode();
      if (HasOptions) hash ^= Options.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasAgentId) {
        output.WriteRawTag(10);
        output.WriteMessage(AgentId);
      }
      if (HasClubId) {
        output.WriteRawTag(16);
        output.WriteUInt64(ClubId);
      }
      if (HasOptions) {
        output.WriteRawTag(26);
        output.WriteMessage(Options);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasAgentId) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AgentId);
      }
      if (HasClubId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(ClubId);
      }
      if (HasOptions) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Options);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UpdateSubscriberStateRequest other) {
      if (other == null) {
        return;
      }
      if (other.HasAgentId) {
        if (!HasAgentId) {
          AgentId = new global::Bgs.Protocol.Club.V1.MemberId();
        }
        AgentId.MergeFrom(other.AgentId);
      }
      if (other.HasClubId) {
        ClubId = other.ClubId;
      }
      if (other.HasOptions) {
        if (!HasOptions) {
          Options = new global::Bgs.Protocol.Club.V1.Client.SubscriberStateOptions();
        }
        Options.MergeFrom(other.Options);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (!HasAgentId) {
              AgentId = new global::Bgs.Protocol.Club.V1.MemberId();
            }
            input.ReadMessage(AgentId);
            break;
          }
          case 16: {
            ClubId = input.ReadUInt64();
            break;
          }
          case 26: {
            if (!HasOptions) {
              Options = new global::Bgs.Protocol.Club.V1.Client.SubscriberStateOptions();
            }
            input.ReadMessage(Options);
            break;
          }
        }
      }
    }

  }

  public sealed partial class AssignRoleRequest : pb::IMessage<AssignRoleRequest> {
    private static readonly pb::MessageParser<AssignRoleRequest> _parser = new pb::MessageParser<AssignRoleRequest>(() => new AssignRoleRequest());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AssignRoleRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bgs.Protocol.Club.V1.Client.ClubRequestReflection.Descriptor.MessageTypes[21]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AssignRoleRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AssignRoleRequest(AssignRoleRequest other) : this() {
      _hasBits0 = other._hasBits0;
      agentId_ = other.HasAgentId ? other.agentId_.Clone() : null;
      clubId_ = other.clubId_;
      options_ = other.HasOptions ? other.options_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AssignRoleRequest Clone() {
      return new AssignRoleRequest(this);
    }

    /// <summary>Field number for the "agent_id" field.</summary>
    public const int AgentIdFieldNumber = 1;
    private global::Bgs.Protocol.Club.V1.MemberId agentId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bgs.Protocol.Club.V1.MemberId AgentId {
      get { return agentId_; }
      set {
        agentId_ = value;
      }
    }
    /// <summary>Gets whether the agent_id field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasAgentId {
      get { return agentId_ != null; }
    }
    /// <summary>Clears the value of the agent_id field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearAgentId() {
      agentId_ = null;
    }

    /// <summary>Field number for the "club_id" field.</summary>
    public const int ClubIdFieldNumber = 2;
    private readonly static ulong ClubIdDefaultValue = 0UL;

    private ulong clubId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong ClubId {
      get { if ((_hasBits0 & 1) != 0) { return clubId_; } else { return ClubIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        clubId_ = value;
      }
    }
    /// <summary>Gets whether the "club_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasClubId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "club_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearClubId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "options" field.</summary>
    public const int OptionsFieldNumber = 3;
    private global::Bgs.Protocol.Club.V1.Client.RoleOptions options_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bgs.Protocol.Club.V1.Client.RoleOptions Options {
      get { return options_; }
      set {
        options_ = value;
      }
    }
    /// <summary>Gets whether the options field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasOptions {
      get { return options_ != null; }
    }
    /// <summary>Clears the value of the options field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearOptions() {
      options_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AssignRoleRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AssignRoleRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(AgentId, other.AgentId)) return false;
      if (ClubId != other.ClubId) return false;
      if (!object.Equals(Options, other.Options)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasAgentId) hash ^= AgentId.GetHashCode();
      if (HasClubId) hash ^= ClubId.GetHashCode();
      if (HasOptions) hash ^= Options.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasAgentId) {
        output.WriteRawTag(10);
        output.WriteMessage(AgentId);
      }
      if (HasClubId) {
        output.WriteRawTag(16);
        output.WriteUInt64(ClubId);
      }
      if (HasOptions) {
        output.WriteRawTag(26);
        output.WriteMessage(Options);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasAgentId) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AgentId);
      }
      if (HasClubId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(ClubId);
      }
      if (HasOptions) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Options);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AssignRoleRequest other) {
      if (other == null) {
        return;
      }
      if (other.HasAgentId) {
        if (!HasAgentId) {
          AgentId = new global::Bgs.Protocol.Club.V1.MemberId();
        }
        AgentId.MergeFrom(other.AgentId);
      }
      if (other.HasClubId) {
        ClubId = other.ClubId;
      }
      if (other.HasOptions) {
        if (!HasOptions) {
          Options = new global::Bgs.Protocol.Club.V1.Client.RoleOptions();
        }
        Options.MergeFrom(other.Options);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (!HasAgentId) {
              AgentId = new global::Bgs.Protocol.Club.V1.MemberId();
            }
            input.ReadMessage(AgentId);
            break;
          }
          case 16: {
            ClubId = input.ReadUInt64();
            break;
          }
          case 26: {
            if (!HasOptions) {
              Options = new global::Bgs.Protocol.Club.V1.Client.RoleOptions();
            }
            input.ReadMessage(Options);
            break;
          }
        }
      }
    }

  }

  public sealed partial class UnassignRoleRequest : pb::IMessage<UnassignRoleRequest> {
    private static readonly pb::MessageParser<UnassignRoleRequest> _parser = new pb::MessageParser<UnassignRoleRequest>(() => new UnassignRoleRequest());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UnassignRoleRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bgs.Protocol.Club.V1.Client.ClubRequestReflection.Descriptor.MessageTypes[22]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UnassignRoleRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UnassignRoleRequest(UnassignRoleRequest other) : this() {
      _hasBits0 = other._hasBits0;
      agentId_ = other.HasAgentId ? other.agentId_.Clone() : null;
      clubId_ = other.clubId_;
      options_ = other.HasOptions ? other.options_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UnassignRoleRequest Clone() {
      return new UnassignRoleRequest(this);
    }

    /// <summary>Field number for the "agent_id" field.</summary>
    public const int AgentIdFieldNumber = 1;
    private global::Bgs.Protocol.Club.V1.MemberId agentId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bgs.Protocol.Club.V1.MemberId AgentId {
      get { return agentId_; }
      set {
        agentId_ = value;
      }
    }
    /// <summary>Gets whether the agent_id field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasAgentId {
      get { return agentId_ != null; }
    }
    /// <summary>Clears the value of the agent_id field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearAgentId() {
      agentId_ = null;
    }

    /// <summary>Field number for the "club_id" field.</summary>
    public const int ClubIdFieldNumber = 2;
    private readonly static ulong ClubIdDefaultValue = 0UL;

    private ulong clubId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong ClubId {
      get { if ((_hasBits0 & 1) != 0) { return clubId_; } else { return ClubIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        clubId_ = value;
      }
    }
    /// <summary>Gets whether the "club_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasClubId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "club_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearClubId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "options" field.</summary>
    public const int OptionsFieldNumber = 3;
    private global::Bgs.Protocol.Club.V1.Client.RoleOptions options_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bgs.Protocol.Club.V1.Client.RoleOptions Options {
      get { return options_; }
      set {
        options_ = value;
      }
    }
    /// <summary>Gets whether the options field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasOptions {
      get { return options_ != null; }
    }
    /// <summary>Clears the value of the options field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearOptions() {
      options_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UnassignRoleRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UnassignRoleRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(AgentId, other.AgentId)) return false;
      if (ClubId != other.ClubId) return false;
      if (!object.Equals(Options, other.Options)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasAgentId) hash ^= AgentId.GetHashCode();
      if (HasClubId) hash ^= ClubId.GetHashCode();
      if (HasOptions) hash ^= Options.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasAgentId) {
        output.WriteRawTag(10);
        output.WriteMessage(AgentId);
      }
      if (HasClubId) {
        output.WriteRawTag(16);
        output.WriteUInt64(ClubId);
      }
      if (HasOptions) {
        output.WriteRawTag(26);
        output.WriteMessage(Options);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasAgentId) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AgentId);
      }
      if (HasClubId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(ClubId);
      }
      if (HasOptions) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Options);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UnassignRoleRequest other) {
      if (other == null) {
        return;
      }
      if (other.HasAgentId) {
        if (!HasAgentId) {
          AgentId = new global::Bgs.Protocol.Club.V1.MemberId();
        }
        AgentId.MergeFrom(other.AgentId);
      }
      if (other.HasClubId) {
        ClubId = other.ClubId;
      }
      if (other.HasOptions) {
        if (!HasOptions) {
          Options = new global::Bgs.Protocol.Club.V1.Client.RoleOptions();
        }
        Options.MergeFrom(other.Options);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (!HasAgentId) {
              AgentId = new global::Bgs.Protocol.Club.V1.MemberId();
            }
            input.ReadMessage(AgentId);
            break;
          }
          case 16: {
            ClubId = input.ReadUInt64();
            break;
          }
          case 26: {
            if (!HasOptions) {
              Options = new global::Bgs.Protocol.Club.V1.Client.RoleOptions();
            }
            input.ReadMessage(Options);
            break;
          }
        }
      }
    }

  }

  public sealed partial class SendInvitationRequest : pb::IMessage<SendInvitationRequest> {
    private static readonly pb::MessageParser<SendInvitationRequest> _parser = new pb::MessageParser<SendInvitationRequest>(() => new SendInvitationRequest());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SendInvitationRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bgs.Protocol.Club.V1.Client.ClubRequestReflection.Descriptor.MessageTypes[23]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SendInvitationRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SendInvitationRequest(SendInvitationRequest other) : this() {
      _hasBits0 = other._hasBits0;
      agentId_ = other.HasAgentId ? other.agentId_.Clone() : null;
      clubId_ = other.clubId_;
      options_ = other.HasOptions ? other.options_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SendInvitationRequest Clone() {
      return new SendInvitationRequest(this);
    }

    /// <summary>Field number for the "agent_id" field.</summary>
    public const int AgentIdFieldNumber = 1;
    private global::Bgs.Protocol.Club.V1.MemberId agentId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bgs.Protocol.Club.V1.MemberId AgentId {
      get { return agentId_; }
      set {
        agentId_ = value;
      }
    }
    /// <summary>Gets whether the agent_id field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasAgentId {
      get { return agentId_ != null; }
    }
    /// <summary>Clears the value of the agent_id field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearAgentId() {
      agentId_ = null;
    }

    /// <summary>Field number for the "club_id" field.</summary>
    public const int ClubIdFieldNumber = 2;
    private readonly static ulong ClubIdDefaultValue = 0UL;

    private ulong clubId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong ClubId {
      get { if ((_hasBits0 & 1) != 0) { return clubId_; } else { return ClubIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        clubId_ = value;
      }
    }
    /// <summary>Gets whether the "club_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasClubId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "club_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearClubId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "options" field.</summary>
    public const int OptionsFieldNumber = 3;
    private global::Bgs.Protocol.Club.V1.Client.SendInvitationOptions options_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bgs.Protocol.Club.V1.Client.SendInvitationOptions Options {
      get { return options_; }
      set {
        options_ = value;
      }
    }
    /// <summary>Gets whether the options field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasOptions {
      get { return options_ != null; }
    }
    /// <summary>Clears the value of the options field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearOptions() {
      options_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SendInvitationRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SendInvitationRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(AgentId, other.AgentId)) return false;
      if (ClubId != other.ClubId) return false;
      if (!object.Equals(Options, other.Options)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasAgentId) hash ^= AgentId.GetHashCode();
      if (HasClubId) hash ^= ClubId.GetHashCode();
      if (HasOptions) hash ^= Options.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasAgentId) {
        output.WriteRawTag(10);
        output.WriteMessage(AgentId);
      }
      if (HasClubId) {
        output.WriteRawTag(16);
        output.WriteUInt64(ClubId);
      }
      if (HasOptions) {
        output.WriteRawTag(26);
        output.WriteMessage(Options);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasAgentId) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AgentId);
      }
      if (HasClubId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(ClubId);
      }
      if (HasOptions) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Options);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SendInvitationRequest other) {
      if (other == null) {
        return;
      }
      if (other.HasAgentId) {
        if (!HasAgentId) {
          AgentId = new global::Bgs.Protocol.Club.V1.MemberId();
        }
        AgentId.MergeFrom(other.AgentId);
      }
      if (other.HasClubId) {
        ClubId = other.ClubId;
      }
      if (other.HasOptions) {
        if (!HasOptions) {
          Options = new global::Bgs.Protocol.Club.V1.Client.SendInvitationOptions();
        }
        Options.MergeFrom(other.Options);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (!HasAgentId) {
              AgentId = new global::Bgs.Protocol.Club.V1.MemberId();
            }
            input.ReadMessage(AgentId);
            break;
          }
          case 16: {
            ClubId = input.ReadUInt64();
            break;
          }
          case 26: {
            if (!HasOptions) {
              Options = new global::Bgs.Protocol.Club.V1.Client.SendInvitationOptions();
            }
            input.ReadMessage(Options);
            break;
          }
        }
      }
    }

  }

  public sealed partial class AcceptInvitationRequest : pb::IMessage<AcceptInvitationRequest> {
    private static readonly pb::MessageParser<AcceptInvitationRequest> _parser = new pb::MessageParser<AcceptInvitationRequest>(() => new AcceptInvitationRequest());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AcceptInvitationRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bgs.Protocol.Club.V1.Client.ClubRequestReflection.Descriptor.MessageTypes[24]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AcceptInvitationRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AcceptInvitationRequest(AcceptInvitationRequest other) : this() {
      _hasBits0 = other._hasBits0;
      agentId_ = other.HasAgentId ? other.agentId_.Clone() : null;
      clubId_ = other.clubId_;
      invitationId_ = other.invitationId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AcceptInvitationRequest Clone() {
      return new AcceptInvitationRequest(this);
    }

    /// <summary>Field number for the "agent_id" field.</summary>
    public const int AgentIdFieldNumber = 1;
    private global::Bgs.Protocol.Club.V1.MemberId agentId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bgs.Protocol.Club.V1.MemberId AgentId {
      get { return agentId_; }
      set {
        agentId_ = value;
      }
    }
    /// <summary>Gets whether the agent_id field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasAgentId {
      get { return agentId_ != null; }
    }
    /// <summary>Clears the value of the agent_id field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearAgentId() {
      agentId_ = null;
    }

    /// <summary>Field number for the "club_id" field.</summary>
    public const int ClubIdFieldNumber = 2;
    private readonly static ulong ClubIdDefaultValue = 0UL;

    private ulong clubId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong ClubId {
      get { if ((_hasBits0 & 1) != 0) { return clubId_; } else { return ClubIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        clubId_ = value;
      }
    }
    /// <summary>Gets whether the "club_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasClubId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "club_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearClubId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "invitation_id" field.</summary>
    public const int InvitationIdFieldNumber = 3;
    private readonly static ulong InvitationIdDefaultValue = 0UL;

    private ulong invitationId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong InvitationId {
      get { if ((_hasBits0 & 2) != 0) { return invitationId_; } else { return InvitationIdDefaultValue; } }
      set {
        _hasBits0 |= 2;
        invitationId_ = value;
      }
    }
    /// <summary>Gets whether the "invitation_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasInvitationId {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "invitation_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearInvitationId() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AcceptInvitationRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AcceptInvitationRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(AgentId, other.AgentId)) return false;
      if (ClubId != other.ClubId) return false;
      if (InvitationId != other.InvitationId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasAgentId) hash ^= AgentId.GetHashCode();
      if (HasClubId) hash ^= ClubId.GetHashCode();
      if (HasInvitationId) hash ^= InvitationId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasAgentId) {
        output.WriteRawTag(10);
        output.WriteMessage(AgentId);
      }
      if (HasClubId) {
        output.WriteRawTag(16);
        output.WriteUInt64(ClubId);
      }
      if (HasInvitationId) {
        output.WriteRawTag(25);
        output.WriteFixed64(InvitationId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasAgentId) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AgentId);
      }
      if (HasClubId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(ClubId);
      }
      if (HasInvitationId) {
        size += 1 + 8;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AcceptInvitationRequest other) {
      if (other == null) {
        return;
      }
      if (other.HasAgentId) {
        if (!HasAgentId) {
          AgentId = new global::Bgs.Protocol.Club.V1.MemberId();
        }
        AgentId.MergeFrom(other.AgentId);
      }
      if (other.HasClubId) {
        ClubId = other.ClubId;
      }
      if (other.HasInvitationId) {
        InvitationId = other.InvitationId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (!HasAgentId) {
              AgentId = new global::Bgs.Protocol.Club.V1.MemberId();
            }
            input.ReadMessage(AgentId);
            break;
          }
          case 16: {
            ClubId = input.ReadUInt64();
            break;
          }
          case 25: {
            InvitationId = input.ReadFixed64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DeclineInvitationRequest : pb::IMessage<DeclineInvitationRequest> {
    private static readonly pb::MessageParser<DeclineInvitationRequest> _parser = new pb::MessageParser<DeclineInvitationRequest>(() => new DeclineInvitationRequest());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DeclineInvitationRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bgs.Protocol.Club.V1.Client.ClubRequestReflection.Descriptor.MessageTypes[25]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeclineInvitationRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeclineInvitationRequest(DeclineInvitationRequest other) : this() {
      _hasBits0 = other._hasBits0;
      agentId_ = other.HasAgentId ? other.agentId_.Clone() : null;
      clubId_ = other.clubId_;
      invitationId_ = other.invitationId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeclineInvitationRequest Clone() {
      return new DeclineInvitationRequest(this);
    }

    /// <summary>Field number for the "agent_id" field.</summary>
    public const int AgentIdFieldNumber = 1;
    private global::Bgs.Protocol.Club.V1.MemberId agentId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bgs.Protocol.Club.V1.MemberId AgentId {
      get { return agentId_; }
      set {
        agentId_ = value;
      }
    }
    /// <summary>Gets whether the agent_id field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasAgentId {
      get { return agentId_ != null; }
    }
    /// <summary>Clears the value of the agent_id field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearAgentId() {
      agentId_ = null;
    }

    /// <summary>Field number for the "club_id" field.</summary>
    public const int ClubIdFieldNumber = 2;
    private readonly static ulong ClubIdDefaultValue = 0UL;

    private ulong clubId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong ClubId {
      get { if ((_hasBits0 & 1) != 0) { return clubId_; } else { return ClubIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        clubId_ = value;
      }
    }
    /// <summary>Gets whether the "club_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasClubId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "club_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearClubId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "invitation_id" field.</summary>
    public const int InvitationIdFieldNumber = 3;
    private readonly static ulong InvitationIdDefaultValue = 0UL;

    private ulong invitationId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong InvitationId {
      get { if ((_hasBits0 & 2) != 0) { return invitationId_; } else { return InvitationIdDefaultValue; } }
      set {
        _hasBits0 |= 2;
        invitationId_ = value;
      }
    }
    /// <summary>Gets whether the "invitation_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasInvitationId {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "invitation_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearInvitationId() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DeclineInvitationRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DeclineInvitationRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(AgentId, other.AgentId)) return false;
      if (ClubId != other.ClubId) return false;
      if (InvitationId != other.InvitationId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasAgentId) hash ^= AgentId.GetHashCode();
      if (HasClubId) hash ^= ClubId.GetHashCode();
      if (HasInvitationId) hash ^= InvitationId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasAgentId) {
        output.WriteRawTag(10);
        output.WriteMessage(AgentId);
      }
      if (HasClubId) {
        output.WriteRawTag(16);
        output.WriteUInt64(ClubId);
      }
      if (HasInvitationId) {
        output.WriteRawTag(25);
        output.WriteFixed64(InvitationId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasAgentId) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AgentId);
      }
      if (HasClubId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(ClubId);
      }
      if (HasInvitationId) {
        size += 1 + 8;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DeclineInvitationRequest other) {
      if (other == null) {
        return;
      }
      if (other.HasAgentId) {
        if (!HasAgentId) {
          AgentId = new global::Bgs.Protocol.Club.V1.MemberId();
        }
        AgentId.MergeFrom(other.AgentId);
      }
      if (other.HasClubId) {
        ClubId = other.ClubId;
      }
      if (other.HasInvitationId) {
        InvitationId = other.InvitationId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (!HasAgentId) {
              AgentId = new global::Bgs.Protocol.Club.V1.MemberId();
            }
            input.ReadMessage(AgentId);
            break;
          }
          case 16: {
            ClubId = input.ReadUInt64();
            break;
          }
          case 25: {
            InvitationId = input.ReadFixed64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class RevokeInvitationRequest : pb::IMessage<RevokeInvitationRequest> {
    private static readonly pb::MessageParser<RevokeInvitationRequest> _parser = new pb::MessageParser<RevokeInvitationRequest>(() => new RevokeInvitationRequest());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RevokeInvitationRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bgs.Protocol.Club.V1.Client.ClubRequestReflection.Descriptor.MessageTypes[26]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RevokeInvitationRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RevokeInvitationRequest(RevokeInvitationRequest other) : this() {
      _hasBits0 = other._hasBits0;
      agentId_ = other.HasAgentId ? other.agentId_.Clone() : null;
      clubId_ = other.clubId_;
      invitationId_ = other.invitationId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RevokeInvitationRequest Clone() {
      return new RevokeInvitationRequest(this);
    }

    /// <summary>Field number for the "agent_id" field.</summary>
    public const int AgentIdFieldNumber = 1;
    private global::Bgs.Protocol.Club.V1.MemberId agentId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bgs.Protocol.Club.V1.MemberId AgentId {
      get { return agentId_; }
      set {
        agentId_ = value;
      }
    }
    /// <summary>Gets whether the agent_id field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasAgentId {
      get { return agentId_ != null; }
    }
    /// <summary>Clears the value of the agent_id field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearAgentId() {
      agentId_ = null;
    }

    /// <summary>Field number for the "club_id" field.</summary>
    public const int ClubIdFieldNumber = 2;
    private readonly static ulong ClubIdDefaultValue = 0UL;

    private ulong clubId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong ClubId {
      get { if ((_hasBits0 & 1) != 0) { return clubId_; } else { return ClubIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        clubId_ = value;
      }
    }
    /// <summary>Gets whether the "club_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasClubId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "club_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearClubId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "invitation_id" field.</summary>
    public const int InvitationIdFieldNumber = 3;
    private readonly static ulong InvitationIdDefaultValue = 0UL;

    private ulong invitationId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong InvitationId {
      get { if ((_hasBits0 & 2) != 0) { return invitationId_; } else { return InvitationIdDefaultValue; } }
      set {
        _hasBits0 |= 2;
        invitationId_ = value;
      }
    }
    /// <summary>Gets whether the "invitation_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasInvitationId {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "invitation_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearInvitationId() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RevokeInvitationRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RevokeInvitationRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(AgentId, other.AgentId)) return false;
      if (ClubId != other.ClubId) return false;
      if (InvitationId != other.InvitationId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasAgentId) hash ^= AgentId.GetHashCode();
      if (HasClubId) hash ^= ClubId.GetHashCode();
      if (HasInvitationId) hash ^= InvitationId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasAgentId) {
        output.WriteRawTag(10);
        output.WriteMessage(AgentId);
      }
      if (HasClubId) {
        output.WriteRawTag(16);
        output.WriteUInt64(ClubId);
      }
      if (HasInvitationId) {
        output.WriteRawTag(25);
        output.WriteFixed64(InvitationId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasAgentId) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AgentId);
      }
      if (HasClubId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(ClubId);
      }
      if (HasInvitationId) {
        size += 1 + 8;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RevokeInvitationRequest other) {
      if (other == null) {
        return;
      }
      if (other.HasAgentId) {
        if (!HasAgentId) {
          AgentId = new global::Bgs.Protocol.Club.V1.MemberId();
        }
        AgentId.MergeFrom(other.AgentId);
      }
      if (other.HasClubId) {
        ClubId = other.ClubId;
      }
      if (other.HasInvitationId) {
        InvitationId = other.InvitationId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (!HasAgentId) {
              AgentId = new global::Bgs.Protocol.Club.V1.MemberId();
            }
            input.ReadMessage(AgentId);
            break;
          }
          case 16: {
            ClubId = input.ReadUInt64();
            break;
          }
          case 25: {
            InvitationId = input.ReadFixed64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetInvitationRequest : pb::IMessage<GetInvitationRequest> {
    private static readonly pb::MessageParser<GetInvitationRequest> _parser = new pb::MessageParser<GetInvitationRequest>(() => new GetInvitationRequest());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetInvitationRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bgs.Protocol.Club.V1.Client.ClubRequestReflection.Descriptor.MessageTypes[27]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetInvitationRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetInvitationRequest(GetInvitationRequest other) : this() {
      _hasBits0 = other._hasBits0;
      agentId_ = other.HasAgentId ? other.agentId_.Clone() : null;
      clubId_ = other.clubId_;
      invitationId_ = other.invitationId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetInvitationRequest Clone() {
      return new GetInvitationRequest(this);
    }

    /// <summary>Field number for the "agent_id" field.</summary>
    public const int AgentIdFieldNumber = 1;
    private global::Bgs.Protocol.Club.V1.MemberId agentId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bgs.Protocol.Club.V1.MemberId AgentId {
      get { return agentId_; }
      set {
        agentId_ = value;
      }
    }
    /// <summary>Gets whether the agent_id field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasAgentId {
      get { return agentId_ != null; }
    }
    /// <summary>Clears the value of the agent_id field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearAgentId() {
      agentId_ = null;
    }

    /// <summary>Field number for the "club_id" field.</summary>
    public const int ClubIdFieldNumber = 2;
    private readonly static ulong ClubIdDefaultValue = 0UL;

    private ulong clubId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong ClubId {
      get { if ((_hasBits0 & 1) != 0) { return clubId_; } else { return ClubIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        clubId_ = value;
      }
    }
    /// <summary>Gets whether the "club_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasClubId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "club_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearClubId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "invitation_id" field.</summary>
    public const int InvitationIdFieldNumber = 3;
    private readonly static ulong InvitationIdDefaultValue = 0UL;

    private ulong invitationId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong InvitationId {
      get { if ((_hasBits0 & 2) != 0) { return invitationId_; } else { return InvitationIdDefaultValue; } }
      set {
        _hasBits0 |= 2;
        invitationId_ = value;
      }
    }
    /// <summary>Gets whether the "invitation_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasInvitationId {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "invitation_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearInvitationId() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetInvitationRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetInvitationRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(AgentId, other.AgentId)) return false;
      if (ClubId != other.ClubId) return false;
      if (InvitationId != other.InvitationId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasAgentId) hash ^= AgentId.GetHashCode();
      if (HasClubId) hash ^= ClubId.GetHashCode();
      if (HasInvitationId) hash ^= InvitationId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasAgentId) {
        output.WriteRawTag(10);
        output.WriteMessage(AgentId);
      }
      if (HasClubId) {
        output.WriteRawTag(16);
        output.WriteUInt64(ClubId);
      }
      if (HasInvitationId) {
        output.WriteRawTag(25);
        output.WriteFixed64(InvitationId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasAgentId) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AgentId);
      }
      if (HasClubId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(ClubId);
      }
      if (HasInvitationId) {
        size += 1 + 8;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetInvitationRequest other) {
      if (other == null) {
        return;
      }
      if (other.HasAgentId) {
        if (!HasAgentId) {
          AgentId = new global::Bgs.Protocol.Club.V1.MemberId();
        }
        AgentId.MergeFrom(other.AgentId);
      }
      if (other.HasClubId) {
        ClubId = other.ClubId;
      }
      if (other.HasInvitationId) {
        InvitationId = other.InvitationId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (!HasAgentId) {
              AgentId = new global::Bgs.Protocol.Club.V1.MemberId();
            }
            input.ReadMessage(AgentId);
            break;
          }
          case 16: {
            ClubId = input.ReadUInt64();
            break;
          }
          case 25: {
            InvitationId = input.ReadFixed64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetInvitationResponse : pb::IMessage<GetInvitationResponse> {
    private static readonly pb::MessageParser<GetInvitationResponse> _parser = new pb::MessageParser<GetInvitationResponse>(() => new GetInvitationResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetInvitationResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bgs.Protocol.Club.V1.Client.ClubRequestReflection.Descriptor.MessageTypes[28]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetInvitationResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetInvitationResponse(GetInvitationResponse other) : this() {
      invitation_ = other.HasInvitation ? other.invitation_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetInvitationResponse Clone() {
      return new GetInvitationResponse(this);
    }

    /// <summary>Field number for the "invitation" field.</summary>
    public const int InvitationFieldNumber = 1;
    private global::Bgs.Protocol.Club.V1.Client.ClubInvitation invitation_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bgs.Protocol.Club.V1.Client.ClubInvitation Invitation {
      get { return invitation_; }
      set {
        invitation_ = value;
      }
    }
    /// <summary>Gets whether the invitation field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasInvitation {
      get { return invitation_ != null; }
    }
    /// <summary>Clears the value of the invitation field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearInvitation() {
      invitation_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetInvitationResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetInvitationResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Invitation, other.Invitation)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasInvitation) hash ^= Invitation.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasInvitation) {
        output.WriteRawTag(10);
        output.WriteMessage(Invitation);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasInvitation) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Invitation);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetInvitationResponse other) {
      if (other == null) {
        return;
      }
      if (other.HasInvitation) {
        if (!HasInvitation) {
          Invitation = new global::Bgs.Protocol.Club.V1.Client.ClubInvitation();
        }
        Invitation.MergeFrom(other.Invitation);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (!HasInvitation) {
              Invitation = new global::Bgs.Protocol.Club.V1.Client.ClubInvitation();
            }
            input.ReadMessage(Invitation);
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetInvitationsRequest : pb::IMessage<GetInvitationsRequest> {
    private static readonly pb::MessageParser<GetInvitationsRequest> _parser = new pb::MessageParser<GetInvitationsRequest>(() => new GetInvitationsRequest());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetInvitationsRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bgs.Protocol.Club.V1.Client.ClubRequestReflection.Descriptor.MessageTypes[29]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetInvitationsRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetInvitationsRequest(GetInvitationsRequest other) : this() {
      _hasBits0 = other._hasBits0;
      agentId_ = other.HasAgentId ? other.agentId_.Clone() : null;
      clubId_ = other.clubId_;
      continuation_ = other.continuation_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetInvitationsRequest Clone() {
      return new GetInvitationsRequest(this);
    }

    /// <summary>Field number for the "agent_id" field.</summary>
    public const int AgentIdFieldNumber = 1;
    private global::Bgs.Protocol.Club.V1.MemberId agentId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bgs.Protocol.Club.V1.MemberId AgentId {
      get { return agentId_; }
      set {
        agentId_ = value;
      }
    }
    /// <summary>Gets whether the agent_id field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasAgentId {
      get { return agentId_ != null; }
    }
    /// <summary>Clears the value of the agent_id field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearAgentId() {
      agentId_ = null;
    }

    /// <summary>Field number for the "club_id" field.</summary>
    public const int ClubIdFieldNumber = 2;
    private readonly static ulong ClubIdDefaultValue = 0UL;

    private ulong clubId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong ClubId {
      get { if ((_hasBits0 & 1) != 0) { return clubId_; } else { return ClubIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        clubId_ = value;
      }
    }
    /// <summary>Gets whether the "club_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasClubId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "club_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearClubId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "continuation" field.</summary>
    public const int ContinuationFieldNumber = 3;
    private readonly static ulong ContinuationDefaultValue = 0UL;

    private ulong continuation_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong Continuation {
      get { if ((_hasBits0 & 2) != 0) { return continuation_; } else { return ContinuationDefaultValue; } }
      set {
        _hasBits0 |= 2;
        continuation_ = value;
      }
    }
    /// <summary>Gets whether the "continuation" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasContinuation {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "continuation" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearContinuation() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetInvitationsRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetInvitationsRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(AgentId, other.AgentId)) return false;
      if (ClubId != other.ClubId) return false;
      if (Continuation != other.Continuation) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasAgentId) hash ^= AgentId.GetHashCode();
      if (HasClubId) hash ^= ClubId.GetHashCode();
      if (HasContinuation) hash ^= Continuation.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasAgentId) {
        output.WriteRawTag(10);
        output.WriteMessage(AgentId);
      }
      if (HasClubId) {
        output.WriteRawTag(16);
        output.WriteUInt64(ClubId);
      }
      if (HasContinuation) {
        output.WriteRawTag(24);
        output.WriteUInt64(Continuation);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasAgentId) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AgentId);
      }
      if (HasClubId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(ClubId);
      }
      if (HasContinuation) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Continuation);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetInvitationsRequest other) {
      if (other == null) {
        return;
      }
      if (other.HasAgentId) {
        if (!HasAgentId) {
          AgentId = new global::Bgs.Protocol.Club.V1.MemberId();
        }
        AgentId.MergeFrom(other.AgentId);
      }
      if (other.HasClubId) {
        ClubId = other.ClubId;
      }
      if (other.HasContinuation) {
        Continuation = other.Continuation;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (!HasAgentId) {
              AgentId = new global::Bgs.Protocol.Club.V1.MemberId();
            }
            input.ReadMessage(AgentId);
            break;
          }
          case 16: {
            ClubId = input.ReadUInt64();
            break;
          }
          case 24: {
            Continuation = input.ReadUInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetInvitationsResponse : pb::IMessage<GetInvitationsResponse> {
    private static readonly pb::MessageParser<GetInvitationsResponse> _parser = new pb::MessageParser<GetInvitationsResponse>(() => new GetInvitationsResponse());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetInvitationsResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bgs.Protocol.Club.V1.Client.ClubRequestReflection.Descriptor.MessageTypes[30]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetInvitationsResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetInvitationsResponse(GetInvitationsResponse other) : this() {
      _hasBits0 = other._hasBits0;
      invitation_ = other.invitation_.Clone();
      continuation_ = other.continuation_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetInvitationsResponse Clone() {
      return new GetInvitationsResponse(this);
    }

    /// <summary>Field number for the "invitation" field.</summary>
    public const int InvitationFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Bgs.Protocol.Club.V1.Client.ClubInvitation> _repeated_invitation_codec
        = pb::FieldCodec.ForMessage(10, global::Bgs.Protocol.Club.V1.Client.ClubInvitation.Parser);
    private readonly pbc::RepeatedField<global::Bgs.Protocol.Club.V1.Client.ClubInvitation> invitation_ = new pbc::RepeatedField<global::Bgs.Protocol.Club.V1.Client.ClubInvitation>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Bgs.Protocol.Club.V1.Client.ClubInvitation> Invitation {
      get { return invitation_; }
    }

    /// <summary>Field number for the "continuation" field.</summary>
    public const int ContinuationFieldNumber = 2;
    private readonly static ulong ContinuationDefaultValue = 0UL;

    private ulong continuation_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong Continuation {
      get { if ((_hasBits0 & 1) != 0) { return continuation_; } else { return ContinuationDefaultValue; } }
      set {
        _hasBits0 |= 1;
        continuation_ = value;
      }
    }
    /// <summary>Gets whether the "continuation" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasContinuation {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "continuation" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearContinuation() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetInvitationsResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetInvitationsResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!invitation_.Equals(other.invitation_)) return false;
      if (Continuation != other.Continuation) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= invitation_.GetHashCode();
      if (HasContinuation) hash ^= Continuation.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      invitation_.WriteTo(output, _repeated_invitation_codec);
      if (HasContinuation) {
        output.WriteRawTag(16);
        output.WriteUInt64(Continuation);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += invitation_.CalculateSize(_repeated_invitation_codec);
      if (HasContinuation) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Continuation);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetInvitationsResponse other) {
      if (other == null) {
        return;
      }
      invitation_.Add(other.invitation_);
      if (other.HasContinuation) {
        Continuation = other.Continuation;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            invitation_.AddEntriesFrom(input, _repeated_invitation_codec);
            break;
          }
          case 16: {
            Continuation = input.ReadUInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class SendSuggestionRequest : pb::IMessage<SendSuggestionRequest> {
    private static readonly pb::MessageParser<SendSuggestionRequest> _parser = new pb::MessageParser<SendSuggestionRequest>(() => new SendSuggestionRequest());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SendSuggestionRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bgs.Protocol.Club.V1.Client.ClubRequestReflection.Descriptor.MessageTypes[31]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SendSuggestionRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SendSuggestionRequest(SendSuggestionRequest other) : this() {
      _hasBits0 = other._hasBits0;
      agentId_ = other.HasAgentId ? other.agentId_.Clone() : null;
      clubId_ = other.clubId_;
      options_ = other.HasOptions ? other.options_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SendSuggestionRequest Clone() {
      return new SendSuggestionRequest(this);
    }

    /// <summary>Field number for the "agent_id" field.</summary>
    public const int AgentIdFieldNumber = 1;
    private global::Bgs.Protocol.Club.V1.MemberId agentId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bgs.Protocol.Club.V1.MemberId AgentId {
      get { return agentId_; }
      set {
        agentId_ = value;
      }
    }
    /// <summary>Gets whether the agent_id field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasAgentId {
      get { return agentId_ != null; }
    }
    /// <summary>Clears the value of the agent_id field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearAgentId() {
      agentId_ = null;
    }

    /// <summary>Field number for the "club_id" field.</summary>
    public const int ClubIdFieldNumber = 2;
    private readonly static ulong ClubIdDefaultValue = 0UL;

    private ulong clubId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong ClubId {
      get { if ((_hasBits0 & 1) != 0) { return clubId_; } else { return ClubIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        clubId_ = value;
      }
    }
    /// <summary>Gets whether the "club_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasClubId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "club_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearClubId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "options" field.</summary>
    public const int OptionsFieldNumber = 3;
    private global::Bgs.Protocol.Club.V1.Client.SendSuggestionOptions options_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bgs.Protocol.Club.V1.Client.SendSuggestionOptions Options {
      get { return options_; }
      set {
        options_ = value;
      }
    }
    /// <summary>Gets whether the options field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasOptions {
      get { return options_ != null; }
    }
    /// <summary>Clears the value of the options field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearOptions() {
      options_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SendSuggestionRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SendSuggestionRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(AgentId, other.AgentId)) return false;
      if (ClubId != other.ClubId) return false;
      if (!object.Equals(Options, other.Options)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasAgentId) hash ^= AgentId.GetHashCode();
      if (HasClubId) hash ^= ClubId.GetHashCode();
      if (HasOptions) hash ^= Options.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasAgentId) {
        output.WriteRawTag(10);
        output.WriteMessage(AgentId);
      }
      if (HasClubId) {
        output.WriteRawTag(16);
        output.WriteUInt64(ClubId);
      }
      if (HasOptions) {
        output.WriteRawTag(26);
        output.WriteMessage(Options);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasAgentId) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AgentId);
      }
      if (HasClubId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(ClubId);
      }
      if (HasOptions) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Options);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SendSuggestionRequest other) {
      if (other == null) {
        return;
      }
      if (other.HasAgentId) {
        if (!HasAgentId) {
          AgentId = new global::Bgs.Protocol.Club.V1.MemberId();
        }
        AgentId.MergeFrom(other.AgentId);
      }
      if (other.HasClubId) {
        ClubId = other.ClubId;
      }
      if (other.HasOptions) {
        if (!HasOptions) {
          Options = new global::Bgs.Protocol.Club.V1.Client.SendSuggestionOptions();
        }
        Options.MergeFrom(other.Options);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (!HasAgentId) {
              AgentId = new global::Bgs.Protocol.Club.V1.MemberId();
            }
            input.ReadMessage(AgentId);
            break;
          }
          case 16: {
            ClubId = input.ReadUInt64();
            break;
          }
          case 26: {
            if (!HasOptions) {
              Options = new global::Bgs.Protocol.Club.V1.Client.SendSuggestionOptions();
            }
            input.ReadMessage(Options);
            break;
          }
        }
      }
    }

  }

  public sealed partial class AcceptSuggestionRequest : pb::IMessage<AcceptSuggestionRequest> {
    private static readonly pb::MessageParser<AcceptSuggestionRequest> _parser = new pb::MessageParser<AcceptSuggestionRequest>(() => new AcceptSuggestionRequest());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AcceptSuggestionRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bgs.Protocol.Club.V1.Client.ClubRequestReflection.Descriptor.MessageTypes[32]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AcceptSuggestionRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AcceptSuggestionRequest(AcceptSuggestionRequest other) : this() {
      _hasBits0 = other._hasBits0;
      agentId_ = other.HasAgentId ? other.agentId_.Clone() : null;
      clubId_ = other.clubId_;
      suggestionId_ = other.suggestionId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AcceptSuggestionRequest Clone() {
      return new AcceptSuggestionRequest(this);
    }

    /// <summary>Field number for the "agent_id" field.</summary>
    public const int AgentIdFieldNumber = 1;
    private global::Bgs.Protocol.Club.V1.MemberId agentId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bgs.Protocol.Club.V1.MemberId AgentId {
      get { return agentId_; }
      set {
        agentId_ = value;
      }
    }
    /// <summary>Gets whether the agent_id field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasAgentId {
      get { return agentId_ != null; }
    }
    /// <summary>Clears the value of the agent_id field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearAgentId() {
      agentId_ = null;
    }

    /// <summary>Field number for the "club_id" field.</summary>
    public const int ClubIdFieldNumber = 2;
    private readonly static ulong ClubIdDefaultValue = 0UL;

    private ulong clubId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong ClubId {
      get { if ((_hasBits0 & 1) != 0) { return clubId_; } else { return ClubIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        clubId_ = value;
      }
    }
    /// <summary>Gets whether the "club_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasClubId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "club_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearClubId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "suggestion_id" field.</summary>
    public const int SuggestionIdFieldNumber = 3;
    private readonly static ulong SuggestionIdDefaultValue = 0UL;

    private ulong suggestionId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong SuggestionId {
      get { if ((_hasBits0 & 2) != 0) { return suggestionId_; } else { return SuggestionIdDefaultValue; } }
      set {
        _hasBits0 |= 2;
        suggestionId_ = value;
      }
    }
    /// <summary>Gets whether the "suggestion_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasSuggestionId {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "suggestion_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearSuggestionId() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AcceptSuggestionRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AcceptSuggestionRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(AgentId, other.AgentId)) return false;
      if (ClubId != other.ClubId) return false;
      if (SuggestionId != other.SuggestionId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasAgentId) hash ^= AgentId.GetHashCode();
      if (HasClubId) hash ^= ClubId.GetHashCode();
      if (HasSuggestionId) hash ^= SuggestionId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasAgentId) {
        output.WriteRawTag(10);
        output.WriteMessage(AgentId);
      }
      if (HasClubId) {
        output.WriteRawTag(16);
        output.WriteUInt64(ClubId);
      }
      if (HasSuggestionId) {
        output.WriteRawTag(25);
        output.WriteFixed64(SuggestionId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasAgentId) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AgentId);
      }
      if (HasClubId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(ClubId);
      }
      if (HasSuggestionId) {
        size += 1 + 8;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AcceptSuggestionRequest other) {
      if (other == null) {
        return;
      }
      if (other.HasAgentId) {
        if (!HasAgentId) {
          AgentId = new global::Bgs.Protocol.Club.V1.MemberId();
        }
        AgentId.MergeFrom(other.AgentId);
      }
      if (other.HasClubId) {
        ClubId = other.ClubId;
      }
      if (other.HasSuggestionId) {
        SuggestionId = other.SuggestionId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (!HasAgentId) {
              AgentId = new global::Bgs.Protocol.Club.V1.MemberId();
            }
            input.ReadMessage(AgentId);
            break;
          }
          case 16: {
            ClubId = input.ReadUInt64();
            break;
          }
          case 25: {
            SuggestionId = input.ReadFixed64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DeclineSuggestionRequest : pb::IMessage<DeclineSuggestionRequest> {
    private static readonly pb::MessageParser<DeclineSuggestionRequest> _parser = new pb::MessageParser<DeclineSuggestionRequest>(() => new DeclineSuggestionRequest());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DeclineSuggestionRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bgs.Protocol.Club.V1.Client.ClubRequestReflection.Descriptor.MessageTypes[33]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeclineSuggestionRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeclineSuggestionRequest(DeclineSuggestionRequest other) : this() {
      _hasBits0 = other._hasBits0;
      agentId_ = other.HasAgentId ? other.agentId_.Clone() : null;
      clubId_ = other.clubId_;
      suggestionId_ = other.suggestionId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeclineSuggestionRequest Clone() {
      return new DeclineSuggestionRequest(this);
    }

    /// <summary>Field number for the "agent_id" field.</summary>
    public const int AgentIdFieldNumber = 1;
    private global::Bgs.Protocol.Club.V1.MemberId agentId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bgs.Protocol.Club.V1.MemberId AgentId {
      get { return agentId_; }
      set {
        agentId_ = value;
      }
    }
    /// <summary>Gets whether the agent_id field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasAgentId {
      get { return agentId_ != null; }
    }
    /// <summary>Clears the value of the agent_id field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearAgentId() {
      agentId_ = null;
    }

    /// <summary>Field number for the "club_id" field.</summary>
    public const int ClubIdFieldNumber = 2;
    private readonly static ulong ClubIdDefaultValue = 0UL;

    private ulong clubId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong ClubId {
      get { if ((_hasBits0 & 1) != 0) { return clubId_; } else { return ClubIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        clubId_ = value;
      }
    }
    /// <summary>Gets whether the "club_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasClubId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "club_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearClubId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "suggestion_id" field.</summary>
    public const int SuggestionIdFieldNumber = 3;
    private readonly static ulong SuggestionIdDefaultValue = 0UL;

    private ulong suggestionId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong SuggestionId {
      get { if ((_hasBits0 & 2) != 0) { return suggestionId_; } else { return SuggestionIdDefaultValue; } }
      set {
        _hasBits0 |= 2;
        suggestionId_ = value;
      }
    }
    /// <summary>Gets whether the "suggestion_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasSuggestionId {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "suggestion_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearSuggestionId() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DeclineSuggestionRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DeclineSuggestionRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(AgentId, other.AgentId)) return false;
      if (ClubId != other.ClubId) return false;
      if (SuggestionId != other.SuggestionId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasAgentId) hash ^= AgentId.GetHashCode();
      if (HasClubId) hash ^= ClubId.GetHashCode();
      if (HasSuggestionId) hash ^= SuggestionId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasAgentId) {
        output.WriteRawTag(10);
        output.WriteMessage(AgentId);
      }
      if (HasClubId) {
        output.WriteRawTag(16);
        output.WriteUInt64(ClubId);
      }
      if (HasSuggestionId) {
        output.WriteRawTag(25);
        output.WriteFixed64(SuggestionId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasAgentId) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AgentId);
      }
      if (HasClubId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(ClubId);
      }
      if (HasSuggestionId) {
        size += 1 + 8;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DeclineSuggestionRequest other) {
      if (other == null) {
        return;
      }
      if (other.HasAgentId) {
        if (!HasAgentId) {
          AgentId = new global::Bgs.Protocol.Club.V1.MemberId();
        }
        AgentId.MergeFrom(other.AgentId);
      }
      if (other.HasClubId) {
        ClubId = other.ClubId;
      }
      if (other.HasSuggestionId) {
        SuggestionId = other.SuggestionId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (!HasAgentId) {
              AgentId = new global::Bgs.Protocol.Club.V1.MemberId();
            }
            input.ReadMessage(AgentId);
            break;
          }
          case 16: {
            ClubId = input.ReadUInt64();
            break;
          }
          case 25: {
            SuggestionId = input.ReadFixed64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetSuggestionRequest : pb::IMessage<GetSuggestionRequest> {
    private static readonly pb::MessageParser<GetSuggestionRequest> _parser = new pb::MessageParser<GetSuggestionRequest>(() => new GetSuggestionRequest());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetSuggestionRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bgs.Protocol.Club.V1.Client.ClubRequestReflection.Descriptor.MessageTypes[34]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetSuggestionRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetSuggestionRequest(GetSuggestionRequest other) : this() {
      _hasBits0 = other._hasBits0;
      agentId_ = other.HasAgentId ? other.agentId_.Clone() : null;
      clubId_ = other.clubId_;
      suggestionId_ = other.suggestionId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetSuggestionRequest Clone() {
      return new GetSuggestionRequest(this);
    }

    /// <summary>Field number for the "agent_id" field.</summary>
    public const int AgentIdFieldNumber = 1;
    private global::Bgs.Protocol.Club.V1.MemberId agentId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bgs.Protocol.Club.V1.MemberId AgentId {
      get { return agentId_; }
      set {
        agentId_ = value;
      }
    }
    /// <summary>Gets whether the agent_id field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasAgentId {
      get { return agentId_ != null; }
    }
    /// <summary>Clears the value of the agent_id field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearAgentId() {
      agentId_ = null;
    }

    /// <summary>Field number for the "club_id" field.</summary>
    public const int ClubIdFieldNumber = 2;
    private readonly static ulong ClubIdDefaultValue = 0UL;

    private ulong clubId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong ClubId {
      get { if ((_hasBits0 & 1) != 0) { return clubId_; } else { return ClubIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        clubId_ = value;
      }
    }
    /// <summary>Gets whether the "club_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasClubId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "club_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearClubId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "suggestion_id" field.</summary>
    public const int SuggestionIdFieldNumber = 3;
    private readonly static ulong SuggestionIdDefaultValue = 0UL;

    private ulong suggestionId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong SuggestionId {
      get { if ((_hasBits0 & 2) != 0) { return suggestionId_; } else { return SuggestionIdDefaultValue; } }
      set {
        _hasBits0 |= 2;
        suggestionId_ = value;
      }
    }
    /// <summary>Gets whether the "suggestion_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasSuggestionId {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "suggestion_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearSuggestionId() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetSuggestionRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetSuggestionRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(AgentId, other.AgentId)) return false;
      if (ClubId != other.ClubId) return false;
      if (SuggestionId != other.SuggestionId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasAgentId) hash ^= AgentId.GetHashCode();
      if (HasClubId) hash ^= ClubId.GetHashCode();
      if (HasSuggestionId) hash ^= SuggestionId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasAgentId) {
        output.WriteRawTag(10);
        output.WriteMessage(AgentId);
      }
      if (HasClubId) {
        output.WriteRawTag(16);
        output.WriteUInt64(ClubId);
      }
      if (HasSuggestionId) {
        output.WriteRawTag(25);
        output.WriteFixed64(SuggestionId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasAgentId) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AgentId);
      }
      if (HasClubId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(ClubId);
      }
      if (HasSuggestionId) {
        size += 1 + 8;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetSuggestionRequest other) {
      if (other == null) {
        return;
      }
      if (other.HasAgentId) {
        if (!HasAgentId) {
          AgentId = new global::Bgs.Protocol.Club.V1.MemberId();
        }
        AgentId.MergeFrom(other.AgentId);
      }
      if (other.HasClubId) {
        ClubId = other.ClubId;
      }
      if (other.HasSuggestionId) {
        SuggestionId = other.SuggestionId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (!HasAgentId) {
              AgentId = new global::Bgs.Protocol.Club.V1.MemberId();
            }
            input.ReadMessage(AgentId);
            break;
          }
          case 16: {
            ClubId = input.ReadUInt64();
            break;
          }
          case 25: {
            SuggestionId = input.ReadFixed64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetSuggestionResponse : pb::IMessage<GetSuggestionResponse> {
    private static readonly pb::MessageParser<GetSuggestionResponse> _parser = new pb::MessageParser<GetSuggestionResponse>(() => new GetSuggestionResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetSuggestionResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bgs.Protocol.Club.V1.Client.ClubRequestReflection.Descriptor.MessageTypes[35]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetSuggestionResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetSuggestionResponse(GetSuggestionResponse other) : this() {
      suggestion_ = other.HasSuggestion ? other.suggestion_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetSuggestionResponse Clone() {
      return new GetSuggestionResponse(this);
    }

    /// <summary>Field number for the "suggestion" field.</summary>
    public const int SuggestionFieldNumber = 1;
    private global::Bgs.Protocol.Club.V1.Client.ClubSuggestion suggestion_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bgs.Protocol.Club.V1.Client.ClubSuggestion Suggestion {
      get { return suggestion_; }
      set {
        suggestion_ = value;
      }
    }
    /// <summary>Gets whether the suggestion field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasSuggestion {
      get { return suggestion_ != null; }
    }
    /// <summary>Clears the value of the suggestion field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearSuggestion() {
      suggestion_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetSuggestionResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetSuggestionResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Suggestion, other.Suggestion)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasSuggestion) hash ^= Suggestion.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasSuggestion) {
        output.WriteRawTag(10);
        output.WriteMessage(Suggestion);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasSuggestion) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Suggestion);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetSuggestionResponse other) {
      if (other == null) {
        return;
      }
      if (other.HasSuggestion) {
        if (!HasSuggestion) {
          Suggestion = new global::Bgs.Protocol.Club.V1.Client.ClubSuggestion();
        }
        Suggestion.MergeFrom(other.Suggestion);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (!HasSuggestion) {
              Suggestion = new global::Bgs.Protocol.Club.V1.Client.ClubSuggestion();
            }
            input.ReadMessage(Suggestion);
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetSuggestionsRequest : pb::IMessage<GetSuggestionsRequest> {
    private static readonly pb::MessageParser<GetSuggestionsRequest> _parser = new pb::MessageParser<GetSuggestionsRequest>(() => new GetSuggestionsRequest());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetSuggestionsRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bgs.Protocol.Club.V1.Client.ClubRequestReflection.Descriptor.MessageTypes[36]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetSuggestionsRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetSuggestionsRequest(GetSuggestionsRequest other) : this() {
      _hasBits0 = other._hasBits0;
      agentId_ = other.HasAgentId ? other.agentId_.Clone() : null;
      clubId_ = other.clubId_;
      continuation_ = other.continuation_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetSuggestionsRequest Clone() {
      return new GetSuggestionsRequest(this);
    }

    /// <summary>Field number for the "agent_id" field.</summary>
    public const int AgentIdFieldNumber = 1;
    private global::Bgs.Protocol.Club.V1.MemberId agentId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bgs.Protocol.Club.V1.MemberId AgentId {
      get { return agentId_; }
      set {
        agentId_ = value;
      }
    }
    /// <summary>Gets whether the agent_id field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasAgentId {
      get { return agentId_ != null; }
    }
    /// <summary>Clears the value of the agent_id field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearAgentId() {
      agentId_ = null;
    }

    /// <summary>Field number for the "club_id" field.</summary>
    public const int ClubIdFieldNumber = 2;
    private readonly static ulong ClubIdDefaultValue = 0UL;

    private ulong clubId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong ClubId {
      get { if ((_hasBits0 & 1) != 0) { return clubId_; } else { return ClubIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        clubId_ = value;
      }
    }
    /// <summary>Gets whether the "club_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasClubId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "club_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearClubId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "continuation" field.</summary>
    public const int ContinuationFieldNumber = 3;
    private readonly static ulong ContinuationDefaultValue = 0UL;

    private ulong continuation_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong Continuation {
      get { if ((_hasBits0 & 2) != 0) { return continuation_; } else { return ContinuationDefaultValue; } }
      set {
        _hasBits0 |= 2;
        continuation_ = value;
      }
    }
    /// <summary>Gets whether the "continuation" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasContinuation {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "continuation" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearContinuation() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetSuggestionsRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetSuggestionsRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(AgentId, other.AgentId)) return false;
      if (ClubId != other.ClubId) return false;
      if (Continuation != other.Continuation) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasAgentId) hash ^= AgentId.GetHashCode();
      if (HasClubId) hash ^= ClubId.GetHashCode();
      if (HasContinuation) hash ^= Continuation.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasAgentId) {
        output.WriteRawTag(10);
        output.WriteMessage(AgentId);
      }
      if (HasClubId) {
        output.WriteRawTag(16);
        output.WriteUInt64(ClubId);
      }
      if (HasContinuation) {
        output.WriteRawTag(24);
        output.WriteUInt64(Continuation);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasAgentId) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AgentId);
      }
      if (HasClubId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(ClubId);
      }
      if (HasContinuation) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Continuation);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetSuggestionsRequest other) {
      if (other == null) {
        return;
      }
      if (other.HasAgentId) {
        if (!HasAgentId) {
          AgentId = new global::Bgs.Protocol.Club.V1.MemberId();
        }
        AgentId.MergeFrom(other.AgentId);
      }
      if (other.HasClubId) {
        ClubId = other.ClubId;
      }
      if (other.HasContinuation) {
        Continuation = other.Continuation;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (!HasAgentId) {
              AgentId = new global::Bgs.Protocol.Club.V1.MemberId();
            }
            input.ReadMessage(AgentId);
            break;
          }
          case 16: {
            ClubId = input.ReadUInt64();
            break;
          }
          case 24: {
            Continuation = input.ReadUInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetSuggestionsResponse : pb::IMessage<GetSuggestionsResponse> {
    private static readonly pb::MessageParser<GetSuggestionsResponse> _parser = new pb::MessageParser<GetSuggestionsResponse>(() => new GetSuggestionsResponse());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetSuggestionsResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bgs.Protocol.Club.V1.Client.ClubRequestReflection.Descriptor.MessageTypes[37]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetSuggestionsResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetSuggestionsResponse(GetSuggestionsResponse other) : this() {
      _hasBits0 = other._hasBits0;
      suggestion_ = other.suggestion_.Clone();
      continuation_ = other.continuation_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetSuggestionsResponse Clone() {
      return new GetSuggestionsResponse(this);
    }

    /// <summary>Field number for the "suggestion" field.</summary>
    public const int SuggestionFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Bgs.Protocol.Club.V1.Client.ClubSuggestion> _repeated_suggestion_codec
        = pb::FieldCodec.ForMessage(10, global::Bgs.Protocol.Club.V1.Client.ClubSuggestion.Parser);
    private readonly pbc::RepeatedField<global::Bgs.Protocol.Club.V1.Client.ClubSuggestion> suggestion_ = new pbc::RepeatedField<global::Bgs.Protocol.Club.V1.Client.ClubSuggestion>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Bgs.Protocol.Club.V1.Client.ClubSuggestion> Suggestion {
      get { return suggestion_; }
    }

    /// <summary>Field number for the "continuation" field.</summary>
    public const int ContinuationFieldNumber = 2;
    private readonly static ulong ContinuationDefaultValue = 0UL;

    private ulong continuation_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong Continuation {
      get { if ((_hasBits0 & 1) != 0) { return continuation_; } else { return ContinuationDefaultValue; } }
      set {
        _hasBits0 |= 1;
        continuation_ = value;
      }
    }
    /// <summary>Gets whether the "continuation" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasContinuation {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "continuation" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearContinuation() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetSuggestionsResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetSuggestionsResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!suggestion_.Equals(other.suggestion_)) return false;
      if (Continuation != other.Continuation) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= suggestion_.GetHashCode();
      if (HasContinuation) hash ^= Continuation.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      suggestion_.WriteTo(output, _repeated_suggestion_codec);
      if (HasContinuation) {
        output.WriteRawTag(16);
        output.WriteUInt64(Continuation);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += suggestion_.CalculateSize(_repeated_suggestion_codec);
      if (HasContinuation) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Continuation);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetSuggestionsResponse other) {
      if (other == null) {
        return;
      }
      suggestion_.Add(other.suggestion_);
      if (other.HasContinuation) {
        Continuation = other.Continuation;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            suggestion_.AddEntriesFrom(input, _repeated_suggestion_codec);
            break;
          }
          case 16: {
            Continuation = input.ReadUInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class CreateTicketRequest : pb::IMessage<CreateTicketRequest> {
    private static readonly pb::MessageParser<CreateTicketRequest> _parser = new pb::MessageParser<CreateTicketRequest>(() => new CreateTicketRequest());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CreateTicketRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bgs.Protocol.Club.V1.Client.ClubRequestReflection.Descriptor.MessageTypes[38]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateTicketRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateTicketRequest(CreateTicketRequest other) : this() {
      _hasBits0 = other._hasBits0;
      agentId_ = other.HasAgentId ? other.agentId_.Clone() : null;
      clubId_ = other.clubId_;
      options_ = other.HasOptions ? other.options_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateTicketRequest Clone() {
      return new CreateTicketRequest(this);
    }

    /// <summary>Field number for the "agent_id" field.</summary>
    public const int AgentIdFieldNumber = 1;
    private global::Bgs.Protocol.Club.V1.MemberId agentId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bgs.Protocol.Club.V1.MemberId AgentId {
      get { return agentId_; }
      set {
        agentId_ = value;
      }
    }
    /// <summary>Gets whether the agent_id field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasAgentId {
      get { return agentId_ != null; }
    }
    /// <summary>Clears the value of the agent_id field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearAgentId() {
      agentId_ = null;
    }

    /// <summary>Field number for the "club_id" field.</summary>
    public const int ClubIdFieldNumber = 2;
    private readonly static ulong ClubIdDefaultValue = 0UL;

    private ulong clubId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong ClubId {
      get { if ((_hasBits0 & 1) != 0) { return clubId_; } else { return ClubIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        clubId_ = value;
      }
    }
    /// <summary>Gets whether the "club_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasClubId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "club_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearClubId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "options" field.</summary>
    public const int OptionsFieldNumber = 3;
    private global::Bgs.Protocol.Club.V1.Client.CreateTicketOptions options_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bgs.Protocol.Club.V1.Client.CreateTicketOptions Options {
      get { return options_; }
      set {
        options_ = value;
      }
    }
    /// <summary>Gets whether the options field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasOptions {
      get { return options_ != null; }
    }
    /// <summary>Clears the value of the options field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearOptions() {
      options_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CreateTicketRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CreateTicketRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(AgentId, other.AgentId)) return false;
      if (ClubId != other.ClubId) return false;
      if (!object.Equals(Options, other.Options)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasAgentId) hash ^= AgentId.GetHashCode();
      if (HasClubId) hash ^= ClubId.GetHashCode();
      if (HasOptions) hash ^= Options.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasAgentId) {
        output.WriteRawTag(10);
        output.WriteMessage(AgentId);
      }
      if (HasClubId) {
        output.WriteRawTag(16);
        output.WriteUInt64(ClubId);
      }
      if (HasOptions) {
        output.WriteRawTag(26);
        output.WriteMessage(Options);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasAgentId) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AgentId);
      }
      if (HasClubId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(ClubId);
      }
      if (HasOptions) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Options);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CreateTicketRequest other) {
      if (other == null) {
        return;
      }
      if (other.HasAgentId) {
        if (!HasAgentId) {
          AgentId = new global::Bgs.Protocol.Club.V1.MemberId();
        }
        AgentId.MergeFrom(other.AgentId);
      }
      if (other.HasClubId) {
        ClubId = other.ClubId;
      }
      if (other.HasOptions) {
        if (!HasOptions) {
          Options = new global::Bgs.Protocol.Club.V1.Client.CreateTicketOptions();
        }
        Options.MergeFrom(other.Options);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (!HasAgentId) {
              AgentId = new global::Bgs.Protocol.Club.V1.MemberId();
            }
            input.ReadMessage(AgentId);
            break;
          }
          case 16: {
            ClubId = input.ReadUInt64();
            break;
          }
          case 26: {
            if (!HasOptions) {
              Options = new global::Bgs.Protocol.Club.V1.Client.CreateTicketOptions();
            }
            input.ReadMessage(Options);
            break;
          }
        }
      }
    }

  }

  public sealed partial class CreateTicketResponse : pb::IMessage<CreateTicketResponse> {
    private static readonly pb::MessageParser<CreateTicketResponse> _parser = new pb::MessageParser<CreateTicketResponse>(() => new CreateTicketResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CreateTicketResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bgs.Protocol.Club.V1.Client.ClubRequestReflection.Descriptor.MessageTypes[39]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateTicketResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateTicketResponse(CreateTicketResponse other) : this() {
      ticket_ = other.HasTicket ? other.ticket_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateTicketResponse Clone() {
      return new CreateTicketResponse(this);
    }

    /// <summary>Field number for the "ticket" field.</summary>
    public const int TicketFieldNumber = 1;
    private global::Bgs.Protocol.Club.V1.Client.ClubTicket ticket_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bgs.Protocol.Club.V1.Client.ClubTicket Ticket {
      get { return ticket_; }
      set {
        ticket_ = value;
      }
    }
    /// <summary>Gets whether the ticket field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasTicket {
      get { return ticket_ != null; }
    }
    /// <summary>Clears the value of the ticket field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearTicket() {
      ticket_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CreateTicketResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CreateTicketResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Ticket, other.Ticket)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasTicket) hash ^= Ticket.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasTicket) {
        output.WriteRawTag(10);
        output.WriteMessage(Ticket);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasTicket) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Ticket);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CreateTicketResponse other) {
      if (other == null) {
        return;
      }
      if (other.HasTicket) {
        if (!HasTicket) {
          Ticket = new global::Bgs.Protocol.Club.V1.Client.ClubTicket();
        }
        Ticket.MergeFrom(other.Ticket);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (!HasTicket) {
              Ticket = new global::Bgs.Protocol.Club.V1.Client.ClubTicket();
            }
            input.ReadMessage(Ticket);
            break;
          }
        }
      }
    }

  }

  public sealed partial class DestroyTicketRequest : pb::IMessage<DestroyTicketRequest> {
    private static readonly pb::MessageParser<DestroyTicketRequest> _parser = new pb::MessageParser<DestroyTicketRequest>(() => new DestroyTicketRequest());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DestroyTicketRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bgs.Protocol.Club.V1.Client.ClubRequestReflection.Descriptor.MessageTypes[40]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DestroyTicketRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DestroyTicketRequest(DestroyTicketRequest other) : this() {
      _hasBits0 = other._hasBits0;
      agentId_ = other.HasAgentId ? other.agentId_.Clone() : null;
      clubId_ = other.clubId_;
      ticketId_ = other.ticketId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DestroyTicketRequest Clone() {
      return new DestroyTicketRequest(this);
    }

    /// <summary>Field number for the "agent_id" field.</summary>
    public const int AgentIdFieldNumber = 1;
    private global::Bgs.Protocol.Club.V1.MemberId agentId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bgs.Protocol.Club.V1.MemberId AgentId {
      get { return agentId_; }
      set {
        agentId_ = value;
      }
    }
    /// <summary>Gets whether the agent_id field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasAgentId {
      get { return agentId_ != null; }
    }
    /// <summary>Clears the value of the agent_id field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearAgentId() {
      agentId_ = null;
    }

    /// <summary>Field number for the "club_id" field.</summary>
    public const int ClubIdFieldNumber = 2;
    private readonly static ulong ClubIdDefaultValue = 0UL;

    private ulong clubId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong ClubId {
      get { if ((_hasBits0 & 1) != 0) { return clubId_; } else { return ClubIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        clubId_ = value;
      }
    }
    /// <summary>Gets whether the "club_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasClubId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "club_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearClubId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "ticket_id" field.</summary>
    public const int TicketIdFieldNumber = 3;
    private readonly static string TicketIdDefaultValue = "";

    private string ticketId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TicketId {
      get { return ticketId_ ?? TicketIdDefaultValue; }
      set {
        ticketId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "ticket_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasTicketId {
      get { return ticketId_ != null; }
    }
    /// <summary>Clears the value of the "ticket_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearTicketId() {
      ticketId_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DestroyTicketRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DestroyTicketRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(AgentId, other.AgentId)) return false;
      if (ClubId != other.ClubId) return false;
      if (TicketId != other.TicketId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasAgentId) hash ^= AgentId.GetHashCode();
      if (HasClubId) hash ^= ClubId.GetHashCode();
      if (HasTicketId) hash ^= TicketId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasAgentId) {
        output.WriteRawTag(10);
        output.WriteMessage(AgentId);
      }
      if (HasClubId) {
        output.WriteRawTag(16);
        output.WriteUInt64(ClubId);
      }
      if (HasTicketId) {
        output.WriteRawTag(26);
        output.WriteString(TicketId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasAgentId) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AgentId);
      }
      if (HasClubId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(ClubId);
      }
      if (HasTicketId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TicketId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DestroyTicketRequest other) {
      if (other == null) {
        return;
      }
      if (other.HasAgentId) {
        if (!HasAgentId) {
          AgentId = new global::Bgs.Protocol.Club.V1.MemberId();
        }
        AgentId.MergeFrom(other.AgentId);
      }
      if (other.HasClubId) {
        ClubId = other.ClubId;
      }
      if (other.HasTicketId) {
        TicketId = other.TicketId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (!HasAgentId) {
              AgentId = new global::Bgs.Protocol.Club.V1.MemberId();
            }
            input.ReadMessage(AgentId);
            break;
          }
          case 16: {
            ClubId = input.ReadUInt64();
            break;
          }
          case 26: {
            TicketId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class RedeemTicketRequest : pb::IMessage<RedeemTicketRequest> {
    private static readonly pb::MessageParser<RedeemTicketRequest> _parser = new pb::MessageParser<RedeemTicketRequest>(() => new RedeemTicketRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RedeemTicketRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bgs.Protocol.Club.V1.Client.ClubRequestReflection.Descriptor.MessageTypes[41]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RedeemTicketRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RedeemTicketRequest(RedeemTicketRequest other) : this() {
      agentId_ = other.HasAgentId ? other.agentId_.Clone() : null;
      ticketId_ = other.ticketId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RedeemTicketRequest Clone() {
      return new RedeemTicketRequest(this);
    }

    /// <summary>Field number for the "agent_id" field.</summary>
    public const int AgentIdFieldNumber = 1;
    private global::Bgs.Protocol.Club.V1.MemberId agentId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bgs.Protocol.Club.V1.MemberId AgentId {
      get { return agentId_; }
      set {
        agentId_ = value;
      }
    }
    /// <summary>Gets whether the agent_id field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasAgentId {
      get { return agentId_ != null; }
    }
    /// <summary>Clears the value of the agent_id field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearAgentId() {
      agentId_ = null;
    }

    /// <summary>Field number for the "ticket_id" field.</summary>
    public const int TicketIdFieldNumber = 3;
    private readonly static string TicketIdDefaultValue = "";

    private string ticketId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TicketId {
      get { return ticketId_ ?? TicketIdDefaultValue; }
      set {
        ticketId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "ticket_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasTicketId {
      get { return ticketId_ != null; }
    }
    /// <summary>Clears the value of the "ticket_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearTicketId() {
      ticketId_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RedeemTicketRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RedeemTicketRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(AgentId, other.AgentId)) return false;
      if (TicketId != other.TicketId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasAgentId) hash ^= AgentId.GetHashCode();
      if (HasTicketId) hash ^= TicketId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasAgentId) {
        output.WriteRawTag(10);
        output.WriteMessage(AgentId);
      }
      if (HasTicketId) {
        output.WriteRawTag(26);
        output.WriteString(TicketId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasAgentId) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AgentId);
      }
      if (HasTicketId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TicketId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RedeemTicketRequest other) {
      if (other == null) {
        return;
      }
      if (other.HasAgentId) {
        if (!HasAgentId) {
          AgentId = new global::Bgs.Protocol.Club.V1.MemberId();
        }
        AgentId.MergeFrom(other.AgentId);
      }
      if (other.HasTicketId) {
        TicketId = other.TicketId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (!HasAgentId) {
              AgentId = new global::Bgs.Protocol.Club.V1.MemberId();
            }
            input.ReadMessage(AgentId);
            break;
          }
          case 26: {
            TicketId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetTicketRequest : pb::IMessage<GetTicketRequest> {
    private static readonly pb::MessageParser<GetTicketRequest> _parser = new pb::MessageParser<GetTicketRequest>(() => new GetTicketRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetTicketRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bgs.Protocol.Club.V1.Client.ClubRequestReflection.Descriptor.MessageTypes[42]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetTicketRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetTicketRequest(GetTicketRequest other) : this() {
      agentId_ = other.HasAgentId ? other.agentId_.Clone() : null;
      ticketId_ = other.ticketId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetTicketRequest Clone() {
      return new GetTicketRequest(this);
    }

    /// <summary>Field number for the "agent_id" field.</summary>
    public const int AgentIdFieldNumber = 1;
    private global::Bgs.Protocol.Club.V1.MemberId agentId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bgs.Protocol.Club.V1.MemberId AgentId {
      get { return agentId_; }
      set {
        agentId_ = value;
      }
    }
    /// <summary>Gets whether the agent_id field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasAgentId {
      get { return agentId_ != null; }
    }
    /// <summary>Clears the value of the agent_id field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearAgentId() {
      agentId_ = null;
    }

    /// <summary>Field number for the "ticket_id" field.</summary>
    public const int TicketIdFieldNumber = 3;
    private readonly static string TicketIdDefaultValue = "";

    private string ticketId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TicketId {
      get { return ticketId_ ?? TicketIdDefaultValue; }
      set {
        ticketId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "ticket_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasTicketId {
      get { return ticketId_ != null; }
    }
    /// <summary>Clears the value of the "ticket_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearTicketId() {
      ticketId_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetTicketRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetTicketRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(AgentId, other.AgentId)) return false;
      if (TicketId != other.TicketId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasAgentId) hash ^= AgentId.GetHashCode();
      if (HasTicketId) hash ^= TicketId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasAgentId) {
        output.WriteRawTag(10);
        output.WriteMessage(AgentId);
      }
      if (HasTicketId) {
        output.WriteRawTag(26);
        output.WriteString(TicketId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasAgentId) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AgentId);
      }
      if (HasTicketId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TicketId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetTicketRequest other) {
      if (other == null) {
        return;
      }
      if (other.HasAgentId) {
        if (!HasAgentId) {
          AgentId = new global::Bgs.Protocol.Club.V1.MemberId();
        }
        AgentId.MergeFrom(other.AgentId);
      }
      if (other.HasTicketId) {
        TicketId = other.TicketId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (!HasAgentId) {
              AgentId = new global::Bgs.Protocol.Club.V1.MemberId();
            }
            input.ReadMessage(AgentId);
            break;
          }
          case 26: {
            TicketId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetTicketResponse : pb::IMessage<GetTicketResponse> {
    private static readonly pb::MessageParser<GetTicketResponse> _parser = new pb::MessageParser<GetTicketResponse>(() => new GetTicketResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetTicketResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bgs.Protocol.Club.V1.Client.ClubRequestReflection.Descriptor.MessageTypes[43]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetTicketResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetTicketResponse(GetTicketResponse other) : this() {
      ticket_ = other.HasTicket ? other.ticket_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetTicketResponse Clone() {
      return new GetTicketResponse(this);
    }

    /// <summary>Field number for the "ticket" field.</summary>
    public const int TicketFieldNumber = 1;
    private global::Bgs.Protocol.Club.V1.Client.ClubTicket ticket_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bgs.Protocol.Club.V1.Client.ClubTicket Ticket {
      get { return ticket_; }
      set {
        ticket_ = value;
      }
    }
    /// <summary>Gets whether the ticket field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasTicket {
      get { return ticket_ != null; }
    }
    /// <summary>Clears the value of the ticket field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearTicket() {
      ticket_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetTicketResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetTicketResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Ticket, other.Ticket)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasTicket) hash ^= Ticket.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasTicket) {
        output.WriteRawTag(10);
        output.WriteMessage(Ticket);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasTicket) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Ticket);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetTicketResponse other) {
      if (other == null) {
        return;
      }
      if (other.HasTicket) {
        if (!HasTicket) {
          Ticket = new global::Bgs.Protocol.Club.V1.Client.ClubTicket();
        }
        Ticket.MergeFrom(other.Ticket);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (!HasTicket) {
              Ticket = new global::Bgs.Protocol.Club.V1.Client.ClubTicket();
            }
            input.ReadMessage(Ticket);
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetTicketsRequest : pb::IMessage<GetTicketsRequest> {
    private static readonly pb::MessageParser<GetTicketsRequest> _parser = new pb::MessageParser<GetTicketsRequest>(() => new GetTicketsRequest());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetTicketsRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bgs.Protocol.Club.V1.Client.ClubRequestReflection.Descriptor.MessageTypes[44]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetTicketsRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetTicketsRequest(GetTicketsRequest other) : this() {
      _hasBits0 = other._hasBits0;
      agentId_ = other.HasAgentId ? other.agentId_.Clone() : null;
      clubId_ = other.clubId_;
      continuation_ = other.continuation_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetTicketsRequest Clone() {
      return new GetTicketsRequest(this);
    }

    /// <summary>Field number for the "agent_id" field.</summary>
    public const int AgentIdFieldNumber = 1;
    private global::Bgs.Protocol.Club.V1.MemberId agentId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bgs.Protocol.Club.V1.MemberId AgentId {
      get { return agentId_; }
      set {
        agentId_ = value;
      }
    }
    /// <summary>Gets whether the agent_id field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasAgentId {
      get { return agentId_ != null; }
    }
    /// <summary>Clears the value of the agent_id field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearAgentId() {
      agentId_ = null;
    }

    /// <summary>Field number for the "club_id" field.</summary>
    public const int ClubIdFieldNumber = 2;
    private readonly static ulong ClubIdDefaultValue = 0UL;

    private ulong clubId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong ClubId {
      get { if ((_hasBits0 & 1) != 0) { return clubId_; } else { return ClubIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        clubId_ = value;
      }
    }
    /// <summary>Gets whether the "club_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasClubId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "club_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearClubId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "continuation" field.</summary>
    public const int ContinuationFieldNumber = 3;
    private readonly static ulong ContinuationDefaultValue = 0UL;

    private ulong continuation_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong Continuation {
      get { if ((_hasBits0 & 2) != 0) { return continuation_; } else { return ContinuationDefaultValue; } }
      set {
        _hasBits0 |= 2;
        continuation_ = value;
      }
    }
    /// <summary>Gets whether the "continuation" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasContinuation {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "continuation" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearContinuation() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetTicketsRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetTicketsRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(AgentId, other.AgentId)) return false;
      if (ClubId != other.ClubId) return false;
      if (Continuation != other.Continuation) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasAgentId) hash ^= AgentId.GetHashCode();
      if (HasClubId) hash ^= ClubId.GetHashCode();
      if (HasContinuation) hash ^= Continuation.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasAgentId) {
        output.WriteRawTag(10);
        output.WriteMessage(AgentId);
      }
      if (HasClubId) {
        output.WriteRawTag(16);
        output.WriteUInt64(ClubId);
      }
      if (HasContinuation) {
        output.WriteRawTag(24);
        output.WriteUInt64(Continuation);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasAgentId) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AgentId);
      }
      if (HasClubId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(ClubId);
      }
      if (HasContinuation) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Continuation);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetTicketsRequest other) {
      if (other == null) {
        return;
      }
      if (other.HasAgentId) {
        if (!HasAgentId) {
          AgentId = new global::Bgs.Protocol.Club.V1.MemberId();
        }
        AgentId.MergeFrom(other.AgentId);
      }
      if (other.HasClubId) {
        ClubId = other.ClubId;
      }
      if (other.HasContinuation) {
        Continuation = other.Continuation;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (!HasAgentId) {
              AgentId = new global::Bgs.Protocol.Club.V1.MemberId();
            }
            input.ReadMessage(AgentId);
            break;
          }
          case 16: {
            ClubId = input.ReadUInt64();
            break;
          }
          case 24: {
            Continuation = input.ReadUInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetTicketsResponse : pb::IMessage<GetTicketsResponse> {
    private static readonly pb::MessageParser<GetTicketsResponse> _parser = new pb::MessageParser<GetTicketsResponse>(() => new GetTicketsResponse());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetTicketsResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bgs.Protocol.Club.V1.Client.ClubRequestReflection.Descriptor.MessageTypes[45]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetTicketsResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetTicketsResponse(GetTicketsResponse other) : this() {
      _hasBits0 = other._hasBits0;
      ticket_ = other.ticket_.Clone();
      continuation_ = other.continuation_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetTicketsResponse Clone() {
      return new GetTicketsResponse(this);
    }

    /// <summary>Field number for the "ticket" field.</summary>
    public const int TicketFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Bgs.Protocol.Club.V1.Client.ClubTicket> _repeated_ticket_codec
        = pb::FieldCodec.ForMessage(10, global::Bgs.Protocol.Club.V1.Client.ClubTicket.Parser);
    private readonly pbc::RepeatedField<global::Bgs.Protocol.Club.V1.Client.ClubTicket> ticket_ = new pbc::RepeatedField<global::Bgs.Protocol.Club.V1.Client.ClubTicket>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Bgs.Protocol.Club.V1.Client.ClubTicket> Ticket {
      get { return ticket_; }
    }

    /// <summary>Field number for the "continuation" field.</summary>
    public const int ContinuationFieldNumber = 2;
    private readonly static ulong ContinuationDefaultValue = 0UL;

    private ulong continuation_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong Continuation {
      get { if ((_hasBits0 & 1) != 0) { return continuation_; } else { return ContinuationDefaultValue; } }
      set {
        _hasBits0 |= 1;
        continuation_ = value;
      }
    }
    /// <summary>Gets whether the "continuation" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasContinuation {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "continuation" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearContinuation() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetTicketsResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetTicketsResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!ticket_.Equals(other.ticket_)) return false;
      if (Continuation != other.Continuation) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= ticket_.GetHashCode();
      if (HasContinuation) hash ^= Continuation.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      ticket_.WriteTo(output, _repeated_ticket_codec);
      if (HasContinuation) {
        output.WriteRawTag(16);
        output.WriteUInt64(Continuation);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += ticket_.CalculateSize(_repeated_ticket_codec);
      if (HasContinuation) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Continuation);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetTicketsResponse other) {
      if (other == null) {
        return;
      }
      ticket_.Add(other.ticket_);
      if (other.HasContinuation) {
        Continuation = other.Continuation;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ticket_.AddEntriesFrom(input, _repeated_ticket_codec);
            break;
          }
          case 16: {
            Continuation = input.ReadUInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class AddBanRequest : pb::IMessage<AddBanRequest> {
    private static readonly pb::MessageParser<AddBanRequest> _parser = new pb::MessageParser<AddBanRequest>(() => new AddBanRequest());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AddBanRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bgs.Protocol.Club.V1.Client.ClubRequestReflection.Descriptor.MessageTypes[46]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddBanRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddBanRequest(AddBanRequest other) : this() {
      _hasBits0 = other._hasBits0;
      agentId_ = other.HasAgentId ? other.agentId_.Clone() : null;
      clubId_ = other.clubId_;
      options_ = other.HasOptions ? other.options_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddBanRequest Clone() {
      return new AddBanRequest(this);
    }

    /// <summary>Field number for the "agent_id" field.</summary>
    public const int AgentIdFieldNumber = 1;
    private global::Bgs.Protocol.Club.V1.MemberId agentId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bgs.Protocol.Club.V1.MemberId AgentId {
      get { return agentId_; }
      set {
        agentId_ = value;
      }
    }
    /// <summary>Gets whether the agent_id field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasAgentId {
      get { return agentId_ != null; }
    }
    /// <summary>Clears the value of the agent_id field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearAgentId() {
      agentId_ = null;
    }

    /// <summary>Field number for the "club_id" field.</summary>
    public const int ClubIdFieldNumber = 2;
    private readonly static ulong ClubIdDefaultValue = 0UL;

    private ulong clubId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong ClubId {
      get { if ((_hasBits0 & 1) != 0) { return clubId_; } else { return ClubIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        clubId_ = value;
      }
    }
    /// <summary>Gets whether the "club_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasClubId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "club_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearClubId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "options" field.</summary>
    public const int OptionsFieldNumber = 3;
    private global::Bgs.Protocol.Club.V1.Client.AddBanOptions options_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bgs.Protocol.Club.V1.Client.AddBanOptions Options {
      get { return options_; }
      set {
        options_ = value;
      }
    }
    /// <summary>Gets whether the options field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasOptions {
      get { return options_ != null; }
    }
    /// <summary>Clears the value of the options field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearOptions() {
      options_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AddBanRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AddBanRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(AgentId, other.AgentId)) return false;
      if (ClubId != other.ClubId) return false;
      if (!object.Equals(Options, other.Options)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasAgentId) hash ^= AgentId.GetHashCode();
      if (HasClubId) hash ^= ClubId.GetHashCode();
      if (HasOptions) hash ^= Options.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasAgentId) {
        output.WriteRawTag(10);
        output.WriteMessage(AgentId);
      }
      if (HasClubId) {
        output.WriteRawTag(16);
        output.WriteUInt64(ClubId);
      }
      if (HasOptions) {
        output.WriteRawTag(26);
        output.WriteMessage(Options);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasAgentId) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AgentId);
      }
      if (HasClubId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(ClubId);
      }
      if (HasOptions) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Options);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AddBanRequest other) {
      if (other == null) {
        return;
      }
      if (other.HasAgentId) {
        if (!HasAgentId) {
          AgentId = new global::Bgs.Protocol.Club.V1.MemberId();
        }
        AgentId.MergeFrom(other.AgentId);
      }
      if (other.HasClubId) {
        ClubId = other.ClubId;
      }
      if (other.HasOptions) {
        if (!HasOptions) {
          Options = new global::Bgs.Protocol.Club.V1.Client.AddBanOptions();
        }
        Options.MergeFrom(other.Options);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (!HasAgentId) {
              AgentId = new global::Bgs.Protocol.Club.V1.MemberId();
            }
            input.ReadMessage(AgentId);
            break;
          }
          case 16: {
            ClubId = input.ReadUInt64();
            break;
          }
          case 26: {
            if (!HasOptions) {
              Options = new global::Bgs.Protocol.Club.V1.Client.AddBanOptions();
            }
            input.ReadMessage(Options);
            break;
          }
        }
      }
    }

  }

  public sealed partial class RemoveBanRequest : pb::IMessage<RemoveBanRequest> {
    private static readonly pb::MessageParser<RemoveBanRequest> _parser = new pb::MessageParser<RemoveBanRequest>(() => new RemoveBanRequest());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RemoveBanRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bgs.Protocol.Club.V1.Client.ClubRequestReflection.Descriptor.MessageTypes[47]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RemoveBanRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RemoveBanRequest(RemoveBanRequest other) : this() {
      _hasBits0 = other._hasBits0;
      agentId_ = other.HasAgentId ? other.agentId_.Clone() : null;
      clubId_ = other.clubId_;
      targetId_ = other.HasTargetId ? other.targetId_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RemoveBanRequest Clone() {
      return new RemoveBanRequest(this);
    }

    /// <summary>Field number for the "agent_id" field.</summary>
    public const int AgentIdFieldNumber = 1;
    private global::Bgs.Protocol.Club.V1.MemberId agentId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bgs.Protocol.Club.V1.MemberId AgentId {
      get { return agentId_; }
      set {
        agentId_ = value;
      }
    }
    /// <summary>Gets whether the agent_id field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasAgentId {
      get { return agentId_ != null; }
    }
    /// <summary>Clears the value of the agent_id field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearAgentId() {
      agentId_ = null;
    }

    /// <summary>Field number for the "club_id" field.</summary>
    public const int ClubIdFieldNumber = 2;
    private readonly static ulong ClubIdDefaultValue = 0UL;

    private ulong clubId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong ClubId {
      get { if ((_hasBits0 & 1) != 0) { return clubId_; } else { return ClubIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        clubId_ = value;
      }
    }
    /// <summary>Gets whether the "club_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasClubId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "club_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearClubId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "target_id" field.</summary>
    public const int TargetIdFieldNumber = 3;
    private global::Bgs.Protocol.Club.V1.MemberId targetId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bgs.Protocol.Club.V1.MemberId TargetId {
      get { return targetId_; }
      set {
        targetId_ = value;
      }
    }
    /// <summary>Gets whether the target_id field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasTargetId {
      get { return targetId_ != null; }
    }
    /// <summary>Clears the value of the target_id field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearTargetId() {
      targetId_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RemoveBanRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RemoveBanRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(AgentId, other.AgentId)) return false;
      if (ClubId != other.ClubId) return false;
      if (!object.Equals(TargetId, other.TargetId)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasAgentId) hash ^= AgentId.GetHashCode();
      if (HasClubId) hash ^= ClubId.GetHashCode();
      if (HasTargetId) hash ^= TargetId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasAgentId) {
        output.WriteRawTag(10);
        output.WriteMessage(AgentId);
      }
      if (HasClubId) {
        output.WriteRawTag(16);
        output.WriteUInt64(ClubId);
      }
      if (HasTargetId) {
        output.WriteRawTag(26);
        output.WriteMessage(TargetId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasAgentId) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AgentId);
      }
      if (HasClubId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(ClubId);
      }
      if (HasTargetId) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TargetId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RemoveBanRequest other) {
      if (other == null) {
        return;
      }
      if (other.HasAgentId) {
        if (!HasAgentId) {
          AgentId = new global::Bgs.Protocol.Club.V1.MemberId();
        }
        AgentId.MergeFrom(other.AgentId);
      }
      if (other.HasClubId) {
        ClubId = other.ClubId;
      }
      if (other.HasTargetId) {
        if (!HasTargetId) {
          TargetId = new global::Bgs.Protocol.Club.V1.MemberId();
        }
        TargetId.MergeFrom(other.TargetId);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (!HasAgentId) {
              AgentId = new global::Bgs.Protocol.Club.V1.MemberId();
            }
            input.ReadMessage(AgentId);
            break;
          }
          case 16: {
            ClubId = input.ReadUInt64();
            break;
          }
          case 26: {
            if (!HasTargetId) {
              TargetId = new global::Bgs.Protocol.Club.V1.MemberId();
            }
            input.ReadMessage(TargetId);
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetBanRequest : pb::IMessage<GetBanRequest> {
    private static readonly pb::MessageParser<GetBanRequest> _parser = new pb::MessageParser<GetBanRequest>(() => new GetBanRequest());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetBanRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bgs.Protocol.Club.V1.Client.ClubRequestReflection.Descriptor.MessageTypes[48]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetBanRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetBanRequest(GetBanRequest other) : this() {
      _hasBits0 = other._hasBits0;
      agentId_ = other.HasAgentId ? other.agentId_.Clone() : null;
      clubId_ = other.clubId_;
      targetId_ = other.HasTargetId ? other.targetId_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetBanRequest Clone() {
      return new GetBanRequest(this);
    }

    /// <summary>Field number for the "agent_id" field.</summary>
    public const int AgentIdFieldNumber = 1;
    private global::Bgs.Protocol.Club.V1.MemberId agentId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bgs.Protocol.Club.V1.MemberId AgentId {
      get { return agentId_; }
      set {
        agentId_ = value;
      }
    }
    /// <summary>Gets whether the agent_id field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasAgentId {
      get { return agentId_ != null; }
    }
    /// <summary>Clears the value of the agent_id field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearAgentId() {
      agentId_ = null;
    }

    /// <summary>Field number for the "club_id" field.</summary>
    public const int ClubIdFieldNumber = 2;
    private readonly static ulong ClubIdDefaultValue = 0UL;

    private ulong clubId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong ClubId {
      get { if ((_hasBits0 & 1) != 0) { return clubId_; } else { return ClubIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        clubId_ = value;
      }
    }
    /// <summary>Gets whether the "club_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasClubId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "club_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearClubId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "target_id" field.</summary>
    public const int TargetIdFieldNumber = 3;
    private global::Bgs.Protocol.Club.V1.MemberId targetId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bgs.Protocol.Club.V1.MemberId TargetId {
      get { return targetId_; }
      set {
        targetId_ = value;
      }
    }
    /// <summary>Gets whether the target_id field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasTargetId {
      get { return targetId_ != null; }
    }
    /// <summary>Clears the value of the target_id field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearTargetId() {
      targetId_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetBanRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetBanRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(AgentId, other.AgentId)) return false;
      if (ClubId != other.ClubId) return false;
      if (!object.Equals(TargetId, other.TargetId)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasAgentId) hash ^= AgentId.GetHashCode();
      if (HasClubId) hash ^= ClubId.GetHashCode();
      if (HasTargetId) hash ^= TargetId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasAgentId) {
        output.WriteRawTag(10);
        output.WriteMessage(AgentId);
      }
      if (HasClubId) {
        output.WriteRawTag(16);
        output.WriteUInt64(ClubId);
      }
      if (HasTargetId) {
        output.WriteRawTag(26);
        output.WriteMessage(TargetId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasAgentId) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AgentId);
      }
      if (HasClubId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(ClubId);
      }
      if (HasTargetId) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TargetId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetBanRequest other) {
      if (other == null) {
        return;
      }
      if (other.HasAgentId) {
        if (!HasAgentId) {
          AgentId = new global::Bgs.Protocol.Club.V1.MemberId();
        }
        AgentId.MergeFrom(other.AgentId);
      }
      if (other.HasClubId) {
        ClubId = other.ClubId;
      }
      if (other.HasTargetId) {
        if (!HasTargetId) {
          TargetId = new global::Bgs.Protocol.Club.V1.MemberId();
        }
        TargetId.MergeFrom(other.TargetId);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (!HasAgentId) {
              AgentId = new global::Bgs.Protocol.Club.V1.MemberId();
            }
            input.ReadMessage(AgentId);
            break;
          }
          case 16: {
            ClubId = input.ReadUInt64();
            break;
          }
          case 26: {
            if (!HasTargetId) {
              TargetId = new global::Bgs.Protocol.Club.V1.MemberId();
            }
            input.ReadMessage(TargetId);
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetBanResponse : pb::IMessage<GetBanResponse> {
    private static readonly pb::MessageParser<GetBanResponse> _parser = new pb::MessageParser<GetBanResponse>(() => new GetBanResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetBanResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bgs.Protocol.Club.V1.Client.ClubRequestReflection.Descriptor.MessageTypes[49]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetBanResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetBanResponse(GetBanResponse other) : this() {
      ban_ = other.HasBan ? other.ban_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetBanResponse Clone() {
      return new GetBanResponse(this);
    }

    /// <summary>Field number for the "ban" field.</summary>
    public const int BanFieldNumber = 1;
    private global::Bgs.Protocol.Club.V1.Client.ClubBan ban_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bgs.Protocol.Club.V1.Client.ClubBan Ban {
      get { return ban_; }
      set {
        ban_ = value;
      }
    }
    /// <summary>Gets whether the ban field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasBan {
      get { return ban_ != null; }
    }
    /// <summary>Clears the value of the ban field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearBan() {
      ban_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetBanResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetBanResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Ban, other.Ban)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasBan) hash ^= Ban.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasBan) {
        output.WriteRawTag(10);
        output.WriteMessage(Ban);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasBan) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Ban);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetBanResponse other) {
      if (other == null) {
        return;
      }
      if (other.HasBan) {
        if (!HasBan) {
          Ban = new global::Bgs.Protocol.Club.V1.Client.ClubBan();
        }
        Ban.MergeFrom(other.Ban);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (!HasBan) {
              Ban = new global::Bgs.Protocol.Club.V1.Client.ClubBan();
            }
            input.ReadMessage(Ban);
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetBansRequest : pb::IMessage<GetBansRequest> {
    private static readonly pb::MessageParser<GetBansRequest> _parser = new pb::MessageParser<GetBansRequest>(() => new GetBansRequest());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetBansRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bgs.Protocol.Club.V1.Client.ClubRequestReflection.Descriptor.MessageTypes[50]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetBansRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetBansRequest(GetBansRequest other) : this() {
      _hasBits0 = other._hasBits0;
      agentId_ = other.HasAgentId ? other.agentId_.Clone() : null;
      clubId_ = other.clubId_;
      continuation_ = other.continuation_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetBansRequest Clone() {
      return new GetBansRequest(this);
    }

    /// <summary>Field number for the "agent_id" field.</summary>
    public const int AgentIdFieldNumber = 1;
    private global::Bgs.Protocol.Club.V1.MemberId agentId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bgs.Protocol.Club.V1.MemberId AgentId {
      get { return agentId_; }
      set {
        agentId_ = value;
      }
    }
    /// <summary>Gets whether the agent_id field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasAgentId {
      get { return agentId_ != null; }
    }
    /// <summary>Clears the value of the agent_id field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearAgentId() {
      agentId_ = null;
    }

    /// <summary>Field number for the "club_id" field.</summary>
    public const int ClubIdFieldNumber = 2;
    private readonly static ulong ClubIdDefaultValue = 0UL;

    private ulong clubId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong ClubId {
      get { if ((_hasBits0 & 1) != 0) { return clubId_; } else { return ClubIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        clubId_ = value;
      }
    }
    /// <summary>Gets whether the "club_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasClubId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "club_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearClubId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "continuation" field.</summary>
    public const int ContinuationFieldNumber = 3;
    private readonly static ulong ContinuationDefaultValue = 0UL;

    private ulong continuation_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong Continuation {
      get { if ((_hasBits0 & 2) != 0) { return continuation_; } else { return ContinuationDefaultValue; } }
      set {
        _hasBits0 |= 2;
        continuation_ = value;
      }
    }
    /// <summary>Gets whether the "continuation" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasContinuation {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "continuation" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearContinuation() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetBansRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetBansRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(AgentId, other.AgentId)) return false;
      if (ClubId != other.ClubId) return false;
      if (Continuation != other.Continuation) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasAgentId) hash ^= AgentId.GetHashCode();
      if (HasClubId) hash ^= ClubId.GetHashCode();
      if (HasContinuation) hash ^= Continuation.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasAgentId) {
        output.WriteRawTag(10);
        output.WriteMessage(AgentId);
      }
      if (HasClubId) {
        output.WriteRawTag(16);
        output.WriteUInt64(ClubId);
      }
      if (HasContinuation) {
        output.WriteRawTag(24);
        output.WriteUInt64(Continuation);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasAgentId) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AgentId);
      }
      if (HasClubId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(ClubId);
      }
      if (HasContinuation) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Continuation);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetBansRequest other) {
      if (other == null) {
        return;
      }
      if (other.HasAgentId) {
        if (!HasAgentId) {
          AgentId = new global::Bgs.Protocol.Club.V1.MemberId();
        }
        AgentId.MergeFrom(other.AgentId);
      }
      if (other.HasClubId) {
        ClubId = other.ClubId;
      }
      if (other.HasContinuation) {
        Continuation = other.Continuation;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (!HasAgentId) {
              AgentId = new global::Bgs.Protocol.Club.V1.MemberId();
            }
            input.ReadMessage(AgentId);
            break;
          }
          case 16: {
            ClubId = input.ReadUInt64();
            break;
          }
          case 24: {
            Continuation = input.ReadUInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetBansResponse : pb::IMessage<GetBansResponse> {
    private static readonly pb::MessageParser<GetBansResponse> _parser = new pb::MessageParser<GetBansResponse>(() => new GetBansResponse());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetBansResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bgs.Protocol.Club.V1.Client.ClubRequestReflection.Descriptor.MessageTypes[51]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetBansResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetBansResponse(GetBansResponse other) : this() {
      _hasBits0 = other._hasBits0;
      ban_ = other.ban_.Clone();
      continuation_ = other.continuation_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetBansResponse Clone() {
      return new GetBansResponse(this);
    }

    /// <summary>Field number for the "ban" field.</summary>
    public const int BanFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Bgs.Protocol.Club.V1.Client.ClubBan> _repeated_ban_codec
        = pb::FieldCodec.ForMessage(10, global::Bgs.Protocol.Club.V1.Client.ClubBan.Parser);
    private readonly pbc::RepeatedField<global::Bgs.Protocol.Club.V1.Client.ClubBan> ban_ = new pbc::RepeatedField<global::Bgs.Protocol.Club.V1.Client.ClubBan>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Bgs.Protocol.Club.V1.Client.ClubBan> Ban {
      get { return ban_; }
    }

    /// <summary>Field number for the "continuation" field.</summary>
    public const int ContinuationFieldNumber = 2;
    private readonly static ulong ContinuationDefaultValue = 0UL;

    private ulong continuation_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong Continuation {
      get { if ((_hasBits0 & 1) != 0) { return continuation_; } else { return ContinuationDefaultValue; } }
      set {
        _hasBits0 |= 1;
        continuation_ = value;
      }
    }
    /// <summary>Gets whether the "continuation" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasContinuation {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "continuation" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearContinuation() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetBansResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetBansResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!ban_.Equals(other.ban_)) return false;
      if (Continuation != other.Continuation) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= ban_.GetHashCode();
      if (HasContinuation) hash ^= Continuation.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      ban_.WriteTo(output, _repeated_ban_codec);
      if (HasContinuation) {
        output.WriteRawTag(16);
        output.WriteUInt64(Continuation);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += ban_.CalculateSize(_repeated_ban_codec);
      if (HasContinuation) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Continuation);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetBansResponse other) {
      if (other == null) {
        return;
      }
      ban_.Add(other.ban_);
      if (other.HasContinuation) {
        Continuation = other.Continuation;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ban_.AddEntriesFrom(input, _repeated_ban_codec);
            break;
          }
          case 16: {
            Continuation = input.ReadUInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class SubscribeStreamRequest : pb::IMessage<SubscribeStreamRequest> {
    private static readonly pb::MessageParser<SubscribeStreamRequest> _parser = new pb::MessageParser<SubscribeStreamRequest>(() => new SubscribeStreamRequest());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SubscribeStreamRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bgs.Protocol.Club.V1.Client.ClubRequestReflection.Descriptor.MessageTypes[52]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SubscribeStreamRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SubscribeStreamRequest(SubscribeStreamRequest other) : this() {
      _hasBits0 = other._hasBits0;
      agentId_ = other.HasAgentId ? other.agentId_.Clone() : null;
      clubId_ = other.clubId_;
      streamId_ = other.streamId_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SubscribeStreamRequest Clone() {
      return new SubscribeStreamRequest(this);
    }

    /// <summary>Field number for the "agent_id" field.</summary>
    public const int AgentIdFieldNumber = 1;
    private global::Bgs.Protocol.Club.V1.MemberId agentId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bgs.Protocol.Club.V1.MemberId AgentId {
      get { return agentId_; }
      set {
        agentId_ = value;
      }
    }
    /// <summary>Gets whether the agent_id field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasAgentId {
      get { return agentId_ != null; }
    }
    /// <summary>Clears the value of the agent_id field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearAgentId() {
      agentId_ = null;
    }

    /// <summary>Field number for the "club_id" field.</summary>
    public const int ClubIdFieldNumber = 2;
    private readonly static ulong ClubIdDefaultValue = 0UL;

    private ulong clubId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong ClubId {
      get { if ((_hasBits0 & 1) != 0) { return clubId_; } else { return ClubIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        clubId_ = value;
      }
    }
    /// <summary>Gets whether the "club_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasClubId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "club_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearClubId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "stream_id" field.</summary>
    public const int StreamIdFieldNumber = 3;
    private static readonly pb::FieldCodec<ulong> _repeated_streamId_codec
        = pb::FieldCodec.ForUInt64(24);
    private readonly pbc::RepeatedField<ulong> streamId_ = new pbc::RepeatedField<ulong>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<ulong> StreamId {
      get { return streamId_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SubscribeStreamRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SubscribeStreamRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(AgentId, other.AgentId)) return false;
      if (ClubId != other.ClubId) return false;
      if(!streamId_.Equals(other.streamId_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasAgentId) hash ^= AgentId.GetHashCode();
      if (HasClubId) hash ^= ClubId.GetHashCode();
      hash ^= streamId_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasAgentId) {
        output.WriteRawTag(10);
        output.WriteMessage(AgentId);
      }
      if (HasClubId) {
        output.WriteRawTag(16);
        output.WriteUInt64(ClubId);
      }
      streamId_.WriteTo(output, _repeated_streamId_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasAgentId) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AgentId);
      }
      if (HasClubId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(ClubId);
      }
      size += streamId_.CalculateSize(_repeated_streamId_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SubscribeStreamRequest other) {
      if (other == null) {
        return;
      }
      if (other.HasAgentId) {
        if (!HasAgentId) {
          AgentId = new global::Bgs.Protocol.Club.V1.MemberId();
        }
        AgentId.MergeFrom(other.AgentId);
      }
      if (other.HasClubId) {
        ClubId = other.ClubId;
      }
      streamId_.Add(other.streamId_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (!HasAgentId) {
              AgentId = new global::Bgs.Protocol.Club.V1.MemberId();
            }
            input.ReadMessage(AgentId);
            break;
          }
          case 16: {
            ClubId = input.ReadUInt64();
            break;
          }
          case 26:
          case 24: {
            streamId_.AddEntriesFrom(input, _repeated_streamId_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class UnsubscribeStreamRequest : pb::IMessage<UnsubscribeStreamRequest> {
    private static readonly pb::MessageParser<UnsubscribeStreamRequest> _parser = new pb::MessageParser<UnsubscribeStreamRequest>(() => new UnsubscribeStreamRequest());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UnsubscribeStreamRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bgs.Protocol.Club.V1.Client.ClubRequestReflection.Descriptor.MessageTypes[53]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UnsubscribeStreamRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UnsubscribeStreamRequest(UnsubscribeStreamRequest other) : this() {
      _hasBits0 = other._hasBits0;
      agentId_ = other.HasAgentId ? other.agentId_.Clone() : null;
      clubId_ = other.clubId_;
      streamId_ = other.streamId_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UnsubscribeStreamRequest Clone() {
      return new UnsubscribeStreamRequest(this);
    }

    /// <summary>Field number for the "agent_id" field.</summary>
    public const int AgentIdFieldNumber = 1;
    private global::Bgs.Protocol.Club.V1.MemberId agentId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bgs.Protocol.Club.V1.MemberId AgentId {
      get { return agentId_; }
      set {
        agentId_ = value;
      }
    }
    /// <summary>Gets whether the agent_id field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasAgentId {
      get { return agentId_ != null; }
    }
    /// <summary>Clears the value of the agent_id field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearAgentId() {
      agentId_ = null;
    }

    /// <summary>Field number for the "club_id" field.</summary>
    public const int ClubIdFieldNumber = 2;
    private readonly static ulong ClubIdDefaultValue = 0UL;

    private ulong clubId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong ClubId {
      get { if ((_hasBits0 & 1) != 0) { return clubId_; } else { return ClubIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        clubId_ = value;
      }
    }
    /// <summary>Gets whether the "club_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasClubId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "club_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearClubId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "stream_id" field.</summary>
    public const int StreamIdFieldNumber = 3;
    private static readonly pb::FieldCodec<ulong> _repeated_streamId_codec
        = pb::FieldCodec.ForUInt64(24);
    private readonly pbc::RepeatedField<ulong> streamId_ = new pbc::RepeatedField<ulong>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<ulong> StreamId {
      get { return streamId_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UnsubscribeStreamRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UnsubscribeStreamRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(AgentId, other.AgentId)) return false;
      if (ClubId != other.ClubId) return false;
      if(!streamId_.Equals(other.streamId_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasAgentId) hash ^= AgentId.GetHashCode();
      if (HasClubId) hash ^= ClubId.GetHashCode();
      hash ^= streamId_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasAgentId) {
        output.WriteRawTag(10);
        output.WriteMessage(AgentId);
      }
      if (HasClubId) {
        output.WriteRawTag(16);
        output.WriteUInt64(ClubId);
      }
      streamId_.WriteTo(output, _repeated_streamId_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasAgentId) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AgentId);
      }
      if (HasClubId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(ClubId);
      }
      size += streamId_.CalculateSize(_repeated_streamId_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UnsubscribeStreamRequest other) {
      if (other == null) {
        return;
      }
      if (other.HasAgentId) {
        if (!HasAgentId) {
          AgentId = new global::Bgs.Protocol.Club.V1.MemberId();
        }
        AgentId.MergeFrom(other.AgentId);
      }
      if (other.HasClubId) {
        ClubId = other.ClubId;
      }
      streamId_.Add(other.streamId_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (!HasAgentId) {
              AgentId = new global::Bgs.Protocol.Club.V1.MemberId();
            }
            input.ReadMessage(AgentId);
            break;
          }
          case 16: {
            ClubId = input.ReadUInt64();
            break;
          }
          case 26:
          case 24: {
            streamId_.AddEntriesFrom(input, _repeated_streamId_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class CreateStreamRequest : pb::IMessage<CreateStreamRequest> {
    private static readonly pb::MessageParser<CreateStreamRequest> _parser = new pb::MessageParser<CreateStreamRequest>(() => new CreateStreamRequest());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CreateStreamRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bgs.Protocol.Club.V1.Client.ClubRequestReflection.Descriptor.MessageTypes[54]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateStreamRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateStreamRequest(CreateStreamRequest other) : this() {
      _hasBits0 = other._hasBits0;
      agentId_ = other.HasAgentId ? other.agentId_.Clone() : null;
      clubId_ = other.clubId_;
      options_ = other.HasOptions ? other.options_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateStreamRequest Clone() {
      return new CreateStreamRequest(this);
    }

    /// <summary>Field number for the "agent_id" field.</summary>
    public const int AgentIdFieldNumber = 1;
    private global::Bgs.Protocol.Club.V1.MemberId agentId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bgs.Protocol.Club.V1.MemberId AgentId {
      get { return agentId_; }
      set {
        agentId_ = value;
      }
    }
    /// <summary>Gets whether the agent_id field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasAgentId {
      get { return agentId_ != null; }
    }
    /// <summary>Clears the value of the agent_id field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearAgentId() {
      agentId_ = null;
    }

    /// <summary>Field number for the "club_id" field.</summary>
    public const int ClubIdFieldNumber = 2;
    private readonly static ulong ClubIdDefaultValue = 0UL;

    private ulong clubId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong ClubId {
      get { if ((_hasBits0 & 1) != 0) { return clubId_; } else { return ClubIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        clubId_ = value;
      }
    }
    /// <summary>Gets whether the "club_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasClubId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "club_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearClubId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "options" field.</summary>
    public const int OptionsFieldNumber = 3;
    private global::Bgs.Protocol.Club.V1.Client.CreateStreamOptions options_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bgs.Protocol.Club.V1.Client.CreateStreamOptions Options {
      get { return options_; }
      set {
        options_ = value;
      }
    }
    /// <summary>Gets whether the options field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasOptions {
      get { return options_ != null; }
    }
    /// <summary>Clears the value of the options field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearOptions() {
      options_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CreateStreamRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CreateStreamRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(AgentId, other.AgentId)) return false;
      if (ClubId != other.ClubId) return false;
      if (!object.Equals(Options, other.Options)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasAgentId) hash ^= AgentId.GetHashCode();
      if (HasClubId) hash ^= ClubId.GetHashCode();
      if (HasOptions) hash ^= Options.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasAgentId) {
        output.WriteRawTag(10);
        output.WriteMessage(AgentId);
      }
      if (HasClubId) {
        output.WriteRawTag(16);
        output.WriteUInt64(ClubId);
      }
      if (HasOptions) {
        output.WriteRawTag(26);
        output.WriteMessage(Options);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasAgentId) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AgentId);
      }
      if (HasClubId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(ClubId);
      }
      if (HasOptions) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Options);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CreateStreamRequest other) {
      if (other == null) {
        return;
      }
      if (other.HasAgentId) {
        if (!HasAgentId) {
          AgentId = new global::Bgs.Protocol.Club.V1.MemberId();
        }
        AgentId.MergeFrom(other.AgentId);
      }
      if (other.HasClubId) {
        ClubId = other.ClubId;
      }
      if (other.HasOptions) {
        if (!HasOptions) {
          Options = new global::Bgs.Protocol.Club.V1.Client.CreateStreamOptions();
        }
        Options.MergeFrom(other.Options);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (!HasAgentId) {
              AgentId = new global::Bgs.Protocol.Club.V1.MemberId();
            }
            input.ReadMessage(AgentId);
            break;
          }
          case 16: {
            ClubId = input.ReadUInt64();
            break;
          }
          case 26: {
            if (!HasOptions) {
              Options = new global::Bgs.Protocol.Club.V1.Client.CreateStreamOptions();
            }
            input.ReadMessage(Options);
            break;
          }
        }
      }
    }

  }

  public sealed partial class CreateStreamResponse : pb::IMessage<CreateStreamResponse> {
    private static readonly pb::MessageParser<CreateStreamResponse> _parser = new pb::MessageParser<CreateStreamResponse>(() => new CreateStreamResponse());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CreateStreamResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bgs.Protocol.Club.V1.Client.ClubRequestReflection.Descriptor.MessageTypes[55]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateStreamResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateStreamResponse(CreateStreamResponse other) : this() {
      _hasBits0 = other._hasBits0;
      clubId_ = other.clubId_;
      streamId_ = other.streamId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateStreamResponse Clone() {
      return new CreateStreamResponse(this);
    }

    /// <summary>Field number for the "club_id" field.</summary>
    public const int ClubIdFieldNumber = 1;
    private readonly static ulong ClubIdDefaultValue = 0UL;

    private ulong clubId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong ClubId {
      get { if ((_hasBits0 & 1) != 0) { return clubId_; } else { return ClubIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        clubId_ = value;
      }
    }
    /// <summary>Gets whether the "club_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasClubId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "club_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearClubId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "stream_id" field.</summary>
    public const int StreamIdFieldNumber = 2;
    private readonly static ulong StreamIdDefaultValue = 0UL;

    private ulong streamId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong StreamId {
      get { if ((_hasBits0 & 2) != 0) { return streamId_; } else { return StreamIdDefaultValue; } }
      set {
        _hasBits0 |= 2;
        streamId_ = value;
      }
    }
    /// <summary>Gets whether the "stream_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasStreamId {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "stream_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearStreamId() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CreateStreamResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CreateStreamResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ClubId != other.ClubId) return false;
      if (StreamId != other.StreamId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasClubId) hash ^= ClubId.GetHashCode();
      if (HasStreamId) hash ^= StreamId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasClubId) {
        output.WriteRawTag(8);
        output.WriteUInt64(ClubId);
      }
      if (HasStreamId) {
        output.WriteRawTag(16);
        output.WriteUInt64(StreamId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasClubId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(ClubId);
      }
      if (HasStreamId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(StreamId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CreateStreamResponse other) {
      if (other == null) {
        return;
      }
      if (other.HasClubId) {
        ClubId = other.ClubId;
      }
      if (other.HasStreamId) {
        StreamId = other.StreamId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ClubId = input.ReadUInt64();
            break;
          }
          case 16: {
            StreamId = input.ReadUInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DestroyStreamRequest : pb::IMessage<DestroyStreamRequest> {
    private static readonly pb::MessageParser<DestroyStreamRequest> _parser = new pb::MessageParser<DestroyStreamRequest>(() => new DestroyStreamRequest());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DestroyStreamRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bgs.Protocol.Club.V1.Client.ClubRequestReflection.Descriptor.MessageTypes[56]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DestroyStreamRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DestroyStreamRequest(DestroyStreamRequest other) : this() {
      _hasBits0 = other._hasBits0;
      agentId_ = other.HasAgentId ? other.agentId_.Clone() : null;
      clubId_ = other.clubId_;
      streamId_ = other.streamId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DestroyStreamRequest Clone() {
      return new DestroyStreamRequest(this);
    }

    /// <summary>Field number for the "agent_id" field.</summary>
    public const int AgentIdFieldNumber = 1;
    private global::Bgs.Protocol.Club.V1.MemberId agentId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bgs.Protocol.Club.V1.MemberId AgentId {
      get { return agentId_; }
      set {
        agentId_ = value;
      }
    }
    /// <summary>Gets whether the agent_id field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasAgentId {
      get { return agentId_ != null; }
    }
    /// <summary>Clears the value of the agent_id field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearAgentId() {
      agentId_ = null;
    }

    /// <summary>Field number for the "club_id" field.</summary>
    public const int ClubIdFieldNumber = 2;
    private readonly static ulong ClubIdDefaultValue = 0UL;

    private ulong clubId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong ClubId {
      get { if ((_hasBits0 & 1) != 0) { return clubId_; } else { return ClubIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        clubId_ = value;
      }
    }
    /// <summary>Gets whether the "club_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasClubId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "club_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearClubId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "stream_id" field.</summary>
    public const int StreamIdFieldNumber = 3;
    private readonly static ulong StreamIdDefaultValue = 0UL;

    private ulong streamId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong StreamId {
      get { if ((_hasBits0 & 2) != 0) { return streamId_; } else { return StreamIdDefaultValue; } }
      set {
        _hasBits0 |= 2;
        streamId_ = value;
      }
    }
    /// <summary>Gets whether the "stream_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasStreamId {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "stream_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearStreamId() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DestroyStreamRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DestroyStreamRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(AgentId, other.AgentId)) return false;
      if (ClubId != other.ClubId) return false;
      if (StreamId != other.StreamId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasAgentId) hash ^= AgentId.GetHashCode();
      if (HasClubId) hash ^= ClubId.GetHashCode();
      if (HasStreamId) hash ^= StreamId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasAgentId) {
        output.WriteRawTag(10);
        output.WriteMessage(AgentId);
      }
      if (HasClubId) {
        output.WriteRawTag(16);
        output.WriteUInt64(ClubId);
      }
      if (HasStreamId) {
        output.WriteRawTag(24);
        output.WriteUInt64(StreamId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasAgentId) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AgentId);
      }
      if (HasClubId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(ClubId);
      }
      if (HasStreamId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(StreamId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DestroyStreamRequest other) {
      if (other == null) {
        return;
      }
      if (other.HasAgentId) {
        if (!HasAgentId) {
          AgentId = new global::Bgs.Protocol.Club.V1.MemberId();
        }
        AgentId.MergeFrom(other.AgentId);
      }
      if (other.HasClubId) {
        ClubId = other.ClubId;
      }
      if (other.HasStreamId) {
        StreamId = other.StreamId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (!HasAgentId) {
              AgentId = new global::Bgs.Protocol.Club.V1.MemberId();
            }
            input.ReadMessage(AgentId);
            break;
          }
          case 16: {
            ClubId = input.ReadUInt64();
            break;
          }
          case 24: {
            StreamId = input.ReadUInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetStreamRequest : pb::IMessage<GetStreamRequest> {
    private static readonly pb::MessageParser<GetStreamRequest> _parser = new pb::MessageParser<GetStreamRequest>(() => new GetStreamRequest());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetStreamRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bgs.Protocol.Club.V1.Client.ClubRequestReflection.Descriptor.MessageTypes[57]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetStreamRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetStreamRequest(GetStreamRequest other) : this() {
      _hasBits0 = other._hasBits0;
      agentId_ = other.HasAgentId ? other.agentId_.Clone() : null;
      clubId_ = other.clubId_;
      streamId_ = other.streamId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetStreamRequest Clone() {
      return new GetStreamRequest(this);
    }

    /// <summary>Field number for the "agent_id" field.</summary>
    public const int AgentIdFieldNumber = 1;
    private global::Bgs.Protocol.Club.V1.MemberId agentId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bgs.Protocol.Club.V1.MemberId AgentId {
      get { return agentId_; }
      set {
        agentId_ = value;
      }
    }
    /// <summary>Gets whether the agent_id field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasAgentId {
      get { return agentId_ != null; }
    }
    /// <summary>Clears the value of the agent_id field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearAgentId() {
      agentId_ = null;
    }

    /// <summary>Field number for the "club_id" field.</summary>
    public const int ClubIdFieldNumber = 2;
    private readonly static ulong ClubIdDefaultValue = 0UL;

    private ulong clubId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong ClubId {
      get { if ((_hasBits0 & 1) != 0) { return clubId_; } else { return ClubIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        clubId_ = value;
      }
    }
    /// <summary>Gets whether the "club_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasClubId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "club_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearClubId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "stream_id" field.</summary>
    public const int StreamIdFieldNumber = 3;
    private readonly static ulong StreamIdDefaultValue = 0UL;

    private ulong streamId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong StreamId {
      get { if ((_hasBits0 & 2) != 0) { return streamId_; } else { return StreamIdDefaultValue; } }
      set {
        _hasBits0 |= 2;
        streamId_ = value;
      }
    }
    /// <summary>Gets whether the "stream_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasStreamId {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "stream_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearStreamId() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetStreamRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetStreamRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(AgentId, other.AgentId)) return false;
      if (ClubId != other.ClubId) return false;
      if (StreamId != other.StreamId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasAgentId) hash ^= AgentId.GetHashCode();
      if (HasClubId) hash ^= ClubId.GetHashCode();
      if (HasStreamId) hash ^= StreamId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasAgentId) {
        output.WriteRawTag(10);
        output.WriteMessage(AgentId);
      }
      if (HasClubId) {
        output.WriteRawTag(16);
        output.WriteUInt64(ClubId);
      }
      if (HasStreamId) {
        output.WriteRawTag(24);
        output.WriteUInt64(StreamId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasAgentId) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AgentId);
      }
      if (HasClubId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(ClubId);
      }
      if (HasStreamId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(StreamId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetStreamRequest other) {
      if (other == null) {
        return;
      }
      if (other.HasAgentId) {
        if (!HasAgentId) {
          AgentId = new global::Bgs.Protocol.Club.V1.MemberId();
        }
        AgentId.MergeFrom(other.AgentId);
      }
      if (other.HasClubId) {
        ClubId = other.ClubId;
      }
      if (other.HasStreamId) {
        StreamId = other.StreamId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (!HasAgentId) {
              AgentId = new global::Bgs.Protocol.Club.V1.MemberId();
            }
            input.ReadMessage(AgentId);
            break;
          }
          case 16: {
            ClubId = input.ReadUInt64();
            break;
          }
          case 24: {
            StreamId = input.ReadUInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetStreamResponse : pb::IMessage<GetStreamResponse> {
    private static readonly pb::MessageParser<GetStreamResponse> _parser = new pb::MessageParser<GetStreamResponse>(() => new GetStreamResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetStreamResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bgs.Protocol.Club.V1.Client.ClubRequestReflection.Descriptor.MessageTypes[58]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetStreamResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetStreamResponse(GetStreamResponse other) : this() {
      stream_ = other.HasStream ? other.stream_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetStreamResponse Clone() {
      return new GetStreamResponse(this);
    }

    /// <summary>Field number for the "stream" field.</summary>
    public const int StreamFieldNumber = 1;
    private global::Bgs.Protocol.Club.V1.Client.Stream stream_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bgs.Protocol.Club.V1.Client.Stream Stream {
      get { return stream_; }
      set {
        stream_ = value;
      }
    }
    /// <summary>Gets whether the stream field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasStream {
      get { return stream_ != null; }
    }
    /// <summary>Clears the value of the stream field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearStream() {
      stream_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetStreamResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetStreamResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Stream, other.Stream)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasStream) hash ^= Stream.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasStream) {
        output.WriteRawTag(10);
        output.WriteMessage(Stream);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasStream) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Stream);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetStreamResponse other) {
      if (other == null) {
        return;
      }
      if (other.HasStream) {
        if (!HasStream) {
          Stream = new global::Bgs.Protocol.Club.V1.Client.Stream();
        }
        Stream.MergeFrom(other.Stream);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (!HasStream) {
              Stream = new global::Bgs.Protocol.Club.V1.Client.Stream();
            }
            input.ReadMessage(Stream);
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetStreamsRequest : pb::IMessage<GetStreamsRequest> {
    private static readonly pb::MessageParser<GetStreamsRequest> _parser = new pb::MessageParser<GetStreamsRequest>(() => new GetStreamsRequest());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetStreamsRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bgs.Protocol.Club.V1.Client.ClubRequestReflection.Descriptor.MessageTypes[59]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetStreamsRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetStreamsRequest(GetStreamsRequest other) : this() {
      _hasBits0 = other._hasBits0;
      agentId_ = other.HasAgentId ? other.agentId_.Clone() : null;
      clubId_ = other.clubId_;
      continuation_ = other.continuation_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetStreamsRequest Clone() {
      return new GetStreamsRequest(this);
    }

    /// <summary>Field number for the "agent_id" field.</summary>
    public const int AgentIdFieldNumber = 1;
    private global::Bgs.Protocol.Club.V1.MemberId agentId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bgs.Protocol.Club.V1.MemberId AgentId {
      get { return agentId_; }
      set {
        agentId_ = value;
      }
    }
    /// <summary>Gets whether the agent_id field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasAgentId {
      get { return agentId_ != null; }
    }
    /// <summary>Clears the value of the agent_id field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearAgentId() {
      agentId_ = null;
    }

    /// <summary>Field number for the "club_id" field.</summary>
    public const int ClubIdFieldNumber = 2;
    private readonly static ulong ClubIdDefaultValue = 0UL;

    private ulong clubId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong ClubId {
      get { if ((_hasBits0 & 1) != 0) { return clubId_; } else { return ClubIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        clubId_ = value;
      }
    }
    /// <summary>Gets whether the "club_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasClubId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "club_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearClubId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "continuation" field.</summary>
    public const int ContinuationFieldNumber = 3;
    private readonly static ulong ContinuationDefaultValue = 0UL;

    private ulong continuation_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong Continuation {
      get { if ((_hasBits0 & 2) != 0) { return continuation_; } else { return ContinuationDefaultValue; } }
      set {
        _hasBits0 |= 2;
        continuation_ = value;
      }
    }
    /// <summary>Gets whether the "continuation" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasContinuation {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "continuation" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearContinuation() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetStreamsRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetStreamsRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(AgentId, other.AgentId)) return false;
      if (ClubId != other.ClubId) return false;
      if (Continuation != other.Continuation) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasAgentId) hash ^= AgentId.GetHashCode();
      if (HasClubId) hash ^= ClubId.GetHashCode();
      if (HasContinuation) hash ^= Continuation.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasAgentId) {
        output.WriteRawTag(10);
        output.WriteMessage(AgentId);
      }
      if (HasClubId) {
        output.WriteRawTag(16);
        output.WriteUInt64(ClubId);
      }
      if (HasContinuation) {
        output.WriteRawTag(24);
        output.WriteUInt64(Continuation);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasAgentId) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AgentId);
      }
      if (HasClubId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(ClubId);
      }
      if (HasContinuation) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Continuation);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetStreamsRequest other) {
      if (other == null) {
        return;
      }
      if (other.HasAgentId) {
        if (!HasAgentId) {
          AgentId = new global::Bgs.Protocol.Club.V1.MemberId();
        }
        AgentId.MergeFrom(other.AgentId);
      }
      if (other.HasClubId) {
        ClubId = other.ClubId;
      }
      if (other.HasContinuation) {
        Continuation = other.Continuation;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (!HasAgentId) {
              AgentId = new global::Bgs.Protocol.Club.V1.MemberId();
            }
            input.ReadMessage(AgentId);
            break;
          }
          case 16: {
            ClubId = input.ReadUInt64();
            break;
          }
          case 24: {
            Continuation = input.ReadUInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetStreamsResponse : pb::IMessage<GetStreamsResponse> {
    private static readonly pb::MessageParser<GetStreamsResponse> _parser = new pb::MessageParser<GetStreamsResponse>(() => new GetStreamsResponse());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetStreamsResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bgs.Protocol.Club.V1.Client.ClubRequestReflection.Descriptor.MessageTypes[60]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetStreamsResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetStreamsResponse(GetStreamsResponse other) : this() {
      _hasBits0 = other._hasBits0;
      stream_ = other.stream_.Clone();
      view_ = other.view_.Clone();
      continuation_ = other.continuation_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetStreamsResponse Clone() {
      return new GetStreamsResponse(this);
    }

    /// <summary>Field number for the "stream" field.</summary>
    public const int StreamFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Bgs.Protocol.Club.V1.Client.Stream> _repeated_stream_codec
        = pb::FieldCodec.ForMessage(10, global::Bgs.Protocol.Club.V1.Client.Stream.Parser);
    private readonly pbc::RepeatedField<global::Bgs.Protocol.Club.V1.Client.Stream> stream_ = new pbc::RepeatedField<global::Bgs.Protocol.Club.V1.Client.Stream>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Bgs.Protocol.Club.V1.Client.Stream> Stream {
      get { return stream_; }
    }

    /// <summary>Field number for the "view" field.</summary>
    public const int ViewFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Bgs.Protocol.Club.V1.Client.StreamView> _repeated_view_codec
        = pb::FieldCodec.ForMessage(18, global::Bgs.Protocol.Club.V1.Client.StreamView.Parser);
    private readonly pbc::RepeatedField<global::Bgs.Protocol.Club.V1.Client.StreamView> view_ = new pbc::RepeatedField<global::Bgs.Protocol.Club.V1.Client.StreamView>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Bgs.Protocol.Club.V1.Client.StreamView> View {
      get { return view_; }
    }

    /// <summary>Field number for the "continuation" field.</summary>
    public const int ContinuationFieldNumber = 3;
    private readonly static ulong ContinuationDefaultValue = 0UL;

    private ulong continuation_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong Continuation {
      get { if ((_hasBits0 & 1) != 0) { return continuation_; } else { return ContinuationDefaultValue; } }
      set {
        _hasBits0 |= 1;
        continuation_ = value;
      }
    }
    /// <summary>Gets whether the "continuation" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasContinuation {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "continuation" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearContinuation() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetStreamsResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetStreamsResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!stream_.Equals(other.stream_)) return false;
      if(!view_.Equals(other.view_)) return false;
      if (Continuation != other.Continuation) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= stream_.GetHashCode();
      hash ^= view_.GetHashCode();
      if (HasContinuation) hash ^= Continuation.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      stream_.WriteTo(output, _repeated_stream_codec);
      view_.WriteTo(output, _repeated_view_codec);
      if (HasContinuation) {
        output.WriteRawTag(24);
        output.WriteUInt64(Continuation);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += stream_.CalculateSize(_repeated_stream_codec);
      size += view_.CalculateSize(_repeated_view_codec);
      if (HasContinuation) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Continuation);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetStreamsResponse other) {
      if (other == null) {
        return;
      }
      stream_.Add(other.stream_);
      view_.Add(other.view_);
      if (other.HasContinuation) {
        Continuation = other.Continuation;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            stream_.AddEntriesFrom(input, _repeated_stream_codec);
            break;
          }
          case 18: {
            view_.AddEntriesFrom(input, _repeated_view_codec);
            break;
          }
          case 24: {
            Continuation = input.ReadUInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class UpdateStreamStateRequest : pb::IMessage<UpdateStreamStateRequest> {
    private static readonly pb::MessageParser<UpdateStreamStateRequest> _parser = new pb::MessageParser<UpdateStreamStateRequest>(() => new UpdateStreamStateRequest());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UpdateStreamStateRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bgs.Protocol.Club.V1.Client.ClubRequestReflection.Descriptor.MessageTypes[61]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateStreamStateRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateStreamStateRequest(UpdateStreamStateRequest other) : this() {
      _hasBits0 = other._hasBits0;
      agentId_ = other.HasAgentId ? other.agentId_.Clone() : null;
      clubId_ = other.clubId_;
      streamId_ = other.streamId_;
      options_ = other.HasOptions ? other.options_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateStreamStateRequest Clone() {
      return new UpdateStreamStateRequest(this);
    }

    /// <summary>Field number for the "agent_id" field.</summary>
    public const int AgentIdFieldNumber = 1;
    private global::Bgs.Protocol.Club.V1.MemberId agentId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bgs.Protocol.Club.V1.MemberId AgentId {
      get { return agentId_; }
      set {
        agentId_ = value;
      }
    }
    /// <summary>Gets whether the agent_id field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasAgentId {
      get { return agentId_ != null; }
    }
    /// <summary>Clears the value of the agent_id field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearAgentId() {
      agentId_ = null;
    }

    /// <summary>Field number for the "club_id" field.</summary>
    public const int ClubIdFieldNumber = 2;
    private readonly static ulong ClubIdDefaultValue = 0UL;

    private ulong clubId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong ClubId {
      get { if ((_hasBits0 & 1) != 0) { return clubId_; } else { return ClubIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        clubId_ = value;
      }
    }
    /// <summary>Gets whether the "club_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasClubId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "club_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearClubId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "stream_id" field.</summary>
    public const int StreamIdFieldNumber = 3;
    private readonly static ulong StreamIdDefaultValue = 0UL;

    private ulong streamId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong StreamId {
      get { if ((_hasBits0 & 2) != 0) { return streamId_; } else { return StreamIdDefaultValue; } }
      set {
        _hasBits0 |= 2;
        streamId_ = value;
      }
    }
    /// <summary>Gets whether the "stream_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasStreamId {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "stream_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearStreamId() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "options" field.</summary>
    public const int OptionsFieldNumber = 5;
    private global::Bgs.Protocol.Club.V1.Client.StreamStateOptions options_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bgs.Protocol.Club.V1.Client.StreamStateOptions Options {
      get { return options_; }
      set {
        options_ = value;
      }
    }
    /// <summary>Gets whether the options field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasOptions {
      get { return options_ != null; }
    }
    /// <summary>Clears the value of the options field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearOptions() {
      options_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UpdateStreamStateRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UpdateStreamStateRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(AgentId, other.AgentId)) return false;
      if (ClubId != other.ClubId) return false;
      if (StreamId != other.StreamId) return false;
      if (!object.Equals(Options, other.Options)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasAgentId) hash ^= AgentId.GetHashCode();
      if (HasClubId) hash ^= ClubId.GetHashCode();
      if (HasStreamId) hash ^= StreamId.GetHashCode();
      if (HasOptions) hash ^= Options.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasAgentId) {
        output.WriteRawTag(10);
        output.WriteMessage(AgentId);
      }
      if (HasClubId) {
        output.WriteRawTag(16);
        output.WriteUInt64(ClubId);
      }
      if (HasStreamId) {
        output.WriteRawTag(24);
        output.WriteUInt64(StreamId);
      }
      if (HasOptions) {
        output.WriteRawTag(42);
        output.WriteMessage(Options);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasAgentId) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AgentId);
      }
      if (HasClubId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(ClubId);
      }
      if (HasStreamId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(StreamId);
      }
      if (HasOptions) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Options);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UpdateStreamStateRequest other) {
      if (other == null) {
        return;
      }
      if (other.HasAgentId) {
        if (!HasAgentId) {
          AgentId = new global::Bgs.Protocol.Club.V1.MemberId();
        }
        AgentId.MergeFrom(other.AgentId);
      }
      if (other.HasClubId) {
        ClubId = other.ClubId;
      }
      if (other.HasStreamId) {
        StreamId = other.StreamId;
      }
      if (other.HasOptions) {
        if (!HasOptions) {
          Options = new global::Bgs.Protocol.Club.V1.Client.StreamStateOptions();
        }
        Options.MergeFrom(other.Options);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (!HasAgentId) {
              AgentId = new global::Bgs.Protocol.Club.V1.MemberId();
            }
            input.ReadMessage(AgentId);
            break;
          }
          case 16: {
            ClubId = input.ReadUInt64();
            break;
          }
          case 24: {
            StreamId = input.ReadUInt64();
            break;
          }
          case 42: {
            if (!HasOptions) {
              Options = new global::Bgs.Protocol.Club.V1.Client.StreamStateOptions();
            }
            input.ReadMessage(Options);
            break;
          }
        }
      }
    }

  }

  public sealed partial class SetStreamFocusRequest : pb::IMessage<SetStreamFocusRequest> {
    private static readonly pb::MessageParser<SetStreamFocusRequest> _parser = new pb::MessageParser<SetStreamFocusRequest>(() => new SetStreamFocusRequest());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SetStreamFocusRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bgs.Protocol.Club.V1.Client.ClubRequestReflection.Descriptor.MessageTypes[62]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetStreamFocusRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetStreamFocusRequest(SetStreamFocusRequest other) : this() {
      _hasBits0 = other._hasBits0;
      agentId_ = other.HasAgentId ? other.agentId_.Clone() : null;
      clubId_ = other.clubId_;
      streamId_ = other.streamId_;
      focus_ = other.focus_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetStreamFocusRequest Clone() {
      return new SetStreamFocusRequest(this);
    }

    /// <summary>Field number for the "agent_id" field.</summary>
    public const int AgentIdFieldNumber = 1;
    private global::Bgs.Protocol.Club.V1.MemberId agentId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bgs.Protocol.Club.V1.MemberId AgentId {
      get { return agentId_; }
      set {
        agentId_ = value;
      }
    }
    /// <summary>Gets whether the agent_id field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasAgentId {
      get { return agentId_ != null; }
    }
    /// <summary>Clears the value of the agent_id field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearAgentId() {
      agentId_ = null;
    }

    /// <summary>Field number for the "club_id" field.</summary>
    public const int ClubIdFieldNumber = 2;
    private readonly static ulong ClubIdDefaultValue = 0UL;

    private ulong clubId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong ClubId {
      get { if ((_hasBits0 & 1) != 0) { return clubId_; } else { return ClubIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        clubId_ = value;
      }
    }
    /// <summary>Gets whether the "club_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasClubId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "club_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearClubId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "stream_id" field.</summary>
    public const int StreamIdFieldNumber = 3;
    private readonly static ulong StreamIdDefaultValue = 0UL;

    private ulong streamId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong StreamId {
      get { if ((_hasBits0 & 2) != 0) { return streamId_; } else { return StreamIdDefaultValue; } }
      set {
        _hasBits0 |= 2;
        streamId_ = value;
      }
    }
    /// <summary>Gets whether the "stream_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasStreamId {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "stream_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearStreamId() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "focus" field.</summary>
    public const int FocusFieldNumber = 4;
    private readonly static bool FocusDefaultValue = false;

    private bool focus_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Focus {
      get { if ((_hasBits0 & 4) != 0) { return focus_; } else { return FocusDefaultValue; } }
      set {
        _hasBits0 |= 4;
        focus_ = value;
      }
    }
    /// <summary>Gets whether the "focus" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasFocus {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "focus" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearFocus() {
      _hasBits0 &= ~4;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SetStreamFocusRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SetStreamFocusRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(AgentId, other.AgentId)) return false;
      if (ClubId != other.ClubId) return false;
      if (StreamId != other.StreamId) return false;
      if (Focus != other.Focus) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasAgentId) hash ^= AgentId.GetHashCode();
      if (HasClubId) hash ^= ClubId.GetHashCode();
      if (HasStreamId) hash ^= StreamId.GetHashCode();
      if (HasFocus) hash ^= Focus.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasAgentId) {
        output.WriteRawTag(10);
        output.WriteMessage(AgentId);
      }
      if (HasClubId) {
        output.WriteRawTag(16);
        output.WriteUInt64(ClubId);
      }
      if (HasStreamId) {
        output.WriteRawTag(24);
        output.WriteUInt64(StreamId);
      }
      if (HasFocus) {
        output.WriteRawTag(32);
        output.WriteBool(Focus);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasAgentId) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AgentId);
      }
      if (HasClubId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(ClubId);
      }
      if (HasStreamId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(StreamId);
      }
      if (HasFocus) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SetStreamFocusRequest other) {
      if (other == null) {
        return;
      }
      if (other.HasAgentId) {
        if (!HasAgentId) {
          AgentId = new global::Bgs.Protocol.Club.V1.MemberId();
        }
        AgentId.MergeFrom(other.AgentId);
      }
      if (other.HasClubId) {
        ClubId = other.ClubId;
      }
      if (other.HasStreamId) {
        StreamId = other.StreamId;
      }
      if (other.HasFocus) {
        Focus = other.Focus;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (!HasAgentId) {
              AgentId = new global::Bgs.Protocol.Club.V1.MemberId();
            }
            input.ReadMessage(AgentId);
            break;
          }
          case 16: {
            ClubId = input.ReadUInt64();
            break;
          }
          case 24: {
            StreamId = input.ReadUInt64();
            break;
          }
          case 32: {
            Focus = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class CreateMessageRequest : pb::IMessage<CreateMessageRequest> {
    private static readonly pb::MessageParser<CreateMessageRequest> _parser = new pb::MessageParser<CreateMessageRequest>(() => new CreateMessageRequest());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CreateMessageRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bgs.Protocol.Club.V1.Client.ClubRequestReflection.Descriptor.MessageTypes[63]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateMessageRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateMessageRequest(CreateMessageRequest other) : this() {
      _hasBits0 = other._hasBits0;
      agentId_ = other.HasAgentId ? other.agentId_.Clone() : null;
      clubId_ = other.clubId_;
      streamId_ = other.streamId_;
      options_ = other.HasOptions ? other.options_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateMessageRequest Clone() {
      return new CreateMessageRequest(this);
    }

    /// <summary>Field number for the "agent_id" field.</summary>
    public const int AgentIdFieldNumber = 1;
    private global::Bgs.Protocol.Club.V1.MemberId agentId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bgs.Protocol.Club.V1.MemberId AgentId {
      get { return agentId_; }
      set {
        agentId_ = value;
      }
    }
    /// <summary>Gets whether the agent_id field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasAgentId {
      get { return agentId_ != null; }
    }
    /// <summary>Clears the value of the agent_id field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearAgentId() {
      agentId_ = null;
    }

    /// <summary>Field number for the "club_id" field.</summary>
    public const int ClubIdFieldNumber = 2;
    private readonly static ulong ClubIdDefaultValue = 0UL;

    private ulong clubId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong ClubId {
      get { if ((_hasBits0 & 1) != 0) { return clubId_; } else { return ClubIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        clubId_ = value;
      }
    }
    /// <summary>Gets whether the "club_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasClubId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "club_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearClubId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "stream_id" field.</summary>
    public const int StreamIdFieldNumber = 3;
    private readonly static ulong StreamIdDefaultValue = 0UL;

    private ulong streamId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong StreamId {
      get { if ((_hasBits0 & 2) != 0) { return streamId_; } else { return StreamIdDefaultValue; } }
      set {
        _hasBits0 |= 2;
        streamId_ = value;
      }
    }
    /// <summary>Gets whether the "stream_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasStreamId {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "stream_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearStreamId() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "options" field.</summary>
    public const int OptionsFieldNumber = 4;
    private global::Bgs.Protocol.Club.V1.Client.CreateMessageOptions options_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bgs.Protocol.Club.V1.Client.CreateMessageOptions Options {
      get { return options_; }
      set {
        options_ = value;
      }
    }
    /// <summary>Gets whether the options field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasOptions {
      get { return options_ != null; }
    }
    /// <summary>Clears the value of the options field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearOptions() {
      options_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CreateMessageRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CreateMessageRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(AgentId, other.AgentId)) return false;
      if (ClubId != other.ClubId) return false;
      if (StreamId != other.StreamId) return false;
      if (!object.Equals(Options, other.Options)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasAgentId) hash ^= AgentId.GetHashCode();
      if (HasClubId) hash ^= ClubId.GetHashCode();
      if (HasStreamId) hash ^= StreamId.GetHashCode();
      if (HasOptions) hash ^= Options.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasAgentId) {
        output.WriteRawTag(10);
        output.WriteMessage(AgentId);
      }
      if (HasClubId) {
        output.WriteRawTag(16);
        output.WriteUInt64(ClubId);
      }
      if (HasStreamId) {
        output.WriteRawTag(24);
        output.WriteUInt64(StreamId);
      }
      if (HasOptions) {
        output.WriteRawTag(34);
        output.WriteMessage(Options);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasAgentId) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AgentId);
      }
      if (HasClubId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(ClubId);
      }
      if (HasStreamId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(StreamId);
      }
      if (HasOptions) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Options);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CreateMessageRequest other) {
      if (other == null) {
        return;
      }
      if (other.HasAgentId) {
        if (!HasAgentId) {
          AgentId = new global::Bgs.Protocol.Club.V1.MemberId();
        }
        AgentId.MergeFrom(other.AgentId);
      }
      if (other.HasClubId) {
        ClubId = other.ClubId;
      }
      if (other.HasStreamId) {
        StreamId = other.StreamId;
      }
      if (other.HasOptions) {
        if (!HasOptions) {
          Options = new global::Bgs.Protocol.Club.V1.Client.CreateMessageOptions();
        }
        Options.MergeFrom(other.Options);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (!HasAgentId) {
              AgentId = new global::Bgs.Protocol.Club.V1.MemberId();
            }
            input.ReadMessage(AgentId);
            break;
          }
          case 16: {
            ClubId = input.ReadUInt64();
            break;
          }
          case 24: {
            StreamId = input.ReadUInt64();
            break;
          }
          case 34: {
            if (!HasOptions) {
              Options = new global::Bgs.Protocol.Club.V1.Client.CreateMessageOptions();
            }
            input.ReadMessage(Options);
            break;
          }
        }
      }
    }

  }

  public sealed partial class CreateMessageResponse : pb::IMessage<CreateMessageResponse> {
    private static readonly pb::MessageParser<CreateMessageResponse> _parser = new pb::MessageParser<CreateMessageResponse>(() => new CreateMessageResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CreateMessageResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bgs.Protocol.Club.V1.Client.ClubRequestReflection.Descriptor.MessageTypes[64]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateMessageResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateMessageResponse(CreateMessageResponse other) : this() {
      message_ = other.HasMessage ? other.message_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateMessageResponse Clone() {
      return new CreateMessageResponse(this);
    }

    /// <summary>Field number for the "message" field.</summary>
    public const int MessageFieldNumber = 1;
    private global::Bgs.Protocol.Club.V1.Client.StreamMessage message_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bgs.Protocol.Club.V1.Client.StreamMessage Message {
      get { return message_; }
      set {
        message_ = value;
      }
    }
    /// <summary>Gets whether the message field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasMessage {
      get { return message_ != null; }
    }
    /// <summary>Clears the value of the message field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearMessage() {
      message_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CreateMessageResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CreateMessageResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Message, other.Message)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasMessage) hash ^= Message.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasMessage) {
        output.WriteRawTag(10);
        output.WriteMessage(Message);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasMessage) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Message);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CreateMessageResponse other) {
      if (other == null) {
        return;
      }
      if (other.HasMessage) {
        if (!HasMessage) {
          Message = new global::Bgs.Protocol.Club.V1.Client.StreamMessage();
        }
        Message.MergeFrom(other.Message);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (!HasMessage) {
              Message = new global::Bgs.Protocol.Club.V1.Client.StreamMessage();
            }
            input.ReadMessage(Message);
            break;
          }
        }
      }
    }

  }

  public sealed partial class DestroyMessageRequest : pb::IMessage<DestroyMessageRequest> {
    private static readonly pb::MessageParser<DestroyMessageRequest> _parser = new pb::MessageParser<DestroyMessageRequest>(() => new DestroyMessageRequest());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DestroyMessageRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bgs.Protocol.Club.V1.Client.ClubRequestReflection.Descriptor.MessageTypes[65]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DestroyMessageRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DestroyMessageRequest(DestroyMessageRequest other) : this() {
      _hasBits0 = other._hasBits0;
      agentId_ = other.HasAgentId ? other.agentId_.Clone() : null;
      clubId_ = other.clubId_;
      streamId_ = other.streamId_;
      messageId_ = other.HasMessageId ? other.messageId_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DestroyMessageRequest Clone() {
      return new DestroyMessageRequest(this);
    }

    /// <summary>Field number for the "agent_id" field.</summary>
    public const int AgentIdFieldNumber = 1;
    private global::Bgs.Protocol.Club.V1.MemberId agentId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bgs.Protocol.Club.V1.MemberId AgentId {
      get { return agentId_; }
      set {
        agentId_ = value;
      }
    }
    /// <summary>Gets whether the agent_id field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasAgentId {
      get { return agentId_ != null; }
    }
    /// <summary>Clears the value of the agent_id field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearAgentId() {
      agentId_ = null;
    }

    /// <summary>Field number for the "club_id" field.</summary>
    public const int ClubIdFieldNumber = 2;
    private readonly static ulong ClubIdDefaultValue = 0UL;

    private ulong clubId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong ClubId {
      get { if ((_hasBits0 & 1) != 0) { return clubId_; } else { return ClubIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        clubId_ = value;
      }
    }
    /// <summary>Gets whether the "club_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasClubId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "club_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearClubId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "stream_id" field.</summary>
    public const int StreamIdFieldNumber = 3;
    private readonly static ulong StreamIdDefaultValue = 0UL;

    private ulong streamId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong StreamId {
      get { if ((_hasBits0 & 2) != 0) { return streamId_; } else { return StreamIdDefaultValue; } }
      set {
        _hasBits0 |= 2;
        streamId_ = value;
      }
    }
    /// <summary>Gets whether the "stream_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasStreamId {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "stream_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearStreamId() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "message_id" field.</summary>
    public const int MessageIdFieldNumber = 4;
    private global::Bgs.Protocol.MessageId messageId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bgs.Protocol.MessageId MessageId {
      get { return messageId_; }
      set {
        messageId_ = value;
      }
    }
    /// <summary>Gets whether the message_id field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasMessageId {
      get { return messageId_ != null; }
    }
    /// <summary>Clears the value of the message_id field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearMessageId() {
      messageId_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DestroyMessageRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DestroyMessageRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(AgentId, other.AgentId)) return false;
      if (ClubId != other.ClubId) return false;
      if (StreamId != other.StreamId) return false;
      if (!object.Equals(MessageId, other.MessageId)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasAgentId) hash ^= AgentId.GetHashCode();
      if (HasClubId) hash ^= ClubId.GetHashCode();
      if (HasStreamId) hash ^= StreamId.GetHashCode();
      if (HasMessageId) hash ^= MessageId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasAgentId) {
        output.WriteRawTag(10);
        output.WriteMessage(AgentId);
      }
      if (HasClubId) {
        output.WriteRawTag(16);
        output.WriteUInt64(ClubId);
      }
      if (HasStreamId) {
        output.WriteRawTag(24);
        output.WriteUInt64(StreamId);
      }
      if (HasMessageId) {
        output.WriteRawTag(34);
        output.WriteMessage(MessageId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasAgentId) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AgentId);
      }
      if (HasClubId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(ClubId);
      }
      if (HasStreamId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(StreamId);
      }
      if (HasMessageId) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(MessageId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DestroyMessageRequest other) {
      if (other == null) {
        return;
      }
      if (other.HasAgentId) {
        if (!HasAgentId) {
          AgentId = new global::Bgs.Protocol.Club.V1.MemberId();
        }
        AgentId.MergeFrom(other.AgentId);
      }
      if (other.HasClubId) {
        ClubId = other.ClubId;
      }
      if (other.HasStreamId) {
        StreamId = other.StreamId;
      }
      if (other.HasMessageId) {
        if (!HasMessageId) {
          MessageId = new global::Bgs.Protocol.MessageId();
        }
        MessageId.MergeFrom(other.MessageId);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (!HasAgentId) {
              AgentId = new global::Bgs.Protocol.Club.V1.MemberId();
            }
            input.ReadMessage(AgentId);
            break;
          }
          case 16: {
            ClubId = input.ReadUInt64();
            break;
          }
          case 24: {
            StreamId = input.ReadUInt64();
            break;
          }
          case 34: {
            if (!HasMessageId) {
              MessageId = new global::Bgs.Protocol.MessageId();
            }
            input.ReadMessage(MessageId);
            break;
          }
        }
      }
    }

  }

  public sealed partial class DestroyMessageResponse : pb::IMessage<DestroyMessageResponse> {
    private static readonly pb::MessageParser<DestroyMessageResponse> _parser = new pb::MessageParser<DestroyMessageResponse>(() => new DestroyMessageResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DestroyMessageResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bgs.Protocol.Club.V1.Client.ClubRequestReflection.Descriptor.MessageTypes[66]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DestroyMessageResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DestroyMessageResponse(DestroyMessageResponse other) : this() {
      message_ = other.HasMessage ? other.message_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DestroyMessageResponse Clone() {
      return new DestroyMessageResponse(this);
    }

    /// <summary>Field number for the "message" field.</summary>
    public const int MessageFieldNumber = 1;
    private global::Bgs.Protocol.Club.V1.Client.StreamMessage message_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bgs.Protocol.Club.V1.Client.StreamMessage Message {
      get { return message_; }
      set {
        message_ = value;
      }
    }
    /// <summary>Gets whether the message field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasMessage {
      get { return message_ != null; }
    }
    /// <summary>Clears the value of the message field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearMessage() {
      message_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DestroyMessageResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DestroyMessageResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Message, other.Message)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasMessage) hash ^= Message.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasMessage) {
        output.WriteRawTag(10);
        output.WriteMessage(Message);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasMessage) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Message);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DestroyMessageResponse other) {
      if (other == null) {
        return;
      }
      if (other.HasMessage) {
        if (!HasMessage) {
          Message = new global::Bgs.Protocol.Club.V1.Client.StreamMessage();
        }
        Message.MergeFrom(other.Message);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (!HasMessage) {
              Message = new global::Bgs.Protocol.Club.V1.Client.StreamMessage();
            }
            input.ReadMessage(Message);
            break;
          }
        }
      }
    }

  }

  public sealed partial class EditMessageRequest : pb::IMessage<EditMessageRequest> {
    private static readonly pb::MessageParser<EditMessageRequest> _parser = new pb::MessageParser<EditMessageRequest>(() => new EditMessageRequest());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EditMessageRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bgs.Protocol.Club.V1.Client.ClubRequestReflection.Descriptor.MessageTypes[67]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EditMessageRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EditMessageRequest(EditMessageRequest other) : this() {
      _hasBits0 = other._hasBits0;
      agentId_ = other.HasAgentId ? other.agentId_.Clone() : null;
      clubId_ = other.clubId_;
      streamId_ = other.streamId_;
      messageId_ = other.HasMessageId ? other.messageId_.Clone() : null;
      options_ = other.HasOptions ? other.options_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EditMessageRequest Clone() {
      return new EditMessageRequest(this);
    }

    /// <summary>Field number for the "agent_id" field.</summary>
    public const int AgentIdFieldNumber = 1;
    private global::Bgs.Protocol.Club.V1.MemberId agentId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bgs.Protocol.Club.V1.MemberId AgentId {
      get { return agentId_; }
      set {
        agentId_ = value;
      }
    }
    /// <summary>Gets whether the agent_id field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasAgentId {
      get { return agentId_ != null; }
    }
    /// <summary>Clears the value of the agent_id field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearAgentId() {
      agentId_ = null;
    }

    /// <summary>Field number for the "club_id" field.</summary>
    public const int ClubIdFieldNumber = 2;
    private readonly static ulong ClubIdDefaultValue = 0UL;

    private ulong clubId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong ClubId {
      get { if ((_hasBits0 & 1) != 0) { return clubId_; } else { return ClubIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        clubId_ = value;
      }
    }
    /// <summary>Gets whether the "club_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasClubId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "club_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearClubId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "stream_id" field.</summary>
    public const int StreamIdFieldNumber = 3;
    private readonly static ulong StreamIdDefaultValue = 0UL;

    private ulong streamId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong StreamId {
      get { if ((_hasBits0 & 2) != 0) { return streamId_; } else { return StreamIdDefaultValue; } }
      set {
        _hasBits0 |= 2;
        streamId_ = value;
      }
    }
    /// <summary>Gets whether the "stream_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasStreamId {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "stream_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearStreamId() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "message_id" field.</summary>
    public const int MessageIdFieldNumber = 4;
    private global::Bgs.Protocol.MessageId messageId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bgs.Protocol.MessageId MessageId {
      get { return messageId_; }
      set {
        messageId_ = value;
      }
    }
    /// <summary>Gets whether the message_id field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasMessageId {
      get { return messageId_ != null; }
    }
    /// <summary>Clears the value of the message_id field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearMessageId() {
      messageId_ = null;
    }

    /// <summary>Field number for the "options" field.</summary>
    public const int OptionsFieldNumber = 5;
    private global::Bgs.Protocol.Club.V1.Client.CreateMessageOptions options_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bgs.Protocol.Club.V1.Client.CreateMessageOptions Options {
      get { return options_; }
      set {
        options_ = value;
      }
    }
    /// <summary>Gets whether the options field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasOptions {
      get { return options_ != null; }
    }
    /// <summary>Clears the value of the options field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearOptions() {
      options_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EditMessageRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EditMessageRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(AgentId, other.AgentId)) return false;
      if (ClubId != other.ClubId) return false;
      if (StreamId != other.StreamId) return false;
      if (!object.Equals(MessageId, other.MessageId)) return false;
      if (!object.Equals(Options, other.Options)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasAgentId) hash ^= AgentId.GetHashCode();
      if (HasClubId) hash ^= ClubId.GetHashCode();
      if (HasStreamId) hash ^= StreamId.GetHashCode();
      if (HasMessageId) hash ^= MessageId.GetHashCode();
      if (HasOptions) hash ^= Options.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasAgentId) {
        output.WriteRawTag(10);
        output.WriteMessage(AgentId);
      }
      if (HasClubId) {
        output.WriteRawTag(16);
        output.WriteUInt64(ClubId);
      }
      if (HasStreamId) {
        output.WriteRawTag(24);
        output.WriteUInt64(StreamId);
      }
      if (HasMessageId) {
        output.WriteRawTag(34);
        output.WriteMessage(MessageId);
      }
      if (HasOptions) {
        output.WriteRawTag(42);
        output.WriteMessage(Options);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasAgentId) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AgentId);
      }
      if (HasClubId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(ClubId);
      }
      if (HasStreamId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(StreamId);
      }
      if (HasMessageId) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(MessageId);
      }
      if (HasOptions) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Options);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EditMessageRequest other) {
      if (other == null) {
        return;
      }
      if (other.HasAgentId) {
        if (!HasAgentId) {
          AgentId = new global::Bgs.Protocol.Club.V1.MemberId();
        }
        AgentId.MergeFrom(other.AgentId);
      }
      if (other.HasClubId) {
        ClubId = other.ClubId;
      }
      if (other.HasStreamId) {
        StreamId = other.StreamId;
      }
      if (other.HasMessageId) {
        if (!HasMessageId) {
          MessageId = new global::Bgs.Protocol.MessageId();
        }
        MessageId.MergeFrom(other.MessageId);
      }
      if (other.HasOptions) {
        if (!HasOptions) {
          Options = new global::Bgs.Protocol.Club.V1.Client.CreateMessageOptions();
        }
        Options.MergeFrom(other.Options);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (!HasAgentId) {
              AgentId = new global::Bgs.Protocol.Club.V1.MemberId();
            }
            input.ReadMessage(AgentId);
            break;
          }
          case 16: {
            ClubId = input.ReadUInt64();
            break;
          }
          case 24: {
            StreamId = input.ReadUInt64();
            break;
          }
          case 34: {
            if (!HasMessageId) {
              MessageId = new global::Bgs.Protocol.MessageId();
            }
            input.ReadMessage(MessageId);
            break;
          }
          case 42: {
            if (!HasOptions) {
              Options = new global::Bgs.Protocol.Club.V1.Client.CreateMessageOptions();
            }
            input.ReadMessage(Options);
            break;
          }
        }
      }
    }

  }

  public sealed partial class EditMessageResponse : pb::IMessage<EditMessageResponse> {
    private static readonly pb::MessageParser<EditMessageResponse> _parser = new pb::MessageParser<EditMessageResponse>(() => new EditMessageResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EditMessageResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bgs.Protocol.Club.V1.Client.ClubRequestReflection.Descriptor.MessageTypes[68]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EditMessageResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EditMessageResponse(EditMessageResponse other) : this() {
      message_ = other.HasMessage ? other.message_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EditMessageResponse Clone() {
      return new EditMessageResponse(this);
    }

    /// <summary>Field number for the "message" field.</summary>
    public const int MessageFieldNumber = 1;
    private global::Bgs.Protocol.Club.V1.Client.StreamMessage message_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bgs.Protocol.Club.V1.Client.StreamMessage Message {
      get { return message_; }
      set {
        message_ = value;
      }
    }
    /// <summary>Gets whether the message field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasMessage {
      get { return message_ != null; }
    }
    /// <summary>Clears the value of the message field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearMessage() {
      message_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EditMessageResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EditMessageResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Message, other.Message)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasMessage) hash ^= Message.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasMessage) {
        output.WriteRawTag(10);
        output.WriteMessage(Message);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasMessage) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Message);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EditMessageResponse other) {
      if (other == null) {
        return;
      }
      if (other.HasMessage) {
        if (!HasMessage) {
          Message = new global::Bgs.Protocol.Club.V1.Client.StreamMessage();
        }
        Message.MergeFrom(other.Message);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (!HasMessage) {
              Message = new global::Bgs.Protocol.Club.V1.Client.StreamMessage();
            }
            input.ReadMessage(Message);
            break;
          }
        }
      }
    }

  }

  public sealed partial class SetMessagePinnedRequest : pb::IMessage<SetMessagePinnedRequest> {
    private static readonly pb::MessageParser<SetMessagePinnedRequest> _parser = new pb::MessageParser<SetMessagePinnedRequest>(() => new SetMessagePinnedRequest());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SetMessagePinnedRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bgs.Protocol.Club.V1.Client.ClubRequestReflection.Descriptor.MessageTypes[69]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetMessagePinnedRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetMessagePinnedRequest(SetMessagePinnedRequest other) : this() {
      _hasBits0 = other._hasBits0;
      agentId_ = other.HasAgentId ? other.agentId_.Clone() : null;
      clubId_ = other.clubId_;
      streamId_ = other.streamId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetMessagePinnedRequest Clone() {
      return new SetMessagePinnedRequest(this);
    }

    /// <summary>Field number for the "agent_id" field.</summary>
    public const int AgentIdFieldNumber = 1;
    private global::Bgs.Protocol.Club.V1.MemberId agentId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bgs.Protocol.Club.V1.MemberId AgentId {
      get { return agentId_; }
      set {
        agentId_ = value;
      }
    }
    /// <summary>Gets whether the agent_id field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasAgentId {
      get { return agentId_ != null; }
    }
    /// <summary>Clears the value of the agent_id field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearAgentId() {
      agentId_ = null;
    }

    /// <summary>Field number for the "club_id" field.</summary>
    public const int ClubIdFieldNumber = 2;
    private readonly static ulong ClubIdDefaultValue = 0UL;

    private ulong clubId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong ClubId {
      get { if ((_hasBits0 & 1) != 0) { return clubId_; } else { return ClubIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        clubId_ = value;
      }
    }
    /// <summary>Gets whether the "club_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasClubId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "club_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearClubId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "stream_id" field.</summary>
    public const int StreamIdFieldNumber = 3;
    private readonly static ulong StreamIdDefaultValue = 0UL;

    private ulong streamId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong StreamId {
      get { if ((_hasBits0 & 2) != 0) { return streamId_; } else { return StreamIdDefaultValue; } }
      set {
        _hasBits0 |= 2;
        streamId_ = value;
      }
    }
    /// <summary>Gets whether the "stream_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasStreamId {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "stream_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearStreamId() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SetMessagePinnedRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SetMessagePinnedRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(AgentId, other.AgentId)) return false;
      if (ClubId != other.ClubId) return false;
      if (StreamId != other.StreamId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasAgentId) hash ^= AgentId.GetHashCode();
      if (HasClubId) hash ^= ClubId.GetHashCode();
      if (HasStreamId) hash ^= StreamId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasAgentId) {
        output.WriteRawTag(10);
        output.WriteMessage(AgentId);
      }
      if (HasClubId) {
        output.WriteRawTag(16);
        output.WriteUInt64(ClubId);
      }
      if (HasStreamId) {
        output.WriteRawTag(24);
        output.WriteUInt64(StreamId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasAgentId) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AgentId);
      }
      if (HasClubId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(ClubId);
      }
      if (HasStreamId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(StreamId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SetMessagePinnedRequest other) {
      if (other == null) {
        return;
      }
      if (other.HasAgentId) {
        if (!HasAgentId) {
          AgentId = new global::Bgs.Protocol.Club.V1.MemberId();
        }
        AgentId.MergeFrom(other.AgentId);
      }
      if (other.HasClubId) {
        ClubId = other.ClubId;
      }
      if (other.HasStreamId) {
        StreamId = other.StreamId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (!HasAgentId) {
              AgentId = new global::Bgs.Protocol.Club.V1.MemberId();
            }
            input.ReadMessage(AgentId);
            break;
          }
          case 16: {
            ClubId = input.ReadUInt64();
            break;
          }
          case 24: {
            StreamId = input.ReadUInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class SetTypingIndicatorRequest : pb::IMessage<SetTypingIndicatorRequest> {
    private static readonly pb::MessageParser<SetTypingIndicatorRequest> _parser = new pb::MessageParser<SetTypingIndicatorRequest>(() => new SetTypingIndicatorRequest());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SetTypingIndicatorRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bgs.Protocol.Club.V1.Client.ClubRequestReflection.Descriptor.MessageTypes[70]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetTypingIndicatorRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetTypingIndicatorRequest(SetTypingIndicatorRequest other) : this() {
      _hasBits0 = other._hasBits0;
      agentId_ = other.HasAgentId ? other.agentId_.Clone() : null;
      clubId_ = other.clubId_;
      streamId_ = other.streamId_;
      indicator_ = other.indicator_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetTypingIndicatorRequest Clone() {
      return new SetTypingIndicatorRequest(this);
    }

    /// <summary>Field number for the "agent_id" field.</summary>
    public const int AgentIdFieldNumber = 1;
    private global::Bgs.Protocol.Club.V1.MemberId agentId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bgs.Protocol.Club.V1.MemberId AgentId {
      get { return agentId_; }
      set {
        agentId_ = value;
      }
    }
    /// <summary>Gets whether the agent_id field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasAgentId {
      get { return agentId_ != null; }
    }
    /// <summary>Clears the value of the agent_id field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearAgentId() {
      agentId_ = null;
    }

    /// <summary>Field number for the "club_id" field.</summary>
    public const int ClubIdFieldNumber = 2;
    private readonly static ulong ClubIdDefaultValue = 0UL;

    private ulong clubId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong ClubId {
      get { if ((_hasBits0 & 1) != 0) { return clubId_; } else { return ClubIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        clubId_ = value;
      }
    }
    /// <summary>Gets whether the "club_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasClubId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "club_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearClubId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "stream_id" field.</summary>
    public const int StreamIdFieldNumber = 3;
    private readonly static ulong StreamIdDefaultValue = 0UL;

    private ulong streamId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong StreamId {
      get { if ((_hasBits0 & 2) != 0) { return streamId_; } else { return StreamIdDefaultValue; } }
      set {
        _hasBits0 |= 2;
        streamId_ = value;
      }
    }
    /// <summary>Gets whether the "stream_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasStreamId {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "stream_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearStreamId() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "indicator" field.</summary>
    public const int IndicatorFieldNumber = 4;
    private readonly static global::Bgs.Protocol.TypingIndicator IndicatorDefaultValue = global::Bgs.Protocol.TypingIndicator.TypingStart;

    private global::Bgs.Protocol.TypingIndicator indicator_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bgs.Protocol.TypingIndicator Indicator {
      get { if ((_hasBits0 & 4) != 0) { return indicator_; } else { return IndicatorDefaultValue; } }
      set {
        _hasBits0 |= 4;
        indicator_ = value;
      }
    }
    /// <summary>Gets whether the "indicator" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasIndicator {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "indicator" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearIndicator() {
      _hasBits0 &= ~4;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SetTypingIndicatorRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SetTypingIndicatorRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(AgentId, other.AgentId)) return false;
      if (ClubId != other.ClubId) return false;
      if (StreamId != other.StreamId) return false;
      if (Indicator != other.Indicator) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasAgentId) hash ^= AgentId.GetHashCode();
      if (HasClubId) hash ^= ClubId.GetHashCode();
      if (HasStreamId) hash ^= StreamId.GetHashCode();
      if (HasIndicator) hash ^= Indicator.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasAgentId) {
        output.WriteRawTag(10);
        output.WriteMessage(AgentId);
      }
      if (HasClubId) {
        output.WriteRawTag(16);
        output.WriteUInt64(ClubId);
      }
      if (HasStreamId) {
        output.WriteRawTag(24);
        output.WriteUInt64(StreamId);
      }
      if (HasIndicator) {
        output.WriteRawTag(32);
        output.WriteEnum((int) Indicator);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasAgentId) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AgentId);
      }
      if (HasClubId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(ClubId);
      }
      if (HasStreamId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(StreamId);
      }
      if (HasIndicator) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Indicator);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SetTypingIndicatorRequest other) {
      if (other == null) {
        return;
      }
      if (other.HasAgentId) {
        if (!HasAgentId) {
          AgentId = new global::Bgs.Protocol.Club.V1.MemberId();
        }
        AgentId.MergeFrom(other.AgentId);
      }
      if (other.HasClubId) {
        ClubId = other.ClubId;
      }
      if (other.HasStreamId) {
        StreamId = other.StreamId;
      }
      if (other.HasIndicator) {
        Indicator = other.Indicator;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (!HasAgentId) {
              AgentId = new global::Bgs.Protocol.Club.V1.MemberId();
            }
            input.ReadMessage(AgentId);
            break;
          }
          case 16: {
            ClubId = input.ReadUInt64();
            break;
          }
          case 24: {
            StreamId = input.ReadUInt64();
            break;
          }
          case 32: {
            Indicator = (global::Bgs.Protocol.TypingIndicator) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  public sealed partial class AdvanceStreamViewTimeRequest : pb::IMessage<AdvanceStreamViewTimeRequest> {
    private static readonly pb::MessageParser<AdvanceStreamViewTimeRequest> _parser = new pb::MessageParser<AdvanceStreamViewTimeRequest>(() => new AdvanceStreamViewTimeRequest());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AdvanceStreamViewTimeRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bgs.Protocol.Club.V1.Client.ClubRequestReflection.Descriptor.MessageTypes[71]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AdvanceStreamViewTimeRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AdvanceStreamViewTimeRequest(AdvanceStreamViewTimeRequest other) : this() {
      _hasBits0 = other._hasBits0;
      agentId_ = other.HasAgentId ? other.agentId_.Clone() : null;
      clubId_ = other.clubId_;
      streamIdDeprecated_ = other.streamIdDeprecated_;
      streamId_ = other.streamId_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AdvanceStreamViewTimeRequest Clone() {
      return new AdvanceStreamViewTimeRequest(this);
    }

    /// <summary>Field number for the "agent_id" field.</summary>
    public const int AgentIdFieldNumber = 1;
    private global::Bgs.Protocol.Club.V1.MemberId agentId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bgs.Protocol.Club.V1.MemberId AgentId {
      get { return agentId_; }
      set {
        agentId_ = value;
      }
    }
    /// <summary>Gets whether the agent_id field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasAgentId {
      get { return agentId_ != null; }
    }
    /// <summary>Clears the value of the agent_id field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearAgentId() {
      agentId_ = null;
    }

    /// <summary>Field number for the "club_id" field.</summary>
    public const int ClubIdFieldNumber = 2;
    private readonly static ulong ClubIdDefaultValue = 0UL;

    private ulong clubId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong ClubId {
      get { if ((_hasBits0 & 1) != 0) { return clubId_; } else { return ClubIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        clubId_ = value;
      }
    }
    /// <summary>Gets whether the "club_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasClubId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "club_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearClubId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "stream_id_deprecated" field.</summary>
    public const int StreamIdDeprecatedFieldNumber = 3;
    private readonly static ulong StreamIdDeprecatedDefaultValue = 0UL;

    private ulong streamIdDeprecated_;
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong StreamIdDeprecated {
      get { if ((_hasBits0 & 2) != 0) { return streamIdDeprecated_; } else { return StreamIdDeprecatedDefaultValue; } }
      set {
        _hasBits0 |= 2;
        streamIdDeprecated_ = value;
      }
    }
    /// <summary>Gets whether the "stream_id_deprecated" field is set</summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasStreamIdDeprecated {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "stream_id_deprecated" field</summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearStreamIdDeprecated() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "stream_id" field.</summary>
    public const int StreamIdFieldNumber = 4;
    private static readonly pb::FieldCodec<ulong> _repeated_streamId_codec
        = pb::FieldCodec.ForUInt64(34);
    private readonly pbc::RepeatedField<ulong> streamId_ = new pbc::RepeatedField<ulong>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<ulong> StreamId {
      get { return streamId_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AdvanceStreamViewTimeRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AdvanceStreamViewTimeRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(AgentId, other.AgentId)) return false;
      if (ClubId != other.ClubId) return false;
      if (StreamIdDeprecated != other.StreamIdDeprecated) return false;
      if(!streamId_.Equals(other.streamId_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasAgentId) hash ^= AgentId.GetHashCode();
      if (HasClubId) hash ^= ClubId.GetHashCode();
      if (HasStreamIdDeprecated) hash ^= StreamIdDeprecated.GetHashCode();
      hash ^= streamId_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasAgentId) {
        output.WriteRawTag(10);
        output.WriteMessage(AgentId);
      }
      if (HasClubId) {
        output.WriteRawTag(16);
        output.WriteUInt64(ClubId);
      }
      if (HasStreamIdDeprecated) {
        output.WriteRawTag(24);
        output.WriteUInt64(StreamIdDeprecated);
      }
      streamId_.WriteTo(output, _repeated_streamId_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasAgentId) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AgentId);
      }
      if (HasClubId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(ClubId);
      }
      if (HasStreamIdDeprecated) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(StreamIdDeprecated);
      }
      size += streamId_.CalculateSize(_repeated_streamId_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AdvanceStreamViewTimeRequest other) {
      if (other == null) {
        return;
      }
      if (other.HasAgentId) {
        if (!HasAgentId) {
          AgentId = new global::Bgs.Protocol.Club.V1.MemberId();
        }
        AgentId.MergeFrom(other.AgentId);
      }
      if (other.HasClubId) {
        ClubId = other.ClubId;
      }
      if (other.HasStreamIdDeprecated) {
        StreamIdDeprecated = other.StreamIdDeprecated;
      }
      streamId_.Add(other.streamId_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (!HasAgentId) {
              AgentId = new global::Bgs.Protocol.Club.V1.MemberId();
            }
            input.ReadMessage(AgentId);
            break;
          }
          case 16: {
            ClubId = input.ReadUInt64();
            break;
          }
          case 24: {
            StreamIdDeprecated = input.ReadUInt64();
            break;
          }
          case 34:
          case 32: {
            streamId_.AddEntriesFrom(input, _repeated_streamId_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class AdvanceStreamMentionViewTimeRequest : pb::IMessage<AdvanceStreamMentionViewTimeRequest> {
    private static readonly pb::MessageParser<AdvanceStreamMentionViewTimeRequest> _parser = new pb::MessageParser<AdvanceStreamMentionViewTimeRequest>(() => new AdvanceStreamMentionViewTimeRequest());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AdvanceStreamMentionViewTimeRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bgs.Protocol.Club.V1.Client.ClubRequestReflection.Descriptor.MessageTypes[72]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AdvanceStreamMentionViewTimeRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AdvanceStreamMentionViewTimeRequest(AdvanceStreamMentionViewTimeRequest other) : this() {
      _hasBits0 = other._hasBits0;
      agentId_ = other.HasAgentId ? other.agentId_.Clone() : null;
      clubId_ = other.clubId_;
      streamId_ = other.streamId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AdvanceStreamMentionViewTimeRequest Clone() {
      return new AdvanceStreamMentionViewTimeRequest(this);
    }

    /// <summary>Field number for the "agent_id" field.</summary>
    public const int AgentIdFieldNumber = 1;
    private global::Bgs.Protocol.Club.V1.MemberId agentId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bgs.Protocol.Club.V1.MemberId AgentId {
      get { return agentId_; }
      set {
        agentId_ = value;
      }
    }
    /// <summary>Gets whether the agent_id field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasAgentId {
      get { return agentId_ != null; }
    }
    /// <summary>Clears the value of the agent_id field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearAgentId() {
      agentId_ = null;
    }

    /// <summary>Field number for the "club_id" field.</summary>
    public const int ClubIdFieldNumber = 2;
    private readonly static ulong ClubIdDefaultValue = 0UL;

    private ulong clubId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong ClubId {
      get { if ((_hasBits0 & 1) != 0) { return clubId_; } else { return ClubIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        clubId_ = value;
      }
    }
    /// <summary>Gets whether the "club_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasClubId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "club_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearClubId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "stream_id" field.</summary>
    public const int StreamIdFieldNumber = 3;
    private readonly static ulong StreamIdDefaultValue = 0UL;

    private ulong streamId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong StreamId {
      get { if ((_hasBits0 & 2) != 0) { return streamId_; } else { return StreamIdDefaultValue; } }
      set {
        _hasBits0 |= 2;
        streamId_ = value;
      }
    }
    /// <summary>Gets whether the "stream_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasStreamId {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "stream_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearStreamId() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AdvanceStreamMentionViewTimeRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AdvanceStreamMentionViewTimeRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(AgentId, other.AgentId)) return false;
      if (ClubId != other.ClubId) return false;
      if (StreamId != other.StreamId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasAgentId) hash ^= AgentId.GetHashCode();
      if (HasClubId) hash ^= ClubId.GetHashCode();
      if (HasStreamId) hash ^= StreamId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasAgentId) {
        output.WriteRawTag(10);
        output.WriteMessage(AgentId);
      }
      if (HasClubId) {
        output.WriteRawTag(16);
        output.WriteUInt64(ClubId);
      }
      if (HasStreamId) {
        output.WriteRawTag(24);
        output.WriteUInt64(StreamId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasAgentId) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AgentId);
      }
      if (HasClubId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(ClubId);
      }
      if (HasStreamId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(StreamId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AdvanceStreamMentionViewTimeRequest other) {
      if (other == null) {
        return;
      }
      if (other.HasAgentId) {
        if (!HasAgentId) {
          AgentId = new global::Bgs.Protocol.Club.V1.MemberId();
        }
        AgentId.MergeFrom(other.AgentId);
      }
      if (other.HasClubId) {
        ClubId = other.ClubId;
      }
      if (other.HasStreamId) {
        StreamId = other.StreamId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (!HasAgentId) {
              AgentId = new global::Bgs.Protocol.Club.V1.MemberId();
            }
            input.ReadMessage(AgentId);
            break;
          }
          case 16: {
            ClubId = input.ReadUInt64();
            break;
          }
          case 24: {
            StreamId = input.ReadUInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class AdvanceActivityViewTimeRequest : pb::IMessage<AdvanceActivityViewTimeRequest> {
    private static readonly pb::MessageParser<AdvanceActivityViewTimeRequest> _parser = new pb::MessageParser<AdvanceActivityViewTimeRequest>(() => new AdvanceActivityViewTimeRequest());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AdvanceActivityViewTimeRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bgs.Protocol.Club.V1.Client.ClubRequestReflection.Descriptor.MessageTypes[73]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AdvanceActivityViewTimeRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AdvanceActivityViewTimeRequest(AdvanceActivityViewTimeRequest other) : this() {
      _hasBits0 = other._hasBits0;
      agentId_ = other.HasAgentId ? other.agentId_.Clone() : null;
      clubId_ = other.clubId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AdvanceActivityViewTimeRequest Clone() {
      return new AdvanceActivityViewTimeRequest(this);
    }

    /// <summary>Field number for the "agent_id" field.</summary>
    public const int AgentIdFieldNumber = 1;
    private global::Bgs.Protocol.Club.V1.MemberId agentId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bgs.Protocol.Club.V1.MemberId AgentId {
      get { return agentId_; }
      set {
        agentId_ = value;
      }
    }
    /// <summary>Gets whether the agent_id field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasAgentId {
      get { return agentId_ != null; }
    }
    /// <summary>Clears the value of the agent_id field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearAgentId() {
      agentId_ = null;
    }

    /// <summary>Field number for the "club_id" field.</summary>
    public const int ClubIdFieldNumber = 2;
    private readonly static ulong ClubIdDefaultValue = 0UL;

    private ulong clubId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong ClubId {
      get { if ((_hasBits0 & 1) != 0) { return clubId_; } else { return ClubIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        clubId_ = value;
      }
    }
    /// <summary>Gets whether the "club_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasClubId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "club_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearClubId() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AdvanceActivityViewTimeRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AdvanceActivityViewTimeRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(AgentId, other.AgentId)) return false;
      if (ClubId != other.ClubId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasAgentId) hash ^= AgentId.GetHashCode();
      if (HasClubId) hash ^= ClubId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasAgentId) {
        output.WriteRawTag(10);
        output.WriteMessage(AgentId);
      }
      if (HasClubId) {
        output.WriteRawTag(16);
        output.WriteUInt64(ClubId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasAgentId) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AgentId);
      }
      if (HasClubId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(ClubId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AdvanceActivityViewTimeRequest other) {
      if (other == null) {
        return;
      }
      if (other.HasAgentId) {
        if (!HasAgentId) {
          AgentId = new global::Bgs.Protocol.Club.V1.MemberId();
        }
        AgentId.MergeFrom(other.AgentId);
      }
      if (other.HasClubId) {
        ClubId = other.ClubId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (!HasAgentId) {
              AgentId = new global::Bgs.Protocol.Club.V1.MemberId();
            }
            input.ReadMessage(AgentId);
            break;
          }
          case 16: {
            ClubId = input.ReadUInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetStreamHistoryRequest : pb::IMessage<GetStreamHistoryRequest> {
    private static readonly pb::MessageParser<GetStreamHistoryRequest> _parser = new pb::MessageParser<GetStreamHistoryRequest>(() => new GetStreamHistoryRequest());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetStreamHistoryRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bgs.Protocol.Club.V1.Client.ClubRequestReflection.Descriptor.MessageTypes[74]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetStreamHistoryRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetStreamHistoryRequest(GetStreamHistoryRequest other) : this() {
      _hasBits0 = other._hasBits0;
      agentId_ = other.HasAgentId ? other.agentId_.Clone() : null;
      clubId_ = other.clubId_;
      streamId_ = other.streamId_;
      options_ = other.HasOptions ? other.options_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetStreamHistoryRequest Clone() {
      return new GetStreamHistoryRequest(this);
    }

    /// <summary>Field number for the "agent_id" field.</summary>
    public const int AgentIdFieldNumber = 1;
    private global::Bgs.Protocol.Club.V1.MemberId agentId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bgs.Protocol.Club.V1.MemberId AgentId {
      get { return agentId_; }
      set {
        agentId_ = value;
      }
    }
    /// <summary>Gets whether the agent_id field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasAgentId {
      get { return agentId_ != null; }
    }
    /// <summary>Clears the value of the agent_id field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearAgentId() {
      agentId_ = null;
    }

    /// <summary>Field number for the "club_id" field.</summary>
    public const int ClubIdFieldNumber = 2;
    private readonly static ulong ClubIdDefaultValue = 0UL;

    private ulong clubId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong ClubId {
      get { if ((_hasBits0 & 1) != 0) { return clubId_; } else { return ClubIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        clubId_ = value;
      }
    }
    /// <summary>Gets whether the "club_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasClubId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "club_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearClubId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "stream_id" field.</summary>
    public const int StreamIdFieldNumber = 3;
    private readonly static ulong StreamIdDefaultValue = 0UL;

    private ulong streamId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong StreamId {
      get { if ((_hasBits0 & 2) != 0) { return streamId_; } else { return StreamIdDefaultValue; } }
      set {
        _hasBits0 |= 2;
        streamId_ = value;
      }
    }
    /// <summary>Gets whether the "stream_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasStreamId {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "stream_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearStreamId() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "options" field.</summary>
    public const int OptionsFieldNumber = 4;
    private global::Bgs.Protocol.GetEventOptions options_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bgs.Protocol.GetEventOptions Options {
      get { return options_; }
      set {
        options_ = value;
      }
    }
    /// <summary>Gets whether the options field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasOptions {
      get { return options_ != null; }
    }
    /// <summary>Clears the value of the options field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearOptions() {
      options_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetStreamHistoryRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetStreamHistoryRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(AgentId, other.AgentId)) return false;
      if (ClubId != other.ClubId) return false;
      if (StreamId != other.StreamId) return false;
      if (!object.Equals(Options, other.Options)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasAgentId) hash ^= AgentId.GetHashCode();
      if (HasClubId) hash ^= ClubId.GetHashCode();
      if (HasStreamId) hash ^= StreamId.GetHashCode();
      if (HasOptions) hash ^= Options.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasAgentId) {
        output.WriteRawTag(10);
        output.WriteMessage(AgentId);
      }
      if (HasClubId) {
        output.WriteRawTag(16);
        output.WriteUInt64(ClubId);
      }
      if (HasStreamId) {
        output.WriteRawTag(24);
        output.WriteUInt64(StreamId);
      }
      if (HasOptions) {
        output.WriteRawTag(34);
        output.WriteMessage(Options);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasAgentId) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AgentId);
      }
      if (HasClubId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(ClubId);
      }
      if (HasStreamId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(StreamId);
      }
      if (HasOptions) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Options);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetStreamHistoryRequest other) {
      if (other == null) {
        return;
      }
      if (other.HasAgentId) {
        if (!HasAgentId) {
          AgentId = new global::Bgs.Protocol.Club.V1.MemberId();
        }
        AgentId.MergeFrom(other.AgentId);
      }
      if (other.HasClubId) {
        ClubId = other.ClubId;
      }
      if (other.HasStreamId) {
        StreamId = other.StreamId;
      }
      if (other.HasOptions) {
        if (!HasOptions) {
          Options = new global::Bgs.Protocol.GetEventOptions();
        }
        Options.MergeFrom(other.Options);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (!HasAgentId) {
              AgentId = new global::Bgs.Protocol.Club.V1.MemberId();
            }
            input.ReadMessage(AgentId);
            break;
          }
          case 16: {
            ClubId = input.ReadUInt64();
            break;
          }
          case 24: {
            StreamId = input.ReadUInt64();
            break;
          }
          case 34: {
            if (!HasOptions) {
              Options = new global::Bgs.Protocol.GetEventOptions();
            }
            input.ReadMessage(Options);
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetStreamHistoryResponse : pb::IMessage<GetStreamHistoryResponse> {
    private static readonly pb::MessageParser<GetStreamHistoryResponse> _parser = new pb::MessageParser<GetStreamHistoryResponse>(() => new GetStreamHistoryResponse());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetStreamHistoryResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bgs.Protocol.Club.V1.Client.ClubRequestReflection.Descriptor.MessageTypes[75]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetStreamHistoryResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetStreamHistoryResponse(GetStreamHistoryResponse other) : this() {
      _hasBits0 = other._hasBits0;
      message_ = other.message_.Clone();
      continuation_ = other.continuation_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetStreamHistoryResponse Clone() {
      return new GetStreamHistoryResponse(this);
    }

    /// <summary>Field number for the "message" field.</summary>
    public const int MessageFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Bgs.Protocol.Club.V1.Client.StreamMessage> _repeated_message_codec
        = pb::FieldCodec.ForMessage(10, global::Bgs.Protocol.Club.V1.Client.StreamMessage.Parser);
    private readonly pbc::RepeatedField<global::Bgs.Protocol.Club.V1.Client.StreamMessage> message_ = new pbc::RepeatedField<global::Bgs.Protocol.Club.V1.Client.StreamMessage>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Bgs.Protocol.Club.V1.Client.StreamMessage> Message {
      get { return message_; }
    }

    /// <summary>Field number for the "continuation" field.</summary>
    public const int ContinuationFieldNumber = 2;
    private readonly static ulong ContinuationDefaultValue = 0UL;

    private ulong continuation_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong Continuation {
      get { if ((_hasBits0 & 1) != 0) { return continuation_; } else { return ContinuationDefaultValue; } }
      set {
        _hasBits0 |= 1;
        continuation_ = value;
      }
    }
    /// <summary>Gets whether the "continuation" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasContinuation {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "continuation" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearContinuation() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetStreamHistoryResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetStreamHistoryResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!message_.Equals(other.message_)) return false;
      if (Continuation != other.Continuation) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= message_.GetHashCode();
      if (HasContinuation) hash ^= Continuation.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      message_.WriteTo(output, _repeated_message_codec);
      if (HasContinuation) {
        output.WriteRawTag(16);
        output.WriteUInt64(Continuation);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += message_.CalculateSize(_repeated_message_codec);
      if (HasContinuation) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Continuation);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetStreamHistoryResponse other) {
      if (other == null) {
        return;
      }
      message_.Add(other.message_);
      if (other.HasContinuation) {
        Continuation = other.Continuation;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            message_.AddEntriesFrom(input, _repeated_message_codec);
            break;
          }
          case 16: {
            Continuation = input.ReadUInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetStreamMessageRequest : pb::IMessage<GetStreamMessageRequest> {
    private static readonly pb::MessageParser<GetStreamMessageRequest> _parser = new pb::MessageParser<GetStreamMessageRequest>(() => new GetStreamMessageRequest());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetStreamMessageRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bgs.Protocol.Club.V1.Client.ClubRequestReflection.Descriptor.MessageTypes[76]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetStreamMessageRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetStreamMessageRequest(GetStreamMessageRequest other) : this() {
      _hasBits0 = other._hasBits0;
      agentId_ = other.HasAgentId ? other.agentId_.Clone() : null;
      clubId_ = other.clubId_;
      streamId_ = other.streamId_;
      messageId_ = other.HasMessageId ? other.messageId_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetStreamMessageRequest Clone() {
      return new GetStreamMessageRequest(this);
    }

    /// <summary>Field number for the "agent_id" field.</summary>
    public const int AgentIdFieldNumber = 1;
    private global::Bgs.Protocol.Club.V1.MemberId agentId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bgs.Protocol.Club.V1.MemberId AgentId {
      get { return agentId_; }
      set {
        agentId_ = value;
      }
    }
    /// <summary>Gets whether the agent_id field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasAgentId {
      get { return agentId_ != null; }
    }
    /// <summary>Clears the value of the agent_id field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearAgentId() {
      agentId_ = null;
    }

    /// <summary>Field number for the "club_id" field.</summary>
    public const int ClubIdFieldNumber = 2;
    private readonly static ulong ClubIdDefaultValue = 0UL;

    private ulong clubId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong ClubId {
      get { if ((_hasBits0 & 1) != 0) { return clubId_; } else { return ClubIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        clubId_ = value;
      }
    }
    /// <summary>Gets whether the "club_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasClubId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "club_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearClubId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "stream_id" field.</summary>
    public const int StreamIdFieldNumber = 3;
    private readonly static ulong StreamIdDefaultValue = 0UL;

    private ulong streamId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong StreamId {
      get { if ((_hasBits0 & 2) != 0) { return streamId_; } else { return StreamIdDefaultValue; } }
      set {
        _hasBits0 |= 2;
        streamId_ = value;
      }
    }
    /// <summary>Gets whether the "stream_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasStreamId {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "stream_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearStreamId() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "message_id" field.</summary>
    public const int MessageIdFieldNumber = 4;
    private global::Bgs.Protocol.MessageId messageId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bgs.Protocol.MessageId MessageId {
      get { return messageId_; }
      set {
        messageId_ = value;
      }
    }
    /// <summary>Gets whether the message_id field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasMessageId {
      get { return messageId_ != null; }
    }
    /// <summary>Clears the value of the message_id field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearMessageId() {
      messageId_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetStreamMessageRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetStreamMessageRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(AgentId, other.AgentId)) return false;
      if (ClubId != other.ClubId) return false;
      if (StreamId != other.StreamId) return false;
      if (!object.Equals(MessageId, other.MessageId)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasAgentId) hash ^= AgentId.GetHashCode();
      if (HasClubId) hash ^= ClubId.GetHashCode();
      if (HasStreamId) hash ^= StreamId.GetHashCode();
      if (HasMessageId) hash ^= MessageId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasAgentId) {
        output.WriteRawTag(10);
        output.WriteMessage(AgentId);
      }
      if (HasClubId) {
        output.WriteRawTag(16);
        output.WriteUInt64(ClubId);
      }
      if (HasStreamId) {
        output.WriteRawTag(24);
        output.WriteUInt64(StreamId);
      }
      if (HasMessageId) {
        output.WriteRawTag(34);
        output.WriteMessage(MessageId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasAgentId) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AgentId);
      }
      if (HasClubId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(ClubId);
      }
      if (HasStreamId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(StreamId);
      }
      if (HasMessageId) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(MessageId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetStreamMessageRequest other) {
      if (other == null) {
        return;
      }
      if (other.HasAgentId) {
        if (!HasAgentId) {
          AgentId = new global::Bgs.Protocol.Club.V1.MemberId();
        }
        AgentId.MergeFrom(other.AgentId);
      }
      if (other.HasClubId) {
        ClubId = other.ClubId;
      }
      if (other.HasStreamId) {
        StreamId = other.StreamId;
      }
      if (other.HasMessageId) {
        if (!HasMessageId) {
          MessageId = new global::Bgs.Protocol.MessageId();
        }
        MessageId.MergeFrom(other.MessageId);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (!HasAgentId) {
              AgentId = new global::Bgs.Protocol.Club.V1.MemberId();
            }
            input.ReadMessage(AgentId);
            break;
          }
          case 16: {
            ClubId = input.ReadUInt64();
            break;
          }
          case 24: {
            StreamId = input.ReadUInt64();
            break;
          }
          case 34: {
            if (!HasMessageId) {
              MessageId = new global::Bgs.Protocol.MessageId();
            }
            input.ReadMessage(MessageId);
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetStreamMessageResponse : pb::IMessage<GetStreamMessageResponse> {
    private static readonly pb::MessageParser<GetStreamMessageResponse> _parser = new pb::MessageParser<GetStreamMessageResponse>(() => new GetStreamMessageResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetStreamMessageResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bgs.Protocol.Club.V1.Client.ClubRequestReflection.Descriptor.MessageTypes[77]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetStreamMessageResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetStreamMessageResponse(GetStreamMessageResponse other) : this() {
      message_ = other.HasMessage ? other.message_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetStreamMessageResponse Clone() {
      return new GetStreamMessageResponse(this);
    }

    /// <summary>Field number for the "message" field.</summary>
    public const int MessageFieldNumber = 1;
    private global::Bgs.Protocol.Club.V1.Client.StreamMessage message_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bgs.Protocol.Club.V1.Client.StreamMessage Message {
      get { return message_; }
      set {
        message_ = value;
      }
    }
    /// <summary>Gets whether the message field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasMessage {
      get { return message_ != null; }
    }
    /// <summary>Clears the value of the message field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearMessage() {
      message_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetStreamMessageResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetStreamMessageResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Message, other.Message)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasMessage) hash ^= Message.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasMessage) {
        output.WriteRawTag(10);
        output.WriteMessage(Message);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasMessage) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Message);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetStreamMessageResponse other) {
      if (other == null) {
        return;
      }
      if (other.HasMessage) {
        if (!HasMessage) {
          Message = new global::Bgs.Protocol.Club.V1.Client.StreamMessage();
        }
        Message.MergeFrom(other.Message);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (!HasMessage) {
              Message = new global::Bgs.Protocol.Club.V1.Client.StreamMessage();
            }
            input.ReadMessage(Message);
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetClubActivityRequest : pb::IMessage<GetClubActivityRequest> {
    private static readonly pb::MessageParser<GetClubActivityRequest> _parser = new pb::MessageParser<GetClubActivityRequest>(() => new GetClubActivityRequest());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetClubActivityRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bgs.Protocol.Club.V1.Client.ClubRequestReflection.Descriptor.MessageTypes[78]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetClubActivityRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetClubActivityRequest(GetClubActivityRequest other) : this() {
      _hasBits0 = other._hasBits0;
      agentId_ = other.HasAgentId ? other.agentId_.Clone() : null;
      clubId_ = other.clubId_;
      options_ = other.HasOptions ? other.options_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetClubActivityRequest Clone() {
      return new GetClubActivityRequest(this);
    }

    /// <summary>Field number for the "agent_id" field.</summary>
    public const int AgentIdFieldNumber = 1;
    private global::Bgs.Protocol.Club.V1.MemberId agentId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bgs.Protocol.Club.V1.MemberId AgentId {
      get { return agentId_; }
      set {
        agentId_ = value;
      }
    }
    /// <summary>Gets whether the agent_id field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasAgentId {
      get { return agentId_ != null; }
    }
    /// <summary>Clears the value of the agent_id field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearAgentId() {
      agentId_ = null;
    }

    /// <summary>Field number for the "club_id" field.</summary>
    public const int ClubIdFieldNumber = 2;
    private readonly static ulong ClubIdDefaultValue = 0UL;

    private ulong clubId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong ClubId {
      get { if ((_hasBits0 & 1) != 0) { return clubId_; } else { return ClubIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        clubId_ = value;
      }
    }
    /// <summary>Gets whether the "club_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasClubId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "club_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearClubId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "options" field.</summary>
    public const int OptionsFieldNumber = 3;
    private global::Bgs.Protocol.GetEventOptions options_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bgs.Protocol.GetEventOptions Options {
      get { return options_; }
      set {
        options_ = value;
      }
    }
    /// <summary>Gets whether the options field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasOptions {
      get { return options_ != null; }
    }
    /// <summary>Clears the value of the options field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearOptions() {
      options_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetClubActivityRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetClubActivityRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(AgentId, other.AgentId)) return false;
      if (ClubId != other.ClubId) return false;
      if (!object.Equals(Options, other.Options)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasAgentId) hash ^= AgentId.GetHashCode();
      if (HasClubId) hash ^= ClubId.GetHashCode();
      if (HasOptions) hash ^= Options.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasAgentId) {
        output.WriteRawTag(10);
        output.WriteMessage(AgentId);
      }
      if (HasClubId) {
        output.WriteRawTag(16);
        output.WriteUInt64(ClubId);
      }
      if (HasOptions) {
        output.WriteRawTag(26);
        output.WriteMessage(Options);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasAgentId) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AgentId);
      }
      if (HasClubId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(ClubId);
      }
      if (HasOptions) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Options);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetClubActivityRequest other) {
      if (other == null) {
        return;
      }
      if (other.HasAgentId) {
        if (!HasAgentId) {
          AgentId = new global::Bgs.Protocol.Club.V1.MemberId();
        }
        AgentId.MergeFrom(other.AgentId);
      }
      if (other.HasClubId) {
        ClubId = other.ClubId;
      }
      if (other.HasOptions) {
        if (!HasOptions) {
          Options = new global::Bgs.Protocol.GetEventOptions();
        }
        Options.MergeFrom(other.Options);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (!HasAgentId) {
              AgentId = new global::Bgs.Protocol.Club.V1.MemberId();
            }
            input.ReadMessage(AgentId);
            break;
          }
          case 16: {
            ClubId = input.ReadUInt64();
            break;
          }
          case 26: {
            if (!HasOptions) {
              Options = new global::Bgs.Protocol.GetEventOptions();
            }
            input.ReadMessage(Options);
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetClubActivityResponse : pb::IMessage<GetClubActivityResponse> {
    private static readonly pb::MessageParser<GetClubActivityResponse> _parser = new pb::MessageParser<GetClubActivityResponse>(() => new GetClubActivityResponse());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetClubActivityResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bgs.Protocol.Club.V1.Client.ClubRequestReflection.Descriptor.MessageTypes[79]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetClubActivityResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetClubActivityResponse(GetClubActivityResponse other) : this() {
      _hasBits0 = other._hasBits0;
      continuation_ = other.continuation_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetClubActivityResponse Clone() {
      return new GetClubActivityResponse(this);
    }

    /// <summary>Field number for the "continuation" field.</summary>
    public const int ContinuationFieldNumber = 2;
    private readonly static ulong ContinuationDefaultValue = 0UL;

    private ulong continuation_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong Continuation {
      get { if ((_hasBits0 & 1) != 0) { return continuation_; } else { return ContinuationDefaultValue; } }
      set {
        _hasBits0 |= 1;
        continuation_ = value;
      }
    }
    /// <summary>Gets whether the "continuation" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasContinuation {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "continuation" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearContinuation() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetClubActivityResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetClubActivityResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Continuation != other.Continuation) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasContinuation) hash ^= Continuation.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasContinuation) {
        output.WriteRawTag(16);
        output.WriteUInt64(Continuation);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasContinuation) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Continuation);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetClubActivityResponse other) {
      if (other == null) {
        return;
      }
      if (other.HasContinuation) {
        Continuation = other.Continuation;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 16: {
            Continuation = input.ReadUInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetStreamVoiceTokenRequest : pb::IMessage<GetStreamVoiceTokenRequest> {
    private static readonly pb::MessageParser<GetStreamVoiceTokenRequest> _parser = new pb::MessageParser<GetStreamVoiceTokenRequest>(() => new GetStreamVoiceTokenRequest());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetStreamVoiceTokenRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bgs.Protocol.Club.V1.Client.ClubRequestReflection.Descriptor.MessageTypes[80]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetStreamVoiceTokenRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetStreamVoiceTokenRequest(GetStreamVoiceTokenRequest other) : this() {
      _hasBits0 = other._hasBits0;
      agentId_ = other.HasAgentId ? other.agentId_.Clone() : null;
      clubId_ = other.clubId_;
      streamId_ = other.streamId_;
      version_ = other.version_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetStreamVoiceTokenRequest Clone() {
      return new GetStreamVoiceTokenRequest(this);
    }

    /// <summary>Field number for the "agent_id" field.</summary>
    public const int AgentIdFieldNumber = 1;
    private global::Bgs.Protocol.Club.V1.MemberId agentId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bgs.Protocol.Club.V1.MemberId AgentId {
      get { return agentId_; }
      set {
        agentId_ = value;
      }
    }
    /// <summary>Gets whether the agent_id field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasAgentId {
      get { return agentId_ != null; }
    }
    /// <summary>Clears the value of the agent_id field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearAgentId() {
      agentId_ = null;
    }

    /// <summary>Field number for the "club_id" field.</summary>
    public const int ClubIdFieldNumber = 2;
    private readonly static ulong ClubIdDefaultValue = 0UL;

    private ulong clubId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong ClubId {
      get { if ((_hasBits0 & 1) != 0) { return clubId_; } else { return ClubIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        clubId_ = value;
      }
    }
    /// <summary>Gets whether the "club_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasClubId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "club_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearClubId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "stream_id" field.</summary>
    public const int StreamIdFieldNumber = 3;
    private readonly static ulong StreamIdDefaultValue = 0UL;

    private ulong streamId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong StreamId {
      get { if ((_hasBits0 & 2) != 0) { return streamId_; } else { return StreamIdDefaultValue; } }
      set {
        _hasBits0 |= 2;
        streamId_ = value;
      }
    }
    /// <summary>Gets whether the "stream_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasStreamId {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "stream_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearStreamId() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "version" field.</summary>
    public const int VersionFieldNumber = 4;
    private readonly static uint VersionDefaultValue = 0;

    private uint version_;
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Version {
      get { if ((_hasBits0 & 4) != 0) { return version_; } else { return VersionDefaultValue; } }
      set {
        _hasBits0 |= 4;
        version_ = value;
      }
    }
    /// <summary>Gets whether the "version" field is set</summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasVersion {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "version" field</summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearVersion() {
      _hasBits0 &= ~4;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetStreamVoiceTokenRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetStreamVoiceTokenRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(AgentId, other.AgentId)) return false;
      if (ClubId != other.ClubId) return false;
      if (StreamId != other.StreamId) return false;
      if (Version != other.Version) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasAgentId) hash ^= AgentId.GetHashCode();
      if (HasClubId) hash ^= ClubId.GetHashCode();
      if (HasStreamId) hash ^= StreamId.GetHashCode();
      if (HasVersion) hash ^= Version.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasAgentId) {
        output.WriteRawTag(10);
        output.WriteMessage(AgentId);
      }
      if (HasClubId) {
        output.WriteRawTag(16);
        output.WriteUInt64(ClubId);
      }
      if (HasStreamId) {
        output.WriteRawTag(24);
        output.WriteUInt64(StreamId);
      }
      if (HasVersion) {
        output.WriteRawTag(32);
        output.WriteUInt32(Version);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasAgentId) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AgentId);
      }
      if (HasClubId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(ClubId);
      }
      if (HasStreamId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(StreamId);
      }
      if (HasVersion) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Version);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetStreamVoiceTokenRequest other) {
      if (other == null) {
        return;
      }
      if (other.HasAgentId) {
        if (!HasAgentId) {
          AgentId = new global::Bgs.Protocol.Club.V1.MemberId();
        }
        AgentId.MergeFrom(other.AgentId);
      }
      if (other.HasClubId) {
        ClubId = other.ClubId;
      }
      if (other.HasStreamId) {
        StreamId = other.StreamId;
      }
      if (other.HasVersion) {
        Version = other.Version;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (!HasAgentId) {
              AgentId = new global::Bgs.Protocol.Club.V1.MemberId();
            }
            input.ReadMessage(AgentId);
            break;
          }
          case 16: {
            ClubId = input.ReadUInt64();
            break;
          }
          case 24: {
            StreamId = input.ReadUInt64();
            break;
          }
          case 32: {
            Version = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetStreamVoiceTokenResponse : pb::IMessage<GetStreamVoiceTokenResponse> {
    private static readonly pb::MessageParser<GetStreamVoiceTokenResponse> _parser = new pb::MessageParser<GetStreamVoiceTokenResponse>(() => new GetStreamVoiceTokenResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetStreamVoiceTokenResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bgs.Protocol.Club.V1.Client.ClubRequestReflection.Descriptor.MessageTypes[81]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetStreamVoiceTokenResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetStreamVoiceTokenResponse(GetStreamVoiceTokenResponse other) : this() {
      channelUri_ = other.channelUri_;
      credentials_ = other.HasCredentials ? other.credentials_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetStreamVoiceTokenResponse Clone() {
      return new GetStreamVoiceTokenResponse(this);
    }

    /// <summary>Field number for the "channel_uri" field.</summary>
    public const int ChannelUriFieldNumber = 1;
    private readonly static string ChannelUriDefaultValue = "";

    private string channelUri_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ChannelUri {
      get { return channelUri_ ?? ChannelUriDefaultValue; }
      set {
        channelUri_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "channel_uri" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasChannelUri {
      get { return channelUri_ != null; }
    }
    /// <summary>Clears the value of the "channel_uri" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearChannelUri() {
      channelUri_ = null;
    }

    /// <summary>Field number for the "credentials" field.</summary>
    public const int CredentialsFieldNumber = 2;
    private global::Bgs.Protocol.Voice.V1.VoiceCredentials credentials_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bgs.Protocol.Voice.V1.VoiceCredentials Credentials {
      get { return credentials_; }
      set {
        credentials_ = value;
      }
    }
    /// <summary>Gets whether the credentials field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasCredentials {
      get { return credentials_ != null; }
    }
    /// <summary>Clears the value of the credentials field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearCredentials() {
      credentials_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetStreamVoiceTokenResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetStreamVoiceTokenResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ChannelUri != other.ChannelUri) return false;
      if (!object.Equals(Credentials, other.Credentials)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasChannelUri) hash ^= ChannelUri.GetHashCode();
      if (HasCredentials) hash ^= Credentials.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasChannelUri) {
        output.WriteRawTag(10);
        output.WriteString(ChannelUri);
      }
      if (HasCredentials) {
        output.WriteRawTag(18);
        output.WriteMessage(Credentials);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasChannelUri) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ChannelUri);
      }
      if (HasCredentials) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Credentials);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetStreamVoiceTokenResponse other) {
      if (other == null) {
        return;
      }
      if (other.HasChannelUri) {
        ChannelUri = other.ChannelUri;
      }
      if (other.HasCredentials) {
        if (!HasCredentials) {
          Credentials = new global::Bgs.Protocol.Voice.V1.VoiceCredentials();
        }
        Credentials.MergeFrom(other.Credentials);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ChannelUri = input.ReadString();
            break;
          }
          case 18: {
            if (!HasCredentials) {
              Credentials = new global::Bgs.Protocol.Voice.V1.VoiceCredentials();
            }
            input.ReadMessage(Credentials);
            break;
          }
        }
      }
    }

  }

  public sealed partial class KickFromStreamVoiceRequest : pb::IMessage<KickFromStreamVoiceRequest> {
    private static readonly pb::MessageParser<KickFromStreamVoiceRequest> _parser = new pb::MessageParser<KickFromStreamVoiceRequest>(() => new KickFromStreamVoiceRequest());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<KickFromStreamVoiceRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bgs.Protocol.Club.V1.Client.ClubRequestReflection.Descriptor.MessageTypes[82]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public KickFromStreamVoiceRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public KickFromStreamVoiceRequest(KickFromStreamVoiceRequest other) : this() {
      _hasBits0 = other._hasBits0;
      agentId_ = other.HasAgentId ? other.agentId_.Clone() : null;
      clubId_ = other.clubId_;
      streamId_ = other.streamId_;
      targetId_ = other.HasTargetId ? other.targetId_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public KickFromStreamVoiceRequest Clone() {
      return new KickFromStreamVoiceRequest(this);
    }

    /// <summary>Field number for the "agent_id" field.</summary>
    public const int AgentIdFieldNumber = 1;
    private global::Bgs.Protocol.Club.V1.MemberId agentId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bgs.Protocol.Club.V1.MemberId AgentId {
      get { return agentId_; }
      set {
        agentId_ = value;
      }
    }
    /// <summary>Gets whether the agent_id field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasAgentId {
      get { return agentId_ != null; }
    }
    /// <summary>Clears the value of the agent_id field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearAgentId() {
      agentId_ = null;
    }

    /// <summary>Field number for the "club_id" field.</summary>
    public const int ClubIdFieldNumber = 2;
    private readonly static ulong ClubIdDefaultValue = 0UL;

    private ulong clubId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong ClubId {
      get { if ((_hasBits0 & 1) != 0) { return clubId_; } else { return ClubIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        clubId_ = value;
      }
    }
    /// <summary>Gets whether the "club_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasClubId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "club_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearClubId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "stream_id" field.</summary>
    public const int StreamIdFieldNumber = 3;
    private readonly static ulong StreamIdDefaultValue = 0UL;

    private ulong streamId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong StreamId {
      get { if ((_hasBits0 & 2) != 0) { return streamId_; } else { return StreamIdDefaultValue; } }
      set {
        _hasBits0 |= 2;
        streamId_ = value;
      }
    }
    /// <summary>Gets whether the "stream_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasStreamId {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "stream_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearStreamId() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "target_id" field.</summary>
    public const int TargetIdFieldNumber = 4;
    private global::Bgs.Protocol.Club.V1.MemberId targetId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bgs.Protocol.Club.V1.MemberId TargetId {
      get { return targetId_; }
      set {
        targetId_ = value;
      }
    }
    /// <summary>Gets whether the target_id field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasTargetId {
      get { return targetId_ != null; }
    }
    /// <summary>Clears the value of the target_id field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearTargetId() {
      targetId_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as KickFromStreamVoiceRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(KickFromStreamVoiceRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(AgentId, other.AgentId)) return false;
      if (ClubId != other.ClubId) return false;
      if (StreamId != other.StreamId) return false;
      if (!object.Equals(TargetId, other.TargetId)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasAgentId) hash ^= AgentId.GetHashCode();
      if (HasClubId) hash ^= ClubId.GetHashCode();
      if (HasStreamId) hash ^= StreamId.GetHashCode();
      if (HasTargetId) hash ^= TargetId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasAgentId) {
        output.WriteRawTag(10);
        output.WriteMessage(AgentId);
      }
      if (HasClubId) {
        output.WriteRawTag(16);
        output.WriteUInt64(ClubId);
      }
      if (HasStreamId) {
        output.WriteRawTag(24);
        output.WriteUInt64(StreamId);
      }
      if (HasTargetId) {
        output.WriteRawTag(34);
        output.WriteMessage(TargetId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasAgentId) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AgentId);
      }
      if (HasClubId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(ClubId);
      }
      if (HasStreamId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(StreamId);
      }
      if (HasTargetId) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TargetId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(KickFromStreamVoiceRequest other) {
      if (other == null) {
        return;
      }
      if (other.HasAgentId) {
        if (!HasAgentId) {
          AgentId = new global::Bgs.Protocol.Club.V1.MemberId();
        }
        AgentId.MergeFrom(other.AgentId);
      }
      if (other.HasClubId) {
        ClubId = other.ClubId;
      }
      if (other.HasStreamId) {
        StreamId = other.StreamId;
      }
      if (other.HasTargetId) {
        if (!HasTargetId) {
          TargetId = new global::Bgs.Protocol.Club.V1.MemberId();
        }
        TargetId.MergeFrom(other.TargetId);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (!HasAgentId) {
              AgentId = new global::Bgs.Protocol.Club.V1.MemberId();
            }
            input.ReadMessage(AgentId);
            break;
          }
          case 16: {
            ClubId = input.ReadUInt64();
            break;
          }
          case 24: {
            StreamId = input.ReadUInt64();
            break;
          }
          case 34: {
            if (!HasTargetId) {
              TargetId = new global::Bgs.Protocol.Club.V1.MemberId();
            }
            input.ReadMessage(TargetId);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
