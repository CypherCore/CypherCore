// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: bgs/low/pb/client/game_utilities_service.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Bgs.Protocol.GameUtilities.V1 {

  /// <summary>Holder for reflection information generated from bgs/low/pb/client/game_utilities_service.proto</summary>
  public static partial class GameUtilitiesServiceReflection {

    #region Descriptor
    /// <summary>File descriptor for bgs/low/pb/client/game_utilities_service.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static GameUtilitiesServiceReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Ci5iZ3MvbG93L3BiL2NsaWVudC9nYW1lX3V0aWxpdGllc19zZXJ2aWNlLnBy",
            "b3RvEh5iZ3MucHJvdG9jb2wuZ2FtZV91dGlsaXRpZXMudjEaJ2Jncy9sb3cv",
            "cGIvY2xpZW50L2F0dHJpYnV0ZV90eXBlcy5wcm90bxokYmdzL2xvdy9wYi9j",
            "bGllbnQvZW50aXR5X3R5cGVzLnByb3RvGixiZ3MvbG93L3BiL2NsaWVudC9n",
            "YW1lX3V0aWxpdGllc190eXBlcy5wcm90bxohYmdzL2xvdy9wYi9jbGllbnQv",
            "cnBjX3R5cGVzLnByb3RvGjdiZ3MvbG93L3BiL2NsaWVudC9nbG9iYWxfZXh0",
            "ZW5zaW9ucy9maWVsZF9vcHRpb25zLnByb3RvGjliZ3MvbG93L3BiL2NsaWVu",
            "dC9nbG9iYWxfZXh0ZW5zaW9ucy9tZXNzYWdlX29wdGlvbnMucHJvdG8aOGJn",
            "cy9sb3cvcGIvY2xpZW50L2dsb2JhbF9leHRlbnNpb25zL21ldGhvZF9vcHRp",
            "b25zLnByb3RvGjliZ3MvbG93L3BiL2NsaWVudC9nbG9iYWxfZXh0ZW5zaW9u",
            "cy9zZXJ2aWNlX29wdGlvbnMucHJvdG8i8gEKDUNsaWVudFJlcXVlc3QSKgoJ",
            "YXR0cmlidXRlGAEgAygLMhcuYmdzLnByb3RvY29sLkF0dHJpYnV0ZRIqCgph",
            "Y2NvdW50X2lkGAMgASgLMhYuYmdzLnByb3RvY29sLkVudGl0eUlkEi8KD2dh",
            "bWVfYWNjb3VudF9pZBgEIAEoCzIWLmJncy5wcm90b2NvbC5FbnRpdHlJZBIP",
            "Cgdwcm9ncmFtGAUgASgHEj8KC2NsaWVudF9pbmZvGAYgASgLMiouYmdzLnBy",
            "b3RvY29sLmdhbWVfdXRpbGl0aWVzLnYxLkNsaWVudEluZm86BoL5KwIIASI8",
            "Cg5DbGllbnRSZXNwb25zZRIqCglhdHRyaWJ1dGUYASADKAsyFy5iZ3MucHJv",
            "dG9jb2wuQXR0cmlidXRlIkwKDVNlcnZlclJlcXVlc3QSKgoJYXR0cmlidXRl",
            "GAEgAygLMhcuYmdzLnByb3RvY29sLkF0dHJpYnV0ZRIPCgdwcm9ncmFtGAIg",
            "AigHIjwKDlNlcnZlclJlc3BvbnNlEioKCWF0dHJpYnV0ZRgBIAMoCzIXLmJn",
            "cy5wcm90b2NvbC5BdHRyaWJ1dGUioAEKHVByZXNlbmNlQ2hhbm5lbENyZWF0",
            "ZWRSZXF1ZXN0EiIKAmlkGAEgAigLMhYuYmdzLnByb3RvY29sLkVudGl0eUlk",
            "Ei8KD2dhbWVfYWNjb3VudF9pZBgDIAEoCzIWLmJncy5wcm90b2NvbC5FbnRp",
            "dHlJZBIqCgphY2NvdW50X2lkGAQgASgLMhYuYmdzLnByb3RvY29sLkVudGl0",
            "eUlkImQKHUdhbWVBY2NvdW50T25saW5lTm90aWZpY2F0aW9uEi8KD2dhbWVf",
            "YWNjb3VudF9pZBgBIAIoCzIWLmJncy5wcm90b2NvbC5FbnRpdHlJZBISCgpz",
            "ZXNzaW9uX2lkGAMgASgJImUKHkdhbWVBY2NvdW50T2ZmbGluZU5vdGlmaWNh",
            "dGlvbhIvCg9nYW1lX2FjY291bnRfaWQYASACKAsyFi5iZ3MucHJvdG9jb2wu",
            "RW50aXR5SWQSEgoKc2Vzc2lvbl9pZBgDIAEoCSKSAQofR2V0QWxsVmFsdWVz",
            "Rm9yQXR0cmlidXRlUmVxdWVzdBIsCg1hdHRyaWJ1dGVfa2V5GAEgASgJQhWK",
            "+SsGIgQKAggBivkrByIFCgMQgAISKAoIYWdlbnRfaWQYAiABKAsyFi5iZ3Mu",
            "cHJvdG9jb2wuRW50aXR5SWQSDwoHcHJvZ3JhbRgFIAEoBzoGgvkrAggBIlIK",
            "IEdldEFsbFZhbHVlc0ZvckF0dHJpYnV0ZVJlc3BvbnNlEi4KD2F0dHJpYnV0",
            "ZV92YWx1ZRgBIAMoCzIVLmJncy5wcm90b2NvbC5WYXJpYW50ImEKGFJlZ2lz",
            "dGVyVXRpbGl0aWVzUmVxdWVzdBIqCglhdHRyaWJ1dGUYASADKAsyFy5iZ3Mu",
            "cHJvdG9jb2wuQXR0cmlidXRlEhkKB3Byb2dyYW0YAiABKAdCCIr5KwQSAhAA",
            "IikKGVJlZ2lzdGVyVXRpbGl0aWVzUmVzcG9uc2USDAoEY2lpZBgBIAEoCSIc",
            "ChpVbnJlZ2lzdGVyVXRpbGl0aWVzUmVxdWVzdDKUCQoUR2FtZVV0aWxpdGll",
            "c1NlcnZpY2USfQoUUHJvY2Vzc0NsaWVudFJlcXVlc3QSLS5iZ3MucHJvdG9j",
            "b2wuZ2FtZV91dGlsaXRpZXMudjEuQ2xpZW50UmVxdWVzdBouLmJncy5wcm90",
            "b2NvbC5nYW1lX3V0aWxpdGllcy52MS5DbGllbnRSZXNwb25zZSIGgvkrAggB",
            "EnUKFlByZXNlbmNlQ2hhbm5lbENyZWF0ZWQSPS5iZ3MucHJvdG9jb2wuZ2Ft",
            "ZV91dGlsaXRpZXMudjEuUHJlc2VuY2VDaGFubmVsQ3JlYXRlZFJlcXVlc3Qa",
            "FC5iZ3MucHJvdG9jb2wuTm9EYXRhIgaC+SsCCAISfQoUUHJvY2Vzc1NlcnZl",
            "clJlcXVlc3QSLS5iZ3MucHJvdG9jb2wuZ2FtZV91dGlsaXRpZXMudjEuU2Vy",
            "dmVyUmVxdWVzdBouLmJncy5wcm90b2NvbC5nYW1lX3V0aWxpdGllcy52MS5T",
            "ZXJ2ZXJSZXNwb25zZSIGgvkrAggGEnoKE09uR2FtZUFjY291bnRPbmxpbmUS",
            "PS5iZ3MucHJvdG9jb2wuZ2FtZV91dGlsaXRpZXMudjEuR2FtZUFjY291bnRP",
            "bmxpbmVOb3RpZmljYXRpb24aGS5iZ3MucHJvdG9jb2wuTk9fUkVTUE9OU0Ui",
            "CYgCAYL5KwIIBxJ8ChRPbkdhbWVBY2NvdW50T2ZmbGluZRI+LmJncy5wcm90",
            "b2NvbC5nYW1lX3V0aWxpdGllcy52MS5HYW1lQWNjb3VudE9mZmxpbmVOb3Rp",
            "ZmljYXRpb24aGS5iZ3MucHJvdG9jb2wuTk9fUkVTUE9OU0UiCYgCAYL5KwII",
            "CBKlAQoYR2V0QWxsVmFsdWVzRm9yQXR0cmlidXRlEj8uYmdzLnByb3RvY29s",
            "LmdhbWVfdXRpbGl0aWVzLnYxLkdldEFsbFZhbHVlc0ZvckF0dHJpYnV0ZVJl",
            "cXVlc3QaQC5iZ3MucHJvdG9jb2wuZ2FtZV91dGlsaXRpZXMudjEuR2V0QWxs",
            "VmFsdWVzRm9yQXR0cmlidXRlUmVzcG9uc2UiBoL5KwIIChKWAQoRUmVnaXN0",
            "ZXJVdGlsaXRpZXMSOC5iZ3MucHJvdG9jb2wuZ2FtZV91dGlsaXRpZXMudjEu",
            "UmVnaXN0ZXJVdGlsaXRpZXNSZXF1ZXN0GjkuYmdzLnByb3RvY29sLmdhbWVf",
            "dXRpbGl0aWVzLnYxLlJlZ2lzdGVyVXRpbGl0aWVzUmVzcG9uc2UiDIL5KwII",
            "C4L5KwIQAxJ6ChNVbnJlZ2lzdGVyVXRpbGl0aWVzEjouYmdzLnByb3RvY29s",
            "LmdhbWVfdXRpbGl0aWVzLnYxLlVucmVnaXN0ZXJVdGlsaXRpZXNSZXF1ZXN0",
            "GhkuYmdzLnByb3RvY29sLk5PX1JFU1BPTlNFIgyC+SsCCAyC+SsCEAMaUIL5",
            "KywKKmJuZXQucHJvdG9jb2wuZ2FtZV91dGlsaXRpZXMuR2FtZVV0aWxpdGll",
            "c4L5KxAqDmdhbWVfdXRpbGl0aWVzivkrAggBivkrAhABQkEKHmJncy5wcm90",
            "b2NvbC5nYW1lX3V0aWxpdGllcy52MUIZR2FtZVV0aWxpdGllc1NlcnZpY2VQ",
            "cm90b4ABAIgBAQ=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Bgs.Protocol.AttributeTypesReflection.Descriptor, global::Bgs.Protocol.EntityTypesReflection.Descriptor, global::Bgs.Protocol.GameUtilities.V1.GameUtilitiesTypesReflection.Descriptor, global::Bgs.Protocol.RpcTypesReflection.Descriptor, global::Bgs.Protocol.FieldOptionsReflection.Descriptor, global::Bgs.Protocol.MessageOptionsReflection.Descriptor, global::Bgs.Protocol.MethodOptionsReflection.Descriptor, global::Bgs.Protocol.ServiceOptionsReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Bgs.Protocol.GameUtilities.V1.ClientRequest), global::Bgs.Protocol.GameUtilities.V1.ClientRequest.Parser, new[]{ "Attribute", "AccountId", "GameAccountId", "Program", "ClientInfo" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bgs.Protocol.GameUtilities.V1.ClientResponse), global::Bgs.Protocol.GameUtilities.V1.ClientResponse.Parser, new[]{ "Attribute" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bgs.Protocol.GameUtilities.V1.ServerRequest), global::Bgs.Protocol.GameUtilities.V1.ServerRequest.Parser, new[]{ "Attribute", "Program" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bgs.Protocol.GameUtilities.V1.ServerResponse), global::Bgs.Protocol.GameUtilities.V1.ServerResponse.Parser, new[]{ "Attribute" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bgs.Protocol.GameUtilities.V1.PresenceChannelCreatedRequest), global::Bgs.Protocol.GameUtilities.V1.PresenceChannelCreatedRequest.Parser, new[]{ "Id", "GameAccountId", "AccountId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bgs.Protocol.GameUtilities.V1.GameAccountOnlineNotification), global::Bgs.Protocol.GameUtilities.V1.GameAccountOnlineNotification.Parser, new[]{ "GameAccountId", "SessionId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bgs.Protocol.GameUtilities.V1.GameAccountOfflineNotification), global::Bgs.Protocol.GameUtilities.V1.GameAccountOfflineNotification.Parser, new[]{ "GameAccountId", "SessionId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bgs.Protocol.GameUtilities.V1.GetAllValuesForAttributeRequest), global::Bgs.Protocol.GameUtilities.V1.GetAllValuesForAttributeRequest.Parser, new[]{ "AttributeKey", "AgentId", "Program" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bgs.Protocol.GameUtilities.V1.GetAllValuesForAttributeResponse), global::Bgs.Protocol.GameUtilities.V1.GetAllValuesForAttributeResponse.Parser, new[]{ "AttributeValue" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bgs.Protocol.GameUtilities.V1.RegisterUtilitiesRequest), global::Bgs.Protocol.GameUtilities.V1.RegisterUtilitiesRequest.Parser, new[]{ "Attribute", "Program" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bgs.Protocol.GameUtilities.V1.RegisterUtilitiesResponse), global::Bgs.Protocol.GameUtilities.V1.RegisterUtilitiesResponse.Parser, new[]{ "Ciid" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bgs.Protocol.GameUtilities.V1.UnregisterUtilitiesRequest), global::Bgs.Protocol.GameUtilities.V1.UnregisterUtilitiesRequest.Parser, null, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class ClientRequest : pb::IMessage<ClientRequest> {
    private static readonly pb::MessageParser<ClientRequest> _parser = new pb::MessageParser<ClientRequest>(() => new ClientRequest());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ClientRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bgs.Protocol.GameUtilities.V1.GameUtilitiesServiceReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClientRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClientRequest(ClientRequest other) : this() {
      _hasBits0 = other._hasBits0;
      attribute_ = other.attribute_.Clone();
      accountId_ = other.HasAccountId ? other.accountId_.Clone() : null;
      gameAccountId_ = other.HasGameAccountId ? other.gameAccountId_.Clone() : null;
      program_ = other.program_;
      clientInfo_ = other.HasClientInfo ? other.clientInfo_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClientRequest Clone() {
      return new ClientRequest(this);
    }

    /// <summary>Field number for the "attribute" field.</summary>
    public const int AttributeFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Bgs.Protocol.Attribute> _repeated_attribute_codec
        = pb::FieldCodec.ForMessage(10, global::Bgs.Protocol.Attribute.Parser);
    private readonly pbc::RepeatedField<global::Bgs.Protocol.Attribute> attribute_ = new pbc::RepeatedField<global::Bgs.Protocol.Attribute>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Bgs.Protocol.Attribute> Attribute {
      get { return attribute_; }
    }

    /// <summary>Field number for the "account_id" field.</summary>
    public const int AccountIdFieldNumber = 3;
    private global::Bgs.Protocol.EntityId accountId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bgs.Protocol.EntityId AccountId {
      get { return accountId_; }
      set {
        accountId_ = value;
      }
    }
    /// <summary>Gets whether the account_id field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasAccountId {
      get { return accountId_ != null; }
    }
    /// <summary>Clears the value of the account_id field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearAccountId() {
      accountId_ = null;
    }

    /// <summary>Field number for the "game_account_id" field.</summary>
    public const int GameAccountIdFieldNumber = 4;
    private global::Bgs.Protocol.EntityId gameAccountId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bgs.Protocol.EntityId GameAccountId {
      get { return gameAccountId_; }
      set {
        gameAccountId_ = value;
      }
    }
    /// <summary>Gets whether the game_account_id field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasGameAccountId {
      get { return gameAccountId_ != null; }
    }
    /// <summary>Clears the value of the game_account_id field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearGameAccountId() {
      gameAccountId_ = null;
    }

    /// <summary>Field number for the "program" field.</summary>
    public const int ProgramFieldNumber = 5;
    private readonly static uint ProgramDefaultValue = 0;

    private uint program_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Program {
      get { if ((_hasBits0 & 1) != 0) { return program_; } else { return ProgramDefaultValue; } }
      set {
        _hasBits0 |= 1;
        program_ = value;
      }
    }
    /// <summary>Gets whether the "program" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasProgram {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "program" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearProgram() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "client_info" field.</summary>
    public const int ClientInfoFieldNumber = 6;
    private global::Bgs.Protocol.GameUtilities.V1.ClientInfo clientInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bgs.Protocol.GameUtilities.V1.ClientInfo ClientInfo {
      get { return clientInfo_; }
      set {
        clientInfo_ = value;
      }
    }
    /// <summary>Gets whether the client_info field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasClientInfo {
      get { return clientInfo_ != null; }
    }
    /// <summary>Clears the value of the client_info field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearClientInfo() {
      clientInfo_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ClientRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ClientRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!attribute_.Equals(other.attribute_)) return false;
      if (!object.Equals(AccountId, other.AccountId)) return false;
      if (!object.Equals(GameAccountId, other.GameAccountId)) return false;
      if (Program != other.Program) return false;
      if (!object.Equals(ClientInfo, other.ClientInfo)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= attribute_.GetHashCode();
      if (HasAccountId) hash ^= AccountId.GetHashCode();
      if (HasGameAccountId) hash ^= GameAccountId.GetHashCode();
      if (HasProgram) hash ^= Program.GetHashCode();
      if (HasClientInfo) hash ^= ClientInfo.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      attribute_.WriteTo(output, _repeated_attribute_codec);
      if (HasAccountId) {
        output.WriteRawTag(26);
        output.WriteMessage(AccountId);
      }
      if (HasGameAccountId) {
        output.WriteRawTag(34);
        output.WriteMessage(GameAccountId);
      }
      if (HasProgram) {
        output.WriteRawTag(45);
        output.WriteFixed32(Program);
      }
      if (HasClientInfo) {
        output.WriteRawTag(50);
        output.WriteMessage(ClientInfo);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += attribute_.CalculateSize(_repeated_attribute_codec);
      if (HasAccountId) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AccountId);
      }
      if (HasGameAccountId) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(GameAccountId);
      }
      if (HasProgram) {
        size += 1 + 4;
      }
      if (HasClientInfo) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ClientInfo);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ClientRequest other) {
      if (other == null) {
        return;
      }
      attribute_.Add(other.attribute_);
      if (other.HasAccountId) {
        if (!HasAccountId) {
          AccountId = new global::Bgs.Protocol.EntityId();
        }
        AccountId.MergeFrom(other.AccountId);
      }
      if (other.HasGameAccountId) {
        if (!HasGameAccountId) {
          GameAccountId = new global::Bgs.Protocol.EntityId();
        }
        GameAccountId.MergeFrom(other.GameAccountId);
      }
      if (other.HasProgram) {
        Program = other.Program;
      }
      if (other.HasClientInfo) {
        if (!HasClientInfo) {
          ClientInfo = new global::Bgs.Protocol.GameUtilities.V1.ClientInfo();
        }
        ClientInfo.MergeFrom(other.ClientInfo);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            attribute_.AddEntriesFrom(input, _repeated_attribute_codec);
            break;
          }
          case 26: {
            if (!HasAccountId) {
              AccountId = new global::Bgs.Protocol.EntityId();
            }
            input.ReadMessage(AccountId);
            break;
          }
          case 34: {
            if (!HasGameAccountId) {
              GameAccountId = new global::Bgs.Protocol.EntityId();
            }
            input.ReadMessage(GameAccountId);
            break;
          }
          case 45: {
            Program = input.ReadFixed32();
            break;
          }
          case 50: {
            if (!HasClientInfo) {
              ClientInfo = new global::Bgs.Protocol.GameUtilities.V1.ClientInfo();
            }
            input.ReadMessage(ClientInfo);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ClientResponse : pb::IMessage<ClientResponse> {
    private static readonly pb::MessageParser<ClientResponse> _parser = new pb::MessageParser<ClientResponse>(() => new ClientResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ClientResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bgs.Protocol.GameUtilities.V1.GameUtilitiesServiceReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClientResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClientResponse(ClientResponse other) : this() {
      attribute_ = other.attribute_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClientResponse Clone() {
      return new ClientResponse(this);
    }

    /// <summary>Field number for the "attribute" field.</summary>
    public const int AttributeFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Bgs.Protocol.Attribute> _repeated_attribute_codec
        = pb::FieldCodec.ForMessage(10, global::Bgs.Protocol.Attribute.Parser);
    private readonly pbc::RepeatedField<global::Bgs.Protocol.Attribute> attribute_ = new pbc::RepeatedField<global::Bgs.Protocol.Attribute>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Bgs.Protocol.Attribute> Attribute {
      get { return attribute_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ClientResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ClientResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!attribute_.Equals(other.attribute_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= attribute_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      attribute_.WriteTo(output, _repeated_attribute_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += attribute_.CalculateSize(_repeated_attribute_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ClientResponse other) {
      if (other == null) {
        return;
      }
      attribute_.Add(other.attribute_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            attribute_.AddEntriesFrom(input, _repeated_attribute_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ServerRequest : pb::IMessage<ServerRequest> {
    private static readonly pb::MessageParser<ServerRequest> _parser = new pb::MessageParser<ServerRequest>(() => new ServerRequest());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ServerRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bgs.Protocol.GameUtilities.V1.GameUtilitiesServiceReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ServerRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ServerRequest(ServerRequest other) : this() {
      _hasBits0 = other._hasBits0;
      attribute_ = other.attribute_.Clone();
      program_ = other.program_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ServerRequest Clone() {
      return new ServerRequest(this);
    }

    /// <summary>Field number for the "attribute" field.</summary>
    public const int AttributeFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Bgs.Protocol.Attribute> _repeated_attribute_codec
        = pb::FieldCodec.ForMessage(10, global::Bgs.Protocol.Attribute.Parser);
    private readonly pbc::RepeatedField<global::Bgs.Protocol.Attribute> attribute_ = new pbc::RepeatedField<global::Bgs.Protocol.Attribute>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Bgs.Protocol.Attribute> Attribute {
      get { return attribute_; }
    }

    /// <summary>Field number for the "program" field.</summary>
    public const int ProgramFieldNumber = 2;
    private readonly static uint ProgramDefaultValue = 0;

    private uint program_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Program {
      get { if ((_hasBits0 & 1) != 0) { return program_; } else { return ProgramDefaultValue; } }
      set {
        _hasBits0 |= 1;
        program_ = value;
      }
    }
    /// <summary>Gets whether the "program" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasProgram {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "program" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearProgram() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ServerRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ServerRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!attribute_.Equals(other.attribute_)) return false;
      if (Program != other.Program) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= attribute_.GetHashCode();
      if (HasProgram) hash ^= Program.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      attribute_.WriteTo(output, _repeated_attribute_codec);
      if (HasProgram) {
        output.WriteRawTag(21);
        output.WriteFixed32(Program);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += attribute_.CalculateSize(_repeated_attribute_codec);
      if (HasProgram) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ServerRequest other) {
      if (other == null) {
        return;
      }
      attribute_.Add(other.attribute_);
      if (other.HasProgram) {
        Program = other.Program;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            attribute_.AddEntriesFrom(input, _repeated_attribute_codec);
            break;
          }
          case 21: {
            Program = input.ReadFixed32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ServerResponse : pb::IMessage<ServerResponse> {
    private static readonly pb::MessageParser<ServerResponse> _parser = new pb::MessageParser<ServerResponse>(() => new ServerResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ServerResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bgs.Protocol.GameUtilities.V1.GameUtilitiesServiceReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ServerResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ServerResponse(ServerResponse other) : this() {
      attribute_ = other.attribute_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ServerResponse Clone() {
      return new ServerResponse(this);
    }

    /// <summary>Field number for the "attribute" field.</summary>
    public const int AttributeFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Bgs.Protocol.Attribute> _repeated_attribute_codec
        = pb::FieldCodec.ForMessage(10, global::Bgs.Protocol.Attribute.Parser);
    private readonly pbc::RepeatedField<global::Bgs.Protocol.Attribute> attribute_ = new pbc::RepeatedField<global::Bgs.Protocol.Attribute>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Bgs.Protocol.Attribute> Attribute {
      get { return attribute_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ServerResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ServerResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!attribute_.Equals(other.attribute_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= attribute_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      attribute_.WriteTo(output, _repeated_attribute_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += attribute_.CalculateSize(_repeated_attribute_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ServerResponse other) {
      if (other == null) {
        return;
      }
      attribute_.Add(other.attribute_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            attribute_.AddEntriesFrom(input, _repeated_attribute_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class PresenceChannelCreatedRequest : pb::IMessage<PresenceChannelCreatedRequest> {
    private static readonly pb::MessageParser<PresenceChannelCreatedRequest> _parser = new pb::MessageParser<PresenceChannelCreatedRequest>(() => new PresenceChannelCreatedRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PresenceChannelCreatedRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bgs.Protocol.GameUtilities.V1.GameUtilitiesServiceReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PresenceChannelCreatedRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PresenceChannelCreatedRequest(PresenceChannelCreatedRequest other) : this() {
      id_ = other.HasId ? other.id_.Clone() : null;
      gameAccountId_ = other.HasGameAccountId ? other.gameAccountId_.Clone() : null;
      accountId_ = other.HasAccountId ? other.accountId_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PresenceChannelCreatedRequest Clone() {
      return new PresenceChannelCreatedRequest(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private global::Bgs.Protocol.EntityId id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bgs.Protocol.EntityId Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }
    /// <summary>Gets whether the id field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasId {
      get { return id_ != null; }
    }
    /// <summary>Clears the value of the id field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearId() {
      id_ = null;
    }

    /// <summary>Field number for the "game_account_id" field.</summary>
    public const int GameAccountIdFieldNumber = 3;
    private global::Bgs.Protocol.EntityId gameAccountId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bgs.Protocol.EntityId GameAccountId {
      get { return gameAccountId_; }
      set {
        gameAccountId_ = value;
      }
    }
    /// <summary>Gets whether the game_account_id field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasGameAccountId {
      get { return gameAccountId_ != null; }
    }
    /// <summary>Clears the value of the game_account_id field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearGameAccountId() {
      gameAccountId_ = null;
    }

    /// <summary>Field number for the "account_id" field.</summary>
    public const int AccountIdFieldNumber = 4;
    private global::Bgs.Protocol.EntityId accountId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bgs.Protocol.EntityId AccountId {
      get { return accountId_; }
      set {
        accountId_ = value;
      }
    }
    /// <summary>Gets whether the account_id field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasAccountId {
      get { return accountId_ != null; }
    }
    /// <summary>Clears the value of the account_id field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearAccountId() {
      accountId_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PresenceChannelCreatedRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PresenceChannelCreatedRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Id, other.Id)) return false;
      if (!object.Equals(GameAccountId, other.GameAccountId)) return false;
      if (!object.Equals(AccountId, other.AccountId)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasId) hash ^= Id.GetHashCode();
      if (HasGameAccountId) hash ^= GameAccountId.GetHashCode();
      if (HasAccountId) hash ^= AccountId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasId) {
        output.WriteRawTag(10);
        output.WriteMessage(Id);
      }
      if (HasGameAccountId) {
        output.WriteRawTag(26);
        output.WriteMessage(GameAccountId);
      }
      if (HasAccountId) {
        output.WriteRawTag(34);
        output.WriteMessage(AccountId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasId) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Id);
      }
      if (HasGameAccountId) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(GameAccountId);
      }
      if (HasAccountId) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AccountId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PresenceChannelCreatedRequest other) {
      if (other == null) {
        return;
      }
      if (other.HasId) {
        if (!HasId) {
          Id = new global::Bgs.Protocol.EntityId();
        }
        Id.MergeFrom(other.Id);
      }
      if (other.HasGameAccountId) {
        if (!HasGameAccountId) {
          GameAccountId = new global::Bgs.Protocol.EntityId();
        }
        GameAccountId.MergeFrom(other.GameAccountId);
      }
      if (other.HasAccountId) {
        if (!HasAccountId) {
          AccountId = new global::Bgs.Protocol.EntityId();
        }
        AccountId.MergeFrom(other.AccountId);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (!HasId) {
              Id = new global::Bgs.Protocol.EntityId();
            }
            input.ReadMessage(Id);
            break;
          }
          case 26: {
            if (!HasGameAccountId) {
              GameAccountId = new global::Bgs.Protocol.EntityId();
            }
            input.ReadMessage(GameAccountId);
            break;
          }
          case 34: {
            if (!HasAccountId) {
              AccountId = new global::Bgs.Protocol.EntityId();
            }
            input.ReadMessage(AccountId);
            break;
          }
        }
      }
    }

  }

  public sealed partial class GameAccountOnlineNotification : pb::IMessage<GameAccountOnlineNotification> {
    private static readonly pb::MessageParser<GameAccountOnlineNotification> _parser = new pb::MessageParser<GameAccountOnlineNotification>(() => new GameAccountOnlineNotification());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GameAccountOnlineNotification> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bgs.Protocol.GameUtilities.V1.GameUtilitiesServiceReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GameAccountOnlineNotification() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GameAccountOnlineNotification(GameAccountOnlineNotification other) : this() {
      gameAccountId_ = other.HasGameAccountId ? other.gameAccountId_.Clone() : null;
      sessionId_ = other.sessionId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GameAccountOnlineNotification Clone() {
      return new GameAccountOnlineNotification(this);
    }

    /// <summary>Field number for the "game_account_id" field.</summary>
    public const int GameAccountIdFieldNumber = 1;
    private global::Bgs.Protocol.EntityId gameAccountId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bgs.Protocol.EntityId GameAccountId {
      get { return gameAccountId_; }
      set {
        gameAccountId_ = value;
      }
    }
    /// <summary>Gets whether the game_account_id field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasGameAccountId {
      get { return gameAccountId_ != null; }
    }
    /// <summary>Clears the value of the game_account_id field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearGameAccountId() {
      gameAccountId_ = null;
    }

    /// <summary>Field number for the "session_id" field.</summary>
    public const int SessionIdFieldNumber = 3;
    private readonly static string SessionIdDefaultValue = "";

    private string sessionId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SessionId {
      get { return sessionId_ ?? SessionIdDefaultValue; }
      set {
        sessionId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "session_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasSessionId {
      get { return sessionId_ != null; }
    }
    /// <summary>Clears the value of the "session_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearSessionId() {
      sessionId_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GameAccountOnlineNotification);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GameAccountOnlineNotification other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(GameAccountId, other.GameAccountId)) return false;
      if (SessionId != other.SessionId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasGameAccountId) hash ^= GameAccountId.GetHashCode();
      if (HasSessionId) hash ^= SessionId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasGameAccountId) {
        output.WriteRawTag(10);
        output.WriteMessage(GameAccountId);
      }
      if (HasSessionId) {
        output.WriteRawTag(26);
        output.WriteString(SessionId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasGameAccountId) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(GameAccountId);
      }
      if (HasSessionId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SessionId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GameAccountOnlineNotification other) {
      if (other == null) {
        return;
      }
      if (other.HasGameAccountId) {
        if (!HasGameAccountId) {
          GameAccountId = new global::Bgs.Protocol.EntityId();
        }
        GameAccountId.MergeFrom(other.GameAccountId);
      }
      if (other.HasSessionId) {
        SessionId = other.SessionId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (!HasGameAccountId) {
              GameAccountId = new global::Bgs.Protocol.EntityId();
            }
            input.ReadMessage(GameAccountId);
            break;
          }
          case 26: {
            SessionId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GameAccountOfflineNotification : pb::IMessage<GameAccountOfflineNotification> {
    private static readonly pb::MessageParser<GameAccountOfflineNotification> _parser = new pb::MessageParser<GameAccountOfflineNotification>(() => new GameAccountOfflineNotification());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GameAccountOfflineNotification> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bgs.Protocol.GameUtilities.V1.GameUtilitiesServiceReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GameAccountOfflineNotification() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GameAccountOfflineNotification(GameAccountOfflineNotification other) : this() {
      gameAccountId_ = other.HasGameAccountId ? other.gameAccountId_.Clone() : null;
      sessionId_ = other.sessionId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GameAccountOfflineNotification Clone() {
      return new GameAccountOfflineNotification(this);
    }

    /// <summary>Field number for the "game_account_id" field.</summary>
    public const int GameAccountIdFieldNumber = 1;
    private global::Bgs.Protocol.EntityId gameAccountId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bgs.Protocol.EntityId GameAccountId {
      get { return gameAccountId_; }
      set {
        gameAccountId_ = value;
      }
    }
    /// <summary>Gets whether the game_account_id field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasGameAccountId {
      get { return gameAccountId_ != null; }
    }
    /// <summary>Clears the value of the game_account_id field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearGameAccountId() {
      gameAccountId_ = null;
    }

    /// <summary>Field number for the "session_id" field.</summary>
    public const int SessionIdFieldNumber = 3;
    private readonly static string SessionIdDefaultValue = "";

    private string sessionId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SessionId {
      get { return sessionId_ ?? SessionIdDefaultValue; }
      set {
        sessionId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "session_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasSessionId {
      get { return sessionId_ != null; }
    }
    /// <summary>Clears the value of the "session_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearSessionId() {
      sessionId_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GameAccountOfflineNotification);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GameAccountOfflineNotification other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(GameAccountId, other.GameAccountId)) return false;
      if (SessionId != other.SessionId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasGameAccountId) hash ^= GameAccountId.GetHashCode();
      if (HasSessionId) hash ^= SessionId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasGameAccountId) {
        output.WriteRawTag(10);
        output.WriteMessage(GameAccountId);
      }
      if (HasSessionId) {
        output.WriteRawTag(26);
        output.WriteString(SessionId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasGameAccountId) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(GameAccountId);
      }
      if (HasSessionId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SessionId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GameAccountOfflineNotification other) {
      if (other == null) {
        return;
      }
      if (other.HasGameAccountId) {
        if (!HasGameAccountId) {
          GameAccountId = new global::Bgs.Protocol.EntityId();
        }
        GameAccountId.MergeFrom(other.GameAccountId);
      }
      if (other.HasSessionId) {
        SessionId = other.SessionId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (!HasGameAccountId) {
              GameAccountId = new global::Bgs.Protocol.EntityId();
            }
            input.ReadMessage(GameAccountId);
            break;
          }
          case 26: {
            SessionId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetAllValuesForAttributeRequest : pb::IMessage<GetAllValuesForAttributeRequest> {
    private static readonly pb::MessageParser<GetAllValuesForAttributeRequest> _parser = new pb::MessageParser<GetAllValuesForAttributeRequest>(() => new GetAllValuesForAttributeRequest());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetAllValuesForAttributeRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bgs.Protocol.GameUtilities.V1.GameUtilitiesServiceReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetAllValuesForAttributeRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetAllValuesForAttributeRequest(GetAllValuesForAttributeRequest other) : this() {
      _hasBits0 = other._hasBits0;
      attributeKey_ = other.attributeKey_;
      agentId_ = other.HasAgentId ? other.agentId_.Clone() : null;
      program_ = other.program_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetAllValuesForAttributeRequest Clone() {
      return new GetAllValuesForAttributeRequest(this);
    }

    /// <summary>Field number for the "attribute_key" field.</summary>
    public const int AttributeKeyFieldNumber = 1;
    private readonly static string AttributeKeyDefaultValue = "";

    private string attributeKey_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AttributeKey {
      get { return attributeKey_ ?? AttributeKeyDefaultValue; }
      set {
        attributeKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "attribute_key" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasAttributeKey {
      get { return attributeKey_ != null; }
    }
    /// <summary>Clears the value of the "attribute_key" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearAttributeKey() {
      attributeKey_ = null;
    }

    /// <summary>Field number for the "agent_id" field.</summary>
    public const int AgentIdFieldNumber = 2;
    private global::Bgs.Protocol.EntityId agentId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bgs.Protocol.EntityId AgentId {
      get { return agentId_; }
      set {
        agentId_ = value;
      }
    }
    /// <summary>Gets whether the agent_id field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasAgentId {
      get { return agentId_ != null; }
    }
    /// <summary>Clears the value of the agent_id field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearAgentId() {
      agentId_ = null;
    }

    /// <summary>Field number for the "program" field.</summary>
    public const int ProgramFieldNumber = 5;
    private readonly static uint ProgramDefaultValue = 0;

    private uint program_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Program {
      get { if ((_hasBits0 & 1) != 0) { return program_; } else { return ProgramDefaultValue; } }
      set {
        _hasBits0 |= 1;
        program_ = value;
      }
    }
    /// <summary>Gets whether the "program" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasProgram {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "program" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearProgram() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetAllValuesForAttributeRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetAllValuesForAttributeRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AttributeKey != other.AttributeKey) return false;
      if (!object.Equals(AgentId, other.AgentId)) return false;
      if (Program != other.Program) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasAttributeKey) hash ^= AttributeKey.GetHashCode();
      if (HasAgentId) hash ^= AgentId.GetHashCode();
      if (HasProgram) hash ^= Program.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasAttributeKey) {
        output.WriteRawTag(10);
        output.WriteString(AttributeKey);
      }
      if (HasAgentId) {
        output.WriteRawTag(18);
        output.WriteMessage(AgentId);
      }
      if (HasProgram) {
        output.WriteRawTag(45);
        output.WriteFixed32(Program);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasAttributeKey) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AttributeKey);
      }
      if (HasAgentId) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AgentId);
      }
      if (HasProgram) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetAllValuesForAttributeRequest other) {
      if (other == null) {
        return;
      }
      if (other.HasAttributeKey) {
        AttributeKey = other.AttributeKey;
      }
      if (other.HasAgentId) {
        if (!HasAgentId) {
          AgentId = new global::Bgs.Protocol.EntityId();
        }
        AgentId.MergeFrom(other.AgentId);
      }
      if (other.HasProgram) {
        Program = other.Program;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            AttributeKey = input.ReadString();
            break;
          }
          case 18: {
            if (!HasAgentId) {
              AgentId = new global::Bgs.Protocol.EntityId();
            }
            input.ReadMessage(AgentId);
            break;
          }
          case 45: {
            Program = input.ReadFixed32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetAllValuesForAttributeResponse : pb::IMessage<GetAllValuesForAttributeResponse> {
    private static readonly pb::MessageParser<GetAllValuesForAttributeResponse> _parser = new pb::MessageParser<GetAllValuesForAttributeResponse>(() => new GetAllValuesForAttributeResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetAllValuesForAttributeResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bgs.Protocol.GameUtilities.V1.GameUtilitiesServiceReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetAllValuesForAttributeResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetAllValuesForAttributeResponse(GetAllValuesForAttributeResponse other) : this() {
      attributeValue_ = other.attributeValue_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetAllValuesForAttributeResponse Clone() {
      return new GetAllValuesForAttributeResponse(this);
    }

    /// <summary>Field number for the "attribute_value" field.</summary>
    public const int AttributeValueFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Bgs.Protocol.Variant> _repeated_attributeValue_codec
        = pb::FieldCodec.ForMessage(10, global::Bgs.Protocol.Variant.Parser);
    private readonly pbc::RepeatedField<global::Bgs.Protocol.Variant> attributeValue_ = new pbc::RepeatedField<global::Bgs.Protocol.Variant>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Bgs.Protocol.Variant> AttributeValue {
      get { return attributeValue_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetAllValuesForAttributeResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetAllValuesForAttributeResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!attributeValue_.Equals(other.attributeValue_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= attributeValue_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      attributeValue_.WriteTo(output, _repeated_attributeValue_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += attributeValue_.CalculateSize(_repeated_attributeValue_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetAllValuesForAttributeResponse other) {
      if (other == null) {
        return;
      }
      attributeValue_.Add(other.attributeValue_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            attributeValue_.AddEntriesFrom(input, _repeated_attributeValue_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class RegisterUtilitiesRequest : pb::IMessage<RegisterUtilitiesRequest> {
    private static readonly pb::MessageParser<RegisterUtilitiesRequest> _parser = new pb::MessageParser<RegisterUtilitiesRequest>(() => new RegisterUtilitiesRequest());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RegisterUtilitiesRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bgs.Protocol.GameUtilities.V1.GameUtilitiesServiceReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RegisterUtilitiesRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RegisterUtilitiesRequest(RegisterUtilitiesRequest other) : this() {
      _hasBits0 = other._hasBits0;
      attribute_ = other.attribute_.Clone();
      program_ = other.program_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RegisterUtilitiesRequest Clone() {
      return new RegisterUtilitiesRequest(this);
    }

    /// <summary>Field number for the "attribute" field.</summary>
    public const int AttributeFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Bgs.Protocol.Attribute> _repeated_attribute_codec
        = pb::FieldCodec.ForMessage(10, global::Bgs.Protocol.Attribute.Parser);
    private readonly pbc::RepeatedField<global::Bgs.Protocol.Attribute> attribute_ = new pbc::RepeatedField<global::Bgs.Protocol.Attribute>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Bgs.Protocol.Attribute> Attribute {
      get { return attribute_; }
    }

    /// <summary>Field number for the "program" field.</summary>
    public const int ProgramFieldNumber = 2;
    private readonly static uint ProgramDefaultValue = 0;

    private uint program_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Program {
      get { if ((_hasBits0 & 1) != 0) { return program_; } else { return ProgramDefaultValue; } }
      set {
        _hasBits0 |= 1;
        program_ = value;
      }
    }
    /// <summary>Gets whether the "program" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasProgram {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "program" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearProgram() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RegisterUtilitiesRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RegisterUtilitiesRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!attribute_.Equals(other.attribute_)) return false;
      if (Program != other.Program) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= attribute_.GetHashCode();
      if (HasProgram) hash ^= Program.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      attribute_.WriteTo(output, _repeated_attribute_codec);
      if (HasProgram) {
        output.WriteRawTag(21);
        output.WriteFixed32(Program);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += attribute_.CalculateSize(_repeated_attribute_codec);
      if (HasProgram) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RegisterUtilitiesRequest other) {
      if (other == null) {
        return;
      }
      attribute_.Add(other.attribute_);
      if (other.HasProgram) {
        Program = other.Program;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            attribute_.AddEntriesFrom(input, _repeated_attribute_codec);
            break;
          }
          case 21: {
            Program = input.ReadFixed32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class RegisterUtilitiesResponse : pb::IMessage<RegisterUtilitiesResponse> {
    private static readonly pb::MessageParser<RegisterUtilitiesResponse> _parser = new pb::MessageParser<RegisterUtilitiesResponse>(() => new RegisterUtilitiesResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RegisterUtilitiesResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bgs.Protocol.GameUtilities.V1.GameUtilitiesServiceReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RegisterUtilitiesResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RegisterUtilitiesResponse(RegisterUtilitiesResponse other) : this() {
      ciid_ = other.ciid_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RegisterUtilitiesResponse Clone() {
      return new RegisterUtilitiesResponse(this);
    }

    /// <summary>Field number for the "ciid" field.</summary>
    public const int CiidFieldNumber = 1;
    private readonly static string CiidDefaultValue = "";

    private string ciid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Ciid {
      get { return ciid_ ?? CiidDefaultValue; }
      set {
        ciid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "ciid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasCiid {
      get { return ciid_ != null; }
    }
    /// <summary>Clears the value of the "ciid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearCiid() {
      ciid_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RegisterUtilitiesResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RegisterUtilitiesResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Ciid != other.Ciid) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasCiid) hash ^= Ciid.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasCiid) {
        output.WriteRawTag(10);
        output.WriteString(Ciid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasCiid) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Ciid);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RegisterUtilitiesResponse other) {
      if (other == null) {
        return;
      }
      if (other.HasCiid) {
        Ciid = other.Ciid;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Ciid = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class UnregisterUtilitiesRequest : pb::IMessage<UnregisterUtilitiesRequest> {
    private static readonly pb::MessageParser<UnregisterUtilitiesRequest> _parser = new pb::MessageParser<UnregisterUtilitiesRequest>(() => new UnregisterUtilitiesRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UnregisterUtilitiesRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bgs.Protocol.GameUtilities.V1.GameUtilitiesServiceReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UnregisterUtilitiesRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UnregisterUtilitiesRequest(UnregisterUtilitiesRequest other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UnregisterUtilitiesRequest Clone() {
      return new UnregisterUtilitiesRequest(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UnregisterUtilitiesRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UnregisterUtilitiesRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UnregisterUtilitiesRequest other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
