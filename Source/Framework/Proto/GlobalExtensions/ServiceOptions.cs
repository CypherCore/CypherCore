// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: bgs/low/pb/client/global_extensions/service_options.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Bgs.Protocol {

  /// <summary>Holder for reflection information generated from bgs/low/pb/client/global_extensions/service_options.proto</summary>
  public static partial class ServiceOptionsReflection {

    #region Descriptor
    /// <summary>File descriptor for bgs/low/pb/client/global_extensions/service_options.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ServiceOptionsReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CjliZ3MvbG93L3BiL2NsaWVudC9nbG9iYWxfZXh0ZW5zaW9ucy9zZXJ2aWNl",
            "X29wdGlvbnMucHJvdG8SDGJncy5wcm90b2NvbBogZ29vZ2xlL3Byb3RvYnVm",
            "L2Rlc2NyaXB0b3IucHJvdG8i4AIKEUJHU1NlcnZpY2VPcHRpb25zEhcKD2Rl",
            "c2NyaXB0b3JfbmFtZRgBIAEoCRIPCgd2ZXJzaW9uGAQgASgNEhIKCnNoYXJk",
            "X25hbWUYBSABKAkSHwoXcmVzb2x2ZV9jbGllbnRfaW5zdGFuY2UYBiABKAgS",
            "SwoEdHlwZRgHIAEoDjIrLmJncy5wcm90b2NvbC5CR1NTZXJ2aWNlT3B0aW9u",
            "cy5TZXJ2aWNlVHlwZToQU0VSVklDRV9UWVBFX1JQQxIQCghhcGlfdHlwZRgI",
            "IAEoCRIRCglpc19nbG9iYWwYCSABKAgiegoLU2VydmljZVR5cGUSFAoQU0VS",
            "VklDRV9UWVBFX1JQQxAAEhsKF1NFUlZJQ0VfVFlQRV9SUENfRElSRUNUEAES",
            "FgoSU0VSVklDRV9UWVBFX0VWRU5UEAISIAocU0VSVklDRV9UWVBFX0VWRU5U",
            "X0JST0FEQ0FTVBADInoKEVNES1NlcnZpY2VPcHRpb25zEg8KB2luYm91bmQY",
            "ASABKAgSEAoIb3V0Ym91bmQYAiABKAgSFQoNdXNlX2NsaWVudF9pZBgDIAEo",
            "CBIZChFkZXByZWNhdGVkXzMyX2JpdBgEIAEoCBIQCghvYnNvbGV0ZRgFIAEo",
            "CDpbCg9zZXJ2aWNlX29wdGlvbnMSHy5nb29nbGUucHJvdG9idWYuU2Vydmlj",
            "ZU9wdGlvbnMYkL8FIAEoCzIfLmJncy5wcm90b2NvbC5CR1NTZXJ2aWNlT3B0",
            "aW9uczpfChNzZGtfc2VydmljZV9vcHRpb25zEh8uZ29vZ2xlLnByb3RvYnVm",
            "LlNlcnZpY2VPcHRpb25zGJG/BSABKAsyHy5iZ3MucHJvdG9jb2wuU0RLU2Vy",
            "dmljZU9wdGlvbnNCIwoMYmdzLnByb3RvY29sQhNTZXJ2aWNlT3B0aW9uc1By",
            "b3Rv"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Protobuf.DescriptorReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pb::Extension[] { ServiceOptionsExtensions.ServiceOptions_, ServiceOptionsExtensions.SdkServiceOptions }, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Bgs.Protocol.BGSServiceOptions), global::Bgs.Protocol.BGSServiceOptions.Parser, new[]{ "DescriptorName", "Version", "ShardName", "ResolveClientInstance", "Type", "ApiType", "IsGlobal" }, null, new[]{ typeof(global::Bgs.Protocol.BGSServiceOptions.Types.ServiceType) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bgs.Protocol.SDKServiceOptions), global::Bgs.Protocol.SDKServiceOptions.Parser, new[]{ "Inbound", "Outbound", "UseClientId", "Deprecated32Bit", "Obsolete" }, null, null, null, null)
          }));
    }
    #endregion

  }
  /// <summary>Holder for extension identifiers generated from the top level of bgs/low/pb/client/global_extensions/service_options.proto</summary>
  public static partial class ServiceOptionsExtensions {
    public static readonly pb::Extension<global::Google.Protobuf.ServiceOptions, global::Bgs.Protocol.BGSServiceOptions> ServiceOptions_ =
      new pb::Extension<global::Google.Protobuf.ServiceOptions, global::Bgs.Protocol.BGSServiceOptions>(90000, pb::FieldCodec.ForMessage(720002, global::Bgs.Protocol.BGSServiceOptions.Parser));
    public static readonly pb::Extension<global::Google.Protobuf.ServiceOptions, global::Bgs.Protocol.SDKServiceOptions> SdkServiceOptions =
      new pb::Extension<global::Google.Protobuf.ServiceOptions, global::Bgs.Protocol.SDKServiceOptions>(90001, pb::FieldCodec.ForMessage(720010, global::Bgs.Protocol.SDKServiceOptions.Parser));
  }

  #region Messages
  public sealed partial class BGSServiceOptions : pb::IMessage<BGSServiceOptions> {
    private static readonly pb::MessageParser<BGSServiceOptions> _parser = new pb::MessageParser<BGSServiceOptions>(() => new BGSServiceOptions());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BGSServiceOptions> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bgs.Protocol.ServiceOptionsReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BGSServiceOptions() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BGSServiceOptions(BGSServiceOptions other) : this() {
      _hasBits0 = other._hasBits0;
      descriptorName_ = other.descriptorName_;
      version_ = other.version_;
      shardName_ = other.shardName_;
      resolveClientInstance_ = other.resolveClientInstance_;
      type_ = other.type_;
      apiType_ = other.apiType_;
      isGlobal_ = other.isGlobal_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BGSServiceOptions Clone() {
      return new BGSServiceOptions(this);
    }

    /// <summary>Field number for the "descriptor_name" field.</summary>
    public const int DescriptorNameFieldNumber = 1;
    private readonly static string DescriptorNameDefaultValue = "";

    private string descriptorName_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DescriptorName {
      get { return descriptorName_ ?? DescriptorNameDefaultValue; }
      set {
        descriptorName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "descriptor_name" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasDescriptorName {
      get { return descriptorName_ != null; }
    }
    /// <summary>Clears the value of the "descriptor_name" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearDescriptorName() {
      descriptorName_ = null;
    }

    /// <summary>Field number for the "version" field.</summary>
    public const int VersionFieldNumber = 4;
    private readonly static uint VersionDefaultValue = 0;

    private uint version_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Version {
      get { if ((_hasBits0 & 1) != 0) { return version_; } else { return VersionDefaultValue; } }
      set {
        _hasBits0 |= 1;
        version_ = value;
      }
    }
    /// <summary>Gets whether the "version" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasVersion {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "version" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearVersion() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "shard_name" field.</summary>
    public const int ShardNameFieldNumber = 5;
    private readonly static string ShardNameDefaultValue = "";

    private string shardName_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ShardName {
      get { return shardName_ ?? ShardNameDefaultValue; }
      set {
        shardName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "shard_name" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasShardName {
      get { return shardName_ != null; }
    }
    /// <summary>Clears the value of the "shard_name" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearShardName() {
      shardName_ = null;
    }

    /// <summary>Field number for the "resolve_client_instance" field.</summary>
    public const int ResolveClientInstanceFieldNumber = 6;
    private readonly static bool ResolveClientInstanceDefaultValue = false;

    private bool resolveClientInstance_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool ResolveClientInstance {
      get { if ((_hasBits0 & 2) != 0) { return resolveClientInstance_; } else { return ResolveClientInstanceDefaultValue; } }
      set {
        _hasBits0 |= 2;
        resolveClientInstance_ = value;
      }
    }
    /// <summary>Gets whether the "resolve_client_instance" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasResolveClientInstance {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "resolve_client_instance" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearResolveClientInstance() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 7;
    private readonly static global::Bgs.Protocol.BGSServiceOptions.Types.ServiceType TypeDefaultValue = global::Bgs.Protocol.BGSServiceOptions.Types.ServiceType.Rpc;

    private global::Bgs.Protocol.BGSServiceOptions.Types.ServiceType type_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bgs.Protocol.BGSServiceOptions.Types.ServiceType Type {
      get { if ((_hasBits0 & 4) != 0) { return type_; } else { return TypeDefaultValue; } }
      set {
        _hasBits0 |= 4;
        type_ = value;
      }
    }
    /// <summary>Gets whether the "type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasType {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearType() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "api_type" field.</summary>
    public const int ApiTypeFieldNumber = 8;
    private readonly static string ApiTypeDefaultValue = "";

    private string apiType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ApiType {
      get { return apiType_ ?? ApiTypeDefaultValue; }
      set {
        apiType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "api_type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasApiType {
      get { return apiType_ != null; }
    }
    /// <summary>Clears the value of the "api_type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearApiType() {
      apiType_ = null;
    }

    /// <summary>Field number for the "is_global" field.</summary>
    public const int IsGlobalFieldNumber = 9;
    private readonly static bool IsGlobalDefaultValue = false;

    private bool isGlobal_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsGlobal {
      get { if ((_hasBits0 & 8) != 0) { return isGlobal_; } else { return IsGlobalDefaultValue; } }
      set {
        _hasBits0 |= 8;
        isGlobal_ = value;
      }
    }
    /// <summary>Gets whether the "is_global" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasIsGlobal {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "is_global" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearIsGlobal() {
      _hasBits0 &= ~8;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BGSServiceOptions);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BGSServiceOptions other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (DescriptorName != other.DescriptorName) return false;
      if (Version != other.Version) return false;
      if (ShardName != other.ShardName) return false;
      if (ResolveClientInstance != other.ResolveClientInstance) return false;
      if (Type != other.Type) return false;
      if (ApiType != other.ApiType) return false;
      if (IsGlobal != other.IsGlobal) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasDescriptorName) hash ^= DescriptorName.GetHashCode();
      if (HasVersion) hash ^= Version.GetHashCode();
      if (HasShardName) hash ^= ShardName.GetHashCode();
      if (HasResolveClientInstance) hash ^= ResolveClientInstance.GetHashCode();
      if (HasType) hash ^= Type.GetHashCode();
      if (HasApiType) hash ^= ApiType.GetHashCode();
      if (HasIsGlobal) hash ^= IsGlobal.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasDescriptorName) {
        output.WriteRawTag(10);
        output.WriteString(DescriptorName);
      }
      if (HasVersion) {
        output.WriteRawTag(32);
        output.WriteUInt32(Version);
      }
      if (HasShardName) {
        output.WriteRawTag(42);
        output.WriteString(ShardName);
      }
      if (HasResolveClientInstance) {
        output.WriteRawTag(48);
        output.WriteBool(ResolveClientInstance);
      }
      if (HasType) {
        output.WriteRawTag(56);
        output.WriteEnum((int) Type);
      }
      if (HasApiType) {
        output.WriteRawTag(66);
        output.WriteString(ApiType);
      }
      if (HasIsGlobal) {
        output.WriteRawTag(72);
        output.WriteBool(IsGlobal);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasDescriptorName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DescriptorName);
      }
      if (HasVersion) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Version);
      }
      if (HasShardName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ShardName);
      }
      if (HasResolveClientInstance) {
        size += 1 + 1;
      }
      if (HasType) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (HasApiType) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ApiType);
      }
      if (HasIsGlobal) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BGSServiceOptions other) {
      if (other == null) {
        return;
      }
      if (other.HasDescriptorName) {
        DescriptorName = other.DescriptorName;
      }
      if (other.HasVersion) {
        Version = other.Version;
      }
      if (other.HasShardName) {
        ShardName = other.ShardName;
      }
      if (other.HasResolveClientInstance) {
        ResolveClientInstance = other.ResolveClientInstance;
      }
      if (other.HasType) {
        Type = other.Type;
      }
      if (other.HasApiType) {
        ApiType = other.ApiType;
      }
      if (other.HasIsGlobal) {
        IsGlobal = other.IsGlobal;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            DescriptorName = input.ReadString();
            break;
          }
          case 32: {
            Version = input.ReadUInt32();
            break;
          }
          case 42: {
            ShardName = input.ReadString();
            break;
          }
          case 48: {
            ResolveClientInstance = input.ReadBool();
            break;
          }
          case 56: {
            Type = (global::Bgs.Protocol.BGSServiceOptions.Types.ServiceType) input.ReadEnum();
            break;
          }
          case 66: {
            ApiType = input.ReadString();
            break;
          }
          case 72: {
            IsGlobal = input.ReadBool();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the BGSServiceOptions message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum ServiceType {
        [pbr::OriginalName("SERVICE_TYPE_RPC")] Rpc = 0,
        [pbr::OriginalName("SERVICE_TYPE_RPC_DIRECT")] RpcDirect = 1,
        [pbr::OriginalName("SERVICE_TYPE_EVENT")] Event = 2,
        [pbr::OriginalName("SERVICE_TYPE_EVENT_BROADCAST")] EventBroadcast = 3,
      }

    }
    #endregion

  }

  public sealed partial class SDKServiceOptions : pb::IMessage<SDKServiceOptions> {
    private static readonly pb::MessageParser<SDKServiceOptions> _parser = new pb::MessageParser<SDKServiceOptions>(() => new SDKServiceOptions());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SDKServiceOptions> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bgs.Protocol.ServiceOptionsReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SDKServiceOptions() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SDKServiceOptions(SDKServiceOptions other) : this() {
      _hasBits0 = other._hasBits0;
      inbound_ = other.inbound_;
      outbound_ = other.outbound_;
      useClientId_ = other.useClientId_;
      deprecated32Bit_ = other.deprecated32Bit_;
      obsolete_ = other.obsolete_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SDKServiceOptions Clone() {
      return new SDKServiceOptions(this);
    }

    /// <summary>Field number for the "inbound" field.</summary>
    public const int InboundFieldNumber = 1;
    private readonly static bool InboundDefaultValue = false;

    private bool inbound_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Inbound {
      get { if ((_hasBits0 & 1) != 0) { return inbound_; } else { return InboundDefaultValue; } }
      set {
        _hasBits0 |= 1;
        inbound_ = value;
      }
    }
    /// <summary>Gets whether the "inbound" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasInbound {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "inbound" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearInbound() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "outbound" field.</summary>
    public const int OutboundFieldNumber = 2;
    private readonly static bool OutboundDefaultValue = false;

    private bool outbound_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Outbound {
      get { if ((_hasBits0 & 2) != 0) { return outbound_; } else { return OutboundDefaultValue; } }
      set {
        _hasBits0 |= 2;
        outbound_ = value;
      }
    }
    /// <summary>Gets whether the "outbound" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasOutbound {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "outbound" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearOutbound() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "use_client_id" field.</summary>
    public const int UseClientIdFieldNumber = 3;
    private readonly static bool UseClientIdDefaultValue = false;

    private bool useClientId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool UseClientId {
      get { if ((_hasBits0 & 4) != 0) { return useClientId_; } else { return UseClientIdDefaultValue; } }
      set {
        _hasBits0 |= 4;
        useClientId_ = value;
      }
    }
    /// <summary>Gets whether the "use_client_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasUseClientId {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "use_client_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearUseClientId() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "deprecated_32_bit" field.</summary>
    public const int Deprecated32BitFieldNumber = 4;
    private readonly static bool Deprecated32BitDefaultValue = false;

    private bool deprecated32Bit_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Deprecated32Bit {
      get { if ((_hasBits0 & 8) != 0) { return deprecated32Bit_; } else { return Deprecated32BitDefaultValue; } }
      set {
        _hasBits0 |= 8;
        deprecated32Bit_ = value;
      }
    }
    /// <summary>Gets whether the "deprecated_32_bit" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasDeprecated32Bit {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "deprecated_32_bit" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearDeprecated32Bit() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "obsolete" field.</summary>
    public const int ObsoleteFieldNumber = 5;
    private readonly static bool ObsoleteDefaultValue = false;

    private bool obsolete_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Obsolete {
      get { if ((_hasBits0 & 16) != 0) { return obsolete_; } else { return ObsoleteDefaultValue; } }
      set {
        _hasBits0 |= 16;
        obsolete_ = value;
      }
    }
    /// <summary>Gets whether the "obsolete" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasObsolete {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "obsolete" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearObsolete() {
      _hasBits0 &= ~16;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SDKServiceOptions);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SDKServiceOptions other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Inbound != other.Inbound) return false;
      if (Outbound != other.Outbound) return false;
      if (UseClientId != other.UseClientId) return false;
      if (Deprecated32Bit != other.Deprecated32Bit) return false;
      if (Obsolete != other.Obsolete) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasInbound) hash ^= Inbound.GetHashCode();
      if (HasOutbound) hash ^= Outbound.GetHashCode();
      if (HasUseClientId) hash ^= UseClientId.GetHashCode();
      if (HasDeprecated32Bit) hash ^= Deprecated32Bit.GetHashCode();
      if (HasObsolete) hash ^= Obsolete.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HasInbound) {
        output.WriteRawTag(8);
        output.WriteBool(Inbound);
      }
      if (HasOutbound) {
        output.WriteRawTag(16);
        output.WriteBool(Outbound);
      }
      if (HasUseClientId) {
        output.WriteRawTag(24);
        output.WriteBool(UseClientId);
      }
      if (HasDeprecated32Bit) {
        output.WriteRawTag(32);
        output.WriteBool(Deprecated32Bit);
      }
      if (HasObsolete) {
        output.WriteRawTag(40);
        output.WriteBool(Obsolete);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasInbound) {
        size += 1 + 1;
      }
      if (HasOutbound) {
        size += 1 + 1;
      }
      if (HasUseClientId) {
        size += 1 + 1;
      }
      if (HasDeprecated32Bit) {
        size += 1 + 1;
      }
      if (HasObsolete) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SDKServiceOptions other) {
      if (other == null) {
        return;
      }
      if (other.HasInbound) {
        Inbound = other.Inbound;
      }
      if (other.HasOutbound) {
        Outbound = other.Outbound;
      }
      if (other.HasUseClientId) {
        UseClientId = other.UseClientId;
      }
      if (other.HasDeprecated32Bit) {
        Deprecated32Bit = other.Deprecated32Bit;
      }
      if (other.HasObsolete) {
        Obsolete = other.Obsolete;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Inbound = input.ReadBool();
            break;
          }
          case 16: {
            Outbound = input.ReadBool();
            break;
          }
          case 24: {
            UseClientId = input.ReadBool();
            break;
          }
          case 32: {
            Deprecated32Bit = input.ReadBool();
            break;
          }
          case 40: {
            Obsolete = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
